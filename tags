!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACLOCAL	./zeromq/Makefile	/^ACLOCAL = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run aclocal-1.11$/;"	m
ACLOCAL	./zeromq/builds/msvc/Makefile	/^ACLOCAL = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run aclocal-1.11$/;"	m
ACLOCAL	./zeromq/doc/Makefile	/^ACLOCAL = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run aclocal-1.11$/;"	m
ACLOCAL	./zeromq/foreign/openpgm/Makefile	/^ACLOCAL = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run aclocal-1.11$/;"	m
ACLOCAL	./zeromq/perf/Makefile	/^ACLOCAL = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run aclocal-1.11$/;"	m
ACLOCAL	./zeromq/src/Makefile	/^ACLOCAL = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run aclocal-1.11$/;"	m
ACLOCAL	./zeromq/tests/Makefile	/^ACLOCAL = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run aclocal-1.11$/;"	m
ACLOCAL_AMFLAGS	./zeromq/Makefile	/^ACLOCAL_AMFLAGS = -I config$/;"	m
ACLOCAL_M4	./zeromq/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	./zeromq/builds/msvc/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	./zeromq/doc/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	./zeromq/foreign/openpgm/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	./zeromq/perf/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	./zeromq/src/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	./zeromq/tests/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
AI_ADDRCONFIG	./zeromq/src/tcp_address.cpp	44;"	d	file:
AI_NUMERICSERV	./zeromq/src/windows.hpp	179;"	d
AMTAR	./zeromq/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	./zeromq/builds/msvc/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	./zeromq/doc/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	./zeromq/foreign/openpgm/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	./zeromq/perf/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	./zeromq/src/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	./zeromq/tests/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AM_DEFAULT_VERBOSITY	./zeromq/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	./zeromq/builds/msvc/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	./zeromq/doc/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	./zeromq/foreign/openpgm/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	./zeromq/perf/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	./zeromq/src/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	./zeromq/tests/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_RECURSIVE_TARGETS	./zeromq/Makefile	/^AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \\$/;"	m
AM_RECURSIVE_TARGETS	./zeromq/foreign/openpgm/Makefile	/^AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \\$/;"	m
AM_V_CC	./zeromq/src/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CC	./zeromq/tests/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CCLD	./zeromq/src/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CCLD	./zeromq/tests/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CXX	./zeromq/perf/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	./zeromq/src/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	./zeromq/tests/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXXLD	./zeromq/perf/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	./zeromq/src/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	./zeromq/tests/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_GEN	./zeromq/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	./zeromq/builds/msvc/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	./zeromq/doc/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	./zeromq/foreign/openpgm/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	./zeromq/perf/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	./zeromq/src/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	./zeromq/tests/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_at	./zeromq/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	./zeromq/builds/msvc/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	./zeromq/doc/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	./zeromq/foreign/openpgm/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	./zeromq/perf/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	./zeromq/src/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	./zeromq/tests/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_lt	./zeromq/perf/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AM_V_lt	./zeromq/src/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AM_V_lt	./zeromq/tests/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AR	./zeromq/Makefile	/^AR = ar$/;"	m
AR	./zeromq/builds/msvc/Makefile	/^AR = ar$/;"	m
AR	./zeromq/doc/Makefile	/^AR = ar$/;"	m
AR	./zeromq/foreign/openpgm/Makefile	/^AR = ar$/;"	m
AR	./zeromq/perf/Makefile	/^AR = ar$/;"	m
AR	./zeromq/src/Makefile	/^AR = ar$/;"	m
AR	./zeromq/tests/Makefile	/^AR = ar$/;"	m
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	410;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	413;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	416;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	420;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	422;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	424;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	428;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	431;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	434;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	439;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	442;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	445;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	449;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	395;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	398;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	401;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	405;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	407;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	409;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	413;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	416;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	419;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	424;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	427;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	430;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	434;"	d	file:
AS	./zeromq/Makefile	/^AS = as$/;"	m
AS	./zeromq/builds/msvc/Makefile	/^AS = as$/;"	m
AS	./zeromq/doc/Makefile	/^AS = as$/;"	m
AS	./zeromq/foreign/openpgm/Makefile	/^AS = as$/;"	m
AS	./zeromq/perf/Makefile	/^AS = as$/;"	m
AS	./zeromq/src/Makefile	/^AS = as$/;"	m
AS	./zeromq/tests/Makefile	/^AS = as$/;"	m
ASCIIDOC	./zeromq/Makefile	/^ASCIIDOC = $/;"	m
ASCIIDOC	./zeromq/builds/msvc/Makefile	/^ASCIIDOC = $/;"	m
ASCIIDOC	./zeromq/doc/Makefile	/^ASCIIDOC = $/;"	m
ASCIIDOC	./zeromq/foreign/openpgm/Makefile	/^ASCIIDOC = $/;"	m
ASCIIDOC	./zeromq/perf/Makefile	/^ASCIIDOC = $/;"	m
ASCIIDOC	./zeromq/src/Makefile	/^ASCIIDOC = $/;"	m
ASCIIDOC	./zeromq/tests/Makefile	/^ASCIIDOC = $/;"	m
AUTOCONF	./zeromq/Makefile	/^AUTOCONF = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run autoconf$/;"	m
AUTOCONF	./zeromq/builds/msvc/Makefile	/^AUTOCONF = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run autoconf$/;"	m
AUTOCONF	./zeromq/doc/Makefile	/^AUTOCONF = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run autoconf$/;"	m
AUTOCONF	./zeromq/foreign/openpgm/Makefile	/^AUTOCONF = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run autoconf$/;"	m
AUTOCONF	./zeromq/perf/Makefile	/^AUTOCONF = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run autoconf$/;"	m
AUTOCONF	./zeromq/src/Makefile	/^AUTOCONF = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run autoconf$/;"	m
AUTOCONF	./zeromq/tests/Makefile	/^AUTOCONF = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run autoconf$/;"	m
AUTOHEADER	./zeromq/Makefile	/^AUTOHEADER = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run autoheader$/;"	m
AUTOHEADER	./zeromq/builds/msvc/Makefile	/^AUTOHEADER = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run autoheader$/;"	m
AUTOHEADER	./zeromq/doc/Makefile	/^AUTOHEADER = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run autoheader$/;"	m
AUTOHEADER	./zeromq/foreign/openpgm/Makefile	/^AUTOHEADER = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run autoheader$/;"	m
AUTOHEADER	./zeromq/perf/Makefile	/^AUTOHEADER = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run autoheader$/;"	m
AUTOHEADER	./zeromq/src/Makefile	/^AUTOHEADER = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run autoheader$/;"	m
AUTOHEADER	./zeromq/tests/Makefile	/^AUTOHEADER = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run autoheader$/;"	m
AUTOMAKE	./zeromq/Makefile	/^AUTOMAKE = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run automake-1.11$/;"	m
AUTOMAKE	./zeromq/builds/msvc/Makefile	/^AUTOMAKE = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run automake-1.11$/;"	m
AUTOMAKE	./zeromq/doc/Makefile	/^AUTOMAKE = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run automake-1.11$/;"	m
AUTOMAKE	./zeromq/foreign/openpgm/Makefile	/^AUTOMAKE = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run automake-1.11$/;"	m
AUTOMAKE	./zeromq/perf/Makefile	/^AUTOMAKE = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run automake-1.11$/;"	m
AUTOMAKE	./zeromq/src/Makefile	/^AUTOMAKE = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run automake-1.11$/;"	m
AUTOMAKE	./zeromq/tests/Makefile	/^AUTOMAKE = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run automake-1.11$/;"	m
AWK	./zeromq/Makefile	/^AWK = gawk$/;"	m
AWK	./zeromq/builds/msvc/Makefile	/^AWK = gawk$/;"	m
AWK	./zeromq/doc/Makefile	/^AWK = gawk$/;"	m
AWK	./zeromq/foreign/openpgm/Makefile	/^AWK = gawk$/;"	m
AWK	./zeromq/perf/Makefile	/^AWK = gawk$/;"	m
AWK	./zeromq/src/Makefile	/^AWK = gawk$/;"	m
AWK	./zeromq/tests/Makefile	/^AWK = gawk$/;"	m
CC	./Makefile	/^CC=gcc$/;"	m
CC	./zeromq/Makefile	/^CC = gcc$/;"	m
CC	./zeromq/builds/msvc/Makefile	/^CC = gcc$/;"	m
CC	./zeromq/doc/Makefile	/^CC = gcc$/;"	m
CC	./zeromq/foreign/openpgm/Makefile	/^CC = gcc$/;"	m
CC	./zeromq/perf/Makefile	/^CC = gcc$/;"	m
CC	./zeromq/src/Makefile	/^CC = gcc$/;"	m
CC	./zeromq/tests/Makefile	/^CC = gcc$/;"	m
CCDEPMODE	./zeromq/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	./zeromq/builds/msvc/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	./zeromq/doc/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	./zeromq/foreign/openpgm/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	./zeromq/perf/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	./zeromq/src/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	./zeromq/tests/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCLD	./zeromq/src/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	./zeromq/tests/Makefile	/^CCLD = $(CC)$/;"	m
CFLAGS	./zeromq/Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	./zeromq/builds/msvc/Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	./zeromq/doc/Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	./zeromq/foreign/openpgm/Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	./zeromq/perf/Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	./zeromq/src/Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	./zeromq/tests/Makefile	/^CFLAGS = -g -O2$/;"	m
CMAKE_BINARY_DIR	./cmake-build-debug/Makefile	/^CMAKE_BINARY_DIR = \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/cmake-build-debug$/;"	m
CMAKE_COMMAND	./cmake-build-debug/Makefile	/^CMAKE_COMMAND = \/home\/ntauthority\/Downloads\/clion-2017.3.3\/bin\/cmake\/bin\/cmake$/;"	m
CMAKE_SOURCE_DIR	./cmake-build-debug/Makefile	/^CMAKE_SOURCE_DIR = \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl$/;"	m
COMPILE	./zeromq/src/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	./zeromq/tests/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	101;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	108;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	115;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	122;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	129;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	137;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	142;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	149;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	152;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	158;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	161;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	176;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	190;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	19;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	200;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	218;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	227;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	230;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	245;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	258;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	276;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	279;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	282;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	42;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	50;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	56;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	62;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	71;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	80;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	94;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	101;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	108;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	115;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	122;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	129;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	13;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	142;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	149;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	152;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	155;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	170;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	184;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	198;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	19;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	216;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	225;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	228;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	243;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	261;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	264;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	267;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	42;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	50;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	56;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	62;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	71;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	80;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	94;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	103;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	110;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	117;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	124;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	130;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	138;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	144;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	165;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	180;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	191;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	202;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	221;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	233;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	238;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	247;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	24;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	252;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	261;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	266;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	43;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	51;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	58;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	64;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	73;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	83;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	88;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	96;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	103;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	110;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	124;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	130;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	138;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	144;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	159;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	174;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	186;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	188;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	200;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	219;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	231;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	236;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	246;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	24;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	251;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	43;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	51;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	73;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	83;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	88;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	96;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	104;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	111;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	118;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	131;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	139;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	145;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	166;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	181;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	193;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	203;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	222;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	234;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	239;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	248;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	253;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	25;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	262;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	267;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	44;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	52;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	59;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	65;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	74;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	84;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	89;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	97;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	111;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	118;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	125;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	139;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	145;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	160;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	16;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	175;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	191;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	201;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	220;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	232;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	237;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	247;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	252;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	25;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	52;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	59;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	74;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	84;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	89;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	97;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	105;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	112;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	119;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	126;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	133;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	146;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	167;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	182;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	196;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	207;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	210;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	223;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	235;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	240;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	249;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	254;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	263;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	268;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	27;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	29;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	46;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	53;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	67;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	76;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	85;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	90;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	98;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	105;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	112;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	126;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	133;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	146;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	161;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	176;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	194;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	205;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	208;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	221;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	233;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	238;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	248;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	253;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	27;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	29;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	46;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	53;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	67;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	76;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	98;"	d	file:
COMPILER_VERSION_TWEAK	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	173;"	d	file:
COMPILER_VERSION_TWEAK	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	214;"	d	file:
COMPILER_VERSION_TWEAK	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	33;"	d	file:
COMPILER_VERSION_TWEAK	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	167;"	d	file:
COMPILER_VERSION_TWEAK	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	212;"	d	file:
COMPILER_VERSION_TWEAK	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	33;"	d	file:
CONFIG_CLEAN_FILES	./zeromq/Makefile	/^CONFIG_CLEAN_FILES = builds\/redhat\/zeromq.spec$/;"	m
CONFIG_CLEAN_FILES	./zeromq/builds/msvc/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	./zeromq/doc/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	./zeromq/foreign/openpgm/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	./zeromq/perf/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	./zeromq/src/Makefile	/^CONFIG_CLEAN_FILES = libzmq.pc$/;"	m
CONFIG_CLEAN_FILES	./zeromq/tests/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	./zeromq/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	./zeromq/builds/msvc/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	./zeromq/doc/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	./zeromq/foreign/openpgm/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	./zeromq/perf/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	./zeromq/src/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	./zeromq/tests/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_HEADER	./zeromq/Makefile	/^CONFIG_HEADER = $(top_builddir)\/src\/platform.hpp$/;"	m
CONFIG_HEADER	./zeromq/builds/msvc/Makefile	/^CONFIG_HEADER = $(top_builddir)\/src\/platform.hpp$/;"	m
CONFIG_HEADER	./zeromq/doc/Makefile	/^CONFIG_HEADER = $(top_builddir)\/src\/platform.hpp$/;"	m
CONFIG_HEADER	./zeromq/foreign/openpgm/Makefile	/^CONFIG_HEADER = $(top_builddir)\/src\/platform.hpp$/;"	m
CONFIG_HEADER	./zeromq/perf/Makefile	/^CONFIG_HEADER = $(top_builddir)\/src\/platform.hpp$/;"	m
CONFIG_HEADER	./zeromq/src/Makefile	/^CONFIG_HEADER = platform.hpp$/;"	m
CONFIG_HEADER	./zeromq/tests/Makefile	/^CONFIG_HEADER = $(top_builddir)\/src\/platform.hpp$/;"	m
COPY_DATA	./include/yampl/ISocketFactory.h	/^  COPY_DATA = 0,$/;"	e	enum:yampl::Semantics
CPP	./zeromq/Makefile	/^CPP = gcc -E$/;"	m
CPP	./zeromq/builds/msvc/Makefile	/^CPP = gcc -E$/;"	m
CPP	./zeromq/doc/Makefile	/^CPP = gcc -E$/;"	m
CPP	./zeromq/foreign/openpgm/Makefile	/^CPP = gcc -E$/;"	m
CPP	./zeromq/perf/Makefile	/^CPP = gcc -E$/;"	m
CPP	./zeromq/src/Makefile	/^CPP = gcc -E$/;"	m
CPP	./zeromq/tests/Makefile	/^CPP = gcc -E$/;"	m
CPPFLAGS	./zeromq/Makefile	/^CPPFLAGS = -pedantic -Werror -Wall -D_GNU_SOURCE -D_REENTRANT -D_THREAD_SAFE  -DZMQ_FORCE_EPOLL$/;"	m
CPPFLAGS	./zeromq/builds/msvc/Makefile	/^CPPFLAGS = -pedantic -Werror -Wall -D_GNU_SOURCE -D_REENTRANT -D_THREAD_SAFE  -DZMQ_FORCE_EPOLL$/;"	m
CPPFLAGS	./zeromq/doc/Makefile	/^CPPFLAGS = -pedantic -Werror -Wall -D_GNU_SOURCE -D_REENTRANT -D_THREAD_SAFE  -DZMQ_FORCE_EPOLL$/;"	m
CPPFLAGS	./zeromq/foreign/openpgm/Makefile	/^CPPFLAGS = -pedantic -Werror -Wall -D_GNU_SOURCE -D_REENTRANT -D_THREAD_SAFE  -DZMQ_FORCE_EPOLL$/;"	m
CPPFLAGS	./zeromq/perf/Makefile	/^CPPFLAGS = -pedantic -Werror -Wall -D_GNU_SOURCE -D_REENTRANT -D_THREAD_SAFE  -DZMQ_FORCE_EPOLL$/;"	m
CPPFLAGS	./zeromq/src/Makefile	/^CPPFLAGS = -pedantic -Werror -Wall -D_GNU_SOURCE -D_REENTRANT -D_THREAD_SAFE  -DZMQ_FORCE_EPOLL$/;"	m
CPPFLAGS	./zeromq/tests/Makefile	/^CPPFLAGS = -pedantic -Werror -Wall -D_GNU_SOURCE -D_REENTRANT -D_THREAD_SAFE  -DZMQ_FORCE_EPOLL$/;"	m
CTAGS	./zeromq/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	./zeromq/foreign/openpgm/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	./zeromq/perf/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	./zeromq/src/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	./zeromq/tests/Makefile	/^CTAGS = ctags$/;"	m
CXX	./Makefile	/^CXX = g++$/;"	m
CXX	./examples/Makefile	/^CXX = g++$/;"	m
CXX	./tests/Makefile	/^CXX = g++$/;"	m
CXX	./zeromq/Makefile	/^CXX = g++$/;"	m
CXX	./zeromq/builds/msvc/Makefile	/^CXX = g++$/;"	m
CXX	./zeromq/doc/Makefile	/^CXX = g++$/;"	m
CXX	./zeromq/foreign/openpgm/Makefile	/^CXX = g++$/;"	m
CXX	./zeromq/perf/Makefile	/^CXX = g++$/;"	m
CXX	./zeromq/src/Makefile	/^CXX = g++$/;"	m
CXX	./zeromq/tests/Makefile	/^CXX = g++$/;"	m
CXXCOMPILE	./zeromq/perf/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	./zeromq/src/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	./zeromq/tests/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCPP	./zeromq/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	./zeromq/builds/msvc/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	./zeromq/doc/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	./zeromq/foreign/openpgm/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	./zeromq/perf/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	./zeromq/src/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	./zeromq/tests/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXDEPMODE	./zeromq/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	./zeromq/builds/msvc/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	./zeromq/doc/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	./zeromq/foreign/openpgm/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	./zeromq/perf/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	./zeromq/src/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	./zeromq/tests/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXFLAGS	./Makefile	/^CXXFLAGS = -O2 -g -Wall -Iinclude -fPIC -Izeromq\/include$/;"	m
CXXFLAGS	./examples/Makefile	/^CXXFLAGS = -O2 -g -Wall -I..\/include -DNDEBUG -Wall$/;"	m
CXXFLAGS	./tests/Makefile	/^CXXFLAGS = -O2 -g -Wall -I..\/include -Wall$/;"	m
CXXFLAGS	./zeromq/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	./zeromq/builds/msvc/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	./zeromq/doc/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	./zeromq/foreign/openpgm/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	./zeromq/perf/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	./zeromq/src/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	./zeromq/tests/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXLD	./zeromq/perf/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	./zeromq/src/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	./zeromq/tests/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLINK	./zeromq/perf/Makefile	/^CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
CXXLINK	./zeromq/src/Makefile	/^CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
CXXLINK	./zeromq/tests/Makefile	/^CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
CYGPATH_W	./zeromq/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	./zeromq/builds/msvc/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	./zeromq/doc/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	./zeromq/foreign/openpgm/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	./zeromq/perf/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	./zeromq/src/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	./zeromq/tests/Makefile	/^CYGPATH_W = echo$/;"	m
C_DIALECT	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	522;"	d	file:
C_DIALECT	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	524;"	d	file:
C_DIALECT	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	527;"	d	file:
C_DIALECT	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	529;"	d	file:
C_DIALECT	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	531;"	d	file:
Channel	./include/yampl/Channel.h	/^    Channel(const std::string &name, Context context) : name(name), context(context){}$/;"	f	struct:yampl::Channel
Channel	./include/yampl/Channel.h	/^struct Channel{$/;"	s	namespace:yampl
ClientSocket	./include/yampl/generic/ClientSocket.h	/^class ClientSocket: public ISocket{$/;"	c	namespace:yampl
ClientSocket	./include/yampl/generic/ClientSocket.h	/^inline ClientSocket<T>::ClientSocket(const Channel& channel, Semantics semantics, void (*deallocator)(void *, void *), const std::string& name) : m_announce("\/tmp\/" + channel.name + "_announce", false), m_private(0), m_uuid(name){$/;"	f	class:yampl::ClientSocket
ClientSocket	./include/yampl/pipe/ClientSocket.h	/^typedef ClientSocket<SimpleClientSocket> ClientSocket;$/;"	t	namespace:yampl::pipe
ClientSocket	./include/yampl/shm/ClientSocket.h	/^class ClientSocket : public yampl::ClientSocket<SimpleClientSocket>{$/;"	c	namespace:yampl::shm
ClientSocket	./include/yampl/shm/ClientSocket.h	/^inline ClientSocket::ClientSocket(const Channel& channel, Semantics semantics, void (*deallocator)(void *, void *), const std::string& name) : yampl::ClientSocket<SimpleClientSocket>(channel, semantics, deallocator, name){$/;"	f	class:yampl::shm::ClientSocket
ClientSocket	./include/yampl/zeromq/ClientSocket.h	/^class ClientSocket : public SocketBase{$/;"	c	namespace:yampl::zeromq
ClientSocket	./src/zeromq/ClientSocket.cpp	/^ClientSocket::ClientSocket(Channel channel, zmq::context_t *context, Semantics semantics, void (*deallocator)(void *, void *), const std::string& name) : SocketBase(channel, context, semantics, deallocator, ZMQ_DEALER), m_isConnected(false){$/;"	f	class:yampl::zeromq::ClientSocket
ConsumerSocket	./include/yampl/pipe/ConsumerSocket.h	/^class ConsumerSocket : public PipeSocketBase{$/;"	c	namespace:yampl::pipe
ConsumerSocket	./include/yampl/pipe/ConsumerSocket.h	/^inline ConsumerSocket::ConsumerSocket(const Channel &channel, Semantics semantics) : PipeSocketBase(channel, PIPE_PULL, semantics, 0){$/;"	f	class:yampl::pipe::ConsumerSocket
ConsumerSocket	./include/yampl/shm/ConsumerSocket.h	/^    ConsumerSocket(const Channel &channel, Semantics semantics) : PipeSocketBase(channel, semantics, 0){$/;"	f	class:yampl::shm::ConsumerSocket
ConsumerSocket	./include/yampl/shm/ConsumerSocket.h	/^class ConsumerSocket : public PipeSocketBase{$/;"	c	namespace:yampl::shm
Context	./include/yampl/Channel.h	/^enum Context{$/;"	g	namespace:yampl
CreateProcess	./zeromq/config/ltmain.sh	/^   CreateProcess().  We must quote the arguments since Win32 CreateProcess()$/;"	f
CreateProcess	./zeromq/libtool	/^   CreateProcess().  We must quote the arguments since Win32 CreateProcess()$/;"	f
DATA	./zeromq/src/Makefile	/^DATA = $(pkgconfig_DATA)$/;"	m
DEC	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	453;"	d	file:
DEC	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	438;"	d	file:
DEFAULT_ID	./src/SocketFactory.cpp	/^std::string DEFAULT_ID = "";$/;"	m	namespace:yampl	file:
DEFAULT_INCLUDES	./zeromq/perf/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)\/src$/;"	m
DEFAULT_INCLUDES	./zeromq/src/Makefile	/^DEFAULT_INCLUDES = -I.$/;"	m
DEFAULT_INCLUDES	./zeromq/tests/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)\/src$/;"	m
DEFS	./zeromq/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	./zeromq/builds/msvc/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	./zeromq/doc/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	./zeromq/foreign/openpgm/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	./zeromq/perf/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	./zeromq/src/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	./zeromq/tests/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEPDIR	./zeromq/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	./zeromq/builds/msvc/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	./zeromq/doc/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	./zeromq/foreign/openpgm/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	./zeromq/perf/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	./zeromq/src/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	./zeromq/tests/Makefile	/^DEPDIR = .deps$/;"	m
DEPS	./Makefile	/^DEPS = $(SOURCES:.cpp=.d)$/;"	m
DISTFILES	./zeromq/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	./zeromq/builds/msvc/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	./zeromq/doc/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	./zeromq/foreign/openpgm/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	./zeromq/perf/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	./zeromq/src/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	./zeromq/tests/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTRIBUTED	./include/yampl/Channel.h	/^  DISTRIBUTED$/;"	e	enum:yampl::Context
DIST_ARCHIVES	./zeromq/Makefile	/^DIST_ARCHIVES = $(distdir).tar.gz $(distdir).zip$/;"	m
DIST_COMMON	./zeromq/Makefile	/^DIST_COMMON = README $(am__configure_deps) $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	./zeromq/builds/msvc/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in$/;"	m
DIST_COMMON	./zeromq/doc/Makefile	/^DIST_COMMON = $(dist_man_MANS) $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	./zeromq/foreign/openpgm/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in$/;"	m
DIST_COMMON	./zeromq/perf/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in$/;"	m
DIST_COMMON	./zeromq/src/Makefile	/^DIST_COMMON = $(include_HEADERS) $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	./zeromq/tests/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in$/;"	m
DIST_SOURCES	./zeromq/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	./zeromq/builds/msvc/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	./zeromq/doc/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	./zeromq/foreign/openpgm/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	./zeromq/perf/Makefile	/^DIST_SOURCES = $(inproc_lat_SOURCES) $(inproc_thr_SOURCES) \\$/;"	m
DIST_SOURCES	./zeromq/src/Makefile	/^DIST_SOURCES = $(libzmq_la_SOURCES)$/;"	m
DIST_SOURCES	./zeromq/tests/Makefile	/^DIST_SOURCES = $(test_connect_delay_SOURCES) \\$/;"	m
DIST_SUBDIRS	./zeromq/Makefile	/^DIST_SUBDIRS = foreign\/openpgm src doc perf tests builds\/msvc$/;"	m
DIST_SUBDIRS	./zeromq/foreign/openpgm/Makefile	/^DIST_SUBDIRS = $/;"	m
DLLTOOL	./zeromq/Makefile	/^DLLTOOL = dlltool$/;"	m
DLLTOOL	./zeromq/builds/msvc/Makefile	/^DLLTOOL = dlltool$/;"	m
DLLTOOL	./zeromq/doc/Makefile	/^DLLTOOL = dlltool$/;"	m
DLLTOOL	./zeromq/foreign/openpgm/Makefile	/^DLLTOOL = dlltool$/;"	m
DLLTOOL	./zeromq/perf/Makefile	/^DLLTOOL = dlltool$/;"	m
DLLTOOL	./zeromq/src/Makefile	/^DLLTOOL = dlltool$/;"	m
DLLTOOL	./zeromq/tests/Makefile	/^DLLTOOL = dlltool$/;"	m
DSYMUTIL	./zeromq/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	./zeromq/builds/msvc/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	./zeromq/doc/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	./zeromq/foreign/openpgm/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	./zeromq/perf/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	./zeromq/src/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	./zeromq/tests/Makefile	/^DSYMUTIL = $/;"	m
DUMPBIN	./zeromq/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	./zeromq/builds/msvc/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	./zeromq/doc/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	./zeromq/foreign/openpgm/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	./zeromq/perf/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	./zeromq/src/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	./zeromq/tests/Makefile	/^DUMPBIN = $/;"	m
EADDRINUSE	./zeromq/include/zmq.h	95;"	d
EADDRNOTAVAIL	./zeromq/include/zmq.h	98;"	d
EAFNOSUPPORT	./zeromq/include/zmq.h	113;"	d
ECHO_C	./zeromq/Makefile	/^ECHO_C = $/;"	m
ECHO_C	./zeromq/builds/msvc/Makefile	/^ECHO_C = $/;"	m
ECHO_C	./zeromq/doc/Makefile	/^ECHO_C = $/;"	m
ECHO_C	./zeromq/foreign/openpgm/Makefile	/^ECHO_C = $/;"	m
ECHO_C	./zeromq/perf/Makefile	/^ECHO_C = $/;"	m
ECHO_C	./zeromq/src/Makefile	/^ECHO_C = $/;"	m
ECHO_C	./zeromq/tests/Makefile	/^ECHO_C = $/;"	m
ECHO_N	./zeromq/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	./zeromq/builds/msvc/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	./zeromq/doc/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	./zeromq/foreign/openpgm/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	./zeromq/perf/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	./zeromq/src/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	./zeromq/tests/Makefile	/^ECHO_N = -n$/;"	m
ECHO_T	./zeromq/Makefile	/^ECHO_T = $/;"	m
ECHO_T	./zeromq/builds/msvc/Makefile	/^ECHO_T = $/;"	m
ECHO_T	./zeromq/doc/Makefile	/^ECHO_T = $/;"	m
ECHO_T	./zeromq/foreign/openpgm/Makefile	/^ECHO_T = $/;"	m
ECHO_T	./zeromq/perf/Makefile	/^ECHO_T = $/;"	m
ECHO_T	./zeromq/src/Makefile	/^ECHO_T = $/;"	m
ECHO_T	./zeromq/tests/Makefile	/^ECHO_T = $/;"	m
ECONNABORTED	./zeromq/include/zmq.h	119;"	d
ECONNREFUSED	./zeromq/include/zmq.h	101;"	d
ECONNRESET	./zeromq/include/zmq.h	122;"	d
EFSM	./zeromq/include/zmq.h	138;"	d
EGREP	./zeromq/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	./zeromq/builds/msvc/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	./zeromq/doc/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	./zeromq/foreign/openpgm/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	./zeromq/perf/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	./zeromq/src/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	./zeromq/tests/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EHOSTUNREACH	./zeromq/include/zmq.h	131;"	d
EINPROGRESS	./zeromq/include/zmq.h	104;"	d
EMSGSIZE	./zeromq/include/zmq.h	110;"	d
EMTHREAD	./zeromq/include/zmq.h	141;"	d
ENETDOWN	./zeromq/include/zmq.h	92;"	d
ENETRESET	./zeromq/include/zmq.h	134;"	d
ENETUNREACH	./zeromq/include/zmq.h	116;"	d
ENOBUFS	./zeromq/include/zmq.h	89;"	d
ENOCOMPATPROTO	./zeromq/include/zmq.h	139;"	d
ENOTCONN	./zeromq/include/zmq.h	125;"	d
ENOTSOCK	./zeromq/include/zmq.h	107;"	d
ENOTSUP	./zeromq/include/zmq.h	83;"	d
EPROTONOSUPPORT	./zeromq/include/zmq.h	86;"	d
EQUALS	./cmake-build-debug/Makefile	/^EQUALS = =$/;"	m
ETAGS	./zeromq/Makefile	/^ETAGS = etags$/;"	m
ETAGS	./zeromq/foreign/openpgm/Makefile	/^ETAGS = etags$/;"	m
ETAGS	./zeromq/perf/Makefile	/^ETAGS = etags$/;"	m
ETAGS	./zeromq/src/Makefile	/^ETAGS = etags$/;"	m
ETAGS	./zeromq/tests/Makefile	/^ETAGS = etags$/;"	m
ETERM	./zeromq/include/zmq.h	140;"	d
ETIMEDOUT	./zeromq/include/zmq.h	128;"	d
EXAMPLES	./Makefile	/^EXAMPLES = examples$/;"	m
EXE	./examples/Makefile	/^EXE = producer_consumer\/producer producer_consumer\/consumer \\$/;"	m
EXE	./tests/Makefile	/^EXE = size calls dest$/;"	m
EXEEXT	./zeromq/Makefile	/^EXEEXT = $/;"	m
EXEEXT	./zeromq/builds/msvc/Makefile	/^EXEEXT = $/;"	m
EXEEXT	./zeromq/doc/Makefile	/^EXEEXT = $/;"	m
EXEEXT	./zeromq/foreign/openpgm/Makefile	/^EXEEXT = $/;"	m
EXEEXT	./zeromq/perf/Makefile	/^EXEEXT = $/;"	m
EXEEXT	./zeromq/src/Makefile	/^EXEEXT = $/;"	m
EXEEXT	./zeromq/tests/Makefile	/^EXEEXT = $/;"	m
EXTRA_DIST	./zeromq/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	./zeromq/builds/msvc/Makefile	/^EXTRA_DIST = $(LIBZMQ_DIST) $(PERF_DIST) $(PROPERTIES_DIST) $(PRECOMPILED_DIST)$/;"	m
EXTRA_DIST	./zeromq/doc/Makefile	/^EXTRA_DIST = asciidoc.conf $(MAN_TXT) $(am__append_1)$/;"	m
ErrnoException	./include/yampl/Exceptions.h	/^    ErrnoException(const char *msg = "System call error"): Exception(msg), m_errno(errno) {$/;"	f	class:yampl::ErrnoException
ErrnoException	./include/yampl/Exceptions.h	/^    ErrnoException(int err, const char *msg = "System call error"): Exception(msg), m_errno(err){}$/;"	f	class:yampl::ErrnoException
ErrnoException	./include/yampl/Exceptions.h	/^class ErrnoException : public Exception{$/;"	c	namespace:yampl
Exception	./include/yampl/Exceptions.h	/^    Exception(const char * msg) : m_msg(msg){}$/;"	f	class:yampl::Exception
Exception	./include/yampl/Exceptions.h	/^class Exception: public std::exception{$/;"	c	namespace:yampl
FGREP	./zeromq/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	./zeromq/builds/msvc/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	./zeromq/doc/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	./zeromq/foreign/openpgm/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	./zeromq/perf/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	./zeromq/src/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	./zeromq/tests/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
Futex	./include/yampl/utils/Futex.h	/^class Futex{$/;"	c	namespace:yampl
Futex	./include/yampl/utils/Futex.h	/^inline Futex::Futex(int *addr) : m_addr(addr){$/;"	f	class:yampl::Futex
GREP	./zeromq/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	./zeromq/builds/msvc/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	./zeromq/doc/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	./zeromq/foreign/openpgm/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	./zeromq/perf/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	./zeromq/src/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	./zeromq/tests/Makefile	/^GREP = \/bin\/grep$/;"	m
GZIP_ENV	./zeromq/Makefile	/^GZIP_ENV = --best$/;"	m
HAVE_ALLOCA_H	./zeromq/src/platform.hpp	5;"	d
HAVE_ARPA_INET_H	./zeromq/src/platform.hpp	8;"	d
HAVE_CLOCK_GETTIME	./zeromq/src/platform.hpp	11;"	d
HAVE_DLFCN_H	./zeromq/src/platform.hpp	14;"	d
HAVE_ERRNO_H	./zeromq/src/platform.hpp	17;"	d
HAVE_FCNTL_H	./config/config.h	5;"	d
HAVE_FORK	./config/config.h	8;"	d
HAVE_FREEIFADDRS	./zeromq/src/platform.hpp	20;"	d
HAVE_GETIFADDRS	./zeromq/src/platform.hpp	26;"	d
HAVE_GETTIMEOFDAY	./config/config.h	11;"	d
HAVE_GETTIMEOFDAY	./zeromq/src/platform.hpp	29;"	d
HAVE_IFADDRS_H	./zeromq/src/platform.hpp	32;"	d
HAVE_INTTYPES_H	./config/config.h	14;"	d
HAVE_INTTYPES_H	./zeromq/src/platform.hpp	35;"	d
HAVE_LIBPTHREAD	./zeromq/src/platform.hpp	44;"	d
HAVE_LIBRT	./zeromq/src/platform.hpp	50;"	d
HAVE_LIMITS_H	./zeromq/src/platform.hpp	59;"	d
HAVE_MALLOC	./config/config.h	18;"	d
HAVE_MEMORY_H	./config/config.h	21;"	d
HAVE_MEMORY_H	./zeromq/src/platform.hpp	62;"	d
HAVE_MEMSET	./zeromq/src/platform.hpp	65;"	d
HAVE_MKFIFO	./config/config.h	24;"	d
HAVE_NETINET_IN_H	./zeromq/src/platform.hpp	68;"	d
HAVE_NETINET_TCP_H	./zeromq/src/platform.hpp	71;"	d
HAVE_PERROR	./zeromq/src/platform.hpp	74;"	d
HAVE_REALLOC	./config/config.h	28;"	d
HAVE_SOCKET	./zeromq/src/platform.hpp	77;"	d
HAVE_STDDEF_H	./zeromq/src/platform.hpp	83;"	d
HAVE_STDINT_H	./config/config.h	31;"	d
HAVE_STDINT_H	./zeromq/src/platform.hpp	86;"	d
HAVE_STDLIB_H	./config/config.h	34;"	d
HAVE_STDLIB_H	./zeromq/src/platform.hpp	89;"	d
HAVE_STRCASECMP	./config/config.h	37;"	d
HAVE_STRDUP	./config/config.h	40;"	d
HAVE_STRINGS_H	./config/config.h	43;"	d
HAVE_STRINGS_H	./zeromq/src/platform.hpp	92;"	d
HAVE_STRING_H	./config/config.h	46;"	d
HAVE_STRING_H	./zeromq/src/platform.hpp	95;"	d
HAVE_SYS_EVENTFD_H	./zeromq/src/platform.hpp	98;"	d
HAVE_SYS_SOCKET_H	./zeromq/src/platform.hpp	101;"	d
HAVE_SYS_STAT_H	./config/config.h	49;"	d
HAVE_SYS_STAT_H	./zeromq/src/platform.hpp	104;"	d
HAVE_SYS_TIME_H	./config/config.h	52;"	d
HAVE_SYS_TIME_H	./zeromq/src/platform.hpp	107;"	d
HAVE_SYS_TYPES_H	./config/config.h	55;"	d
HAVE_SYS_TYPES_H	./zeromq/src/platform.hpp	110;"	d
HAVE_SYS_UIO_H	./zeromq/src/platform.hpp	113;"	d
HAVE_TIME_H	./zeromq/src/platform.hpp	116;"	d
HAVE_UNISTD_H	./config/config.h	58;"	d
HAVE_UNISTD_H	./zeromq/src/platform.hpp	119;"	d
HAVE_VFORK	./config/config.h	61;"	d
HAVE_WORKING_FORK	./config/config.h	67;"	d
HAVE_WORKING_VFORK	./config/config.h	70;"	d
HAVE__BOOL	./config/config.h	73;"	d
HEADERS	./zeromq/src/Makefile	/^HEADERS = $(include_HEADERS)$/;"	m
HEX	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	464;"	d	file:
HEX	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	449;"	d	file:
ID_VOID_MAIN	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	6;"	d	file:
INCLUDES	./zeromq/perf/Makefile	/^INCLUDES = -I$(top_builddir)\/include \\$/;"	m
INCLUDES	./zeromq/tests/Makefile	/^INCLUDES = -I$(top_builddir)\/include \\$/;"	m
INSTALL	./zeromq/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	./zeromq/builds/msvc/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	./zeromq/doc/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	./zeromq/foreign/openpgm/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	./zeromq/perf/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	./zeromq/src/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	./zeromq/tests/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	./zeromq/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	./zeromq/builds/msvc/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	./zeromq/doc/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	./zeromq/foreign/openpgm/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	./zeromq/perf/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	./zeromq/src/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	./zeromq/tests/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_HEADER	./zeromq/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	./zeromq/builds/msvc/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	./zeromq/doc/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	./zeromq/foreign/openpgm/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	./zeromq/perf/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	./zeromq/src/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	./zeromq/tests/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	./zeromq/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	./zeromq/builds/msvc/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	./zeromq/doc/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	./zeromq/foreign/openpgm/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	./zeromq/perf/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	./zeromq/src/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	./zeromq/tests/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_SCRIPT	./zeromq/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	./zeromq/builds/msvc/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	./zeromq/doc/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	./zeromq/foreign/openpgm/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	./zeromq/perf/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	./zeromq/src/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	./zeromq/tests/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_PROGRAM	./zeromq/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	./zeromq/builds/msvc/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	./zeromq/doc/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	./zeromq/foreign/openpgm/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	./zeromq/perf/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	./zeromq/src/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	./zeromq/tests/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
ISocket	./include/yampl/ISocket.h	/^class ISocket{$/;"	c	namespace:yampl
ISocketFactory	./include/yampl/ISocketFactory.h	/^class ISocketFactory{$/;"	c	namespace:yampl
IdToPeerMap	./include/yampl/generic/ServerSocketBase.h	/^    typedef std::map<std::string, typename PeerList::iterator> IdToPeerMap;$/;"	t	class:yampl::ServerSocketBase
InvalidOperationException	./include/yampl/Exceptions.h	/^  InvalidOperationException(const char *msg = "Operation not permitted"): Exception(msg){}$/;"	f	class:yampl::InvalidOperationException
InvalidOperationException	./include/yampl/Exceptions.h	/^class InvalidOperationException: public Exception{$/;"	c	namespace:yampl
InvalidSizeException	./include/yampl/Exceptions.h	/^  InvalidSizeException(): Exception("Buffer size is not sufficient"){}$/;"	f	class:yampl::InvalidSizeException
InvalidSizeException	./include/yampl/Exceptions.h	/^class InvalidSizeException: public Exception{$/;"	c	namespace:yampl
LD	./zeromq/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LD	./zeromq/builds/msvc/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LD	./zeromq/doc/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LD	./zeromq/foreign/openpgm/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LD	./zeromq/perf/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LD	./zeromq/src/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LD	./zeromq/tests/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LDADD	./zeromq/tests/Makefile	/^LDADD = $(top_builddir)\/src\/libzmq.la$/;"	m
LDFLAGS	./Makefile	/^LDFLAGS = -shared -lpthread -lrt -luuid$/;"	m
LDFLAGS	./examples/Makefile	/^LDFLAGS = -L..\/ -lyampl -lpthread -Wl,-rpath,'$$ORIGIN'\/..\/..\/$/;"	m
LDFLAGS	./tests/Makefile	/^LDFLAGS = -L..\/ -lyampl -Wl,-rpath,'$$ORIGIN'\/..\/$/;"	m
LDFLAGS	./zeromq/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	./zeromq/builds/msvc/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	./zeromq/doc/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	./zeromq/foreign/openpgm/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	./zeromq/perf/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	./zeromq/src/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	./zeromq/tests/Makefile	/^LDFLAGS = $/;"	m
LIBOBJS	./zeromq/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	./zeromq/builds/msvc/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	./zeromq/doc/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	./zeromq/foreign/openpgm/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	./zeromq/perf/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	./zeromq/src/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	./zeromq/tests/Makefile	/^LIBOBJS = $/;"	m
LIBS	./zeromq/Makefile	/^LIBS = -lrt -lpthread $/;"	m
LIBS	./zeromq/builds/msvc/Makefile	/^LIBS = -lrt -lpthread $/;"	m
LIBS	./zeromq/doc/Makefile	/^LIBS = -lrt -lpthread $/;"	m
LIBS	./zeromq/foreign/openpgm/Makefile	/^LIBS = -lrt -lpthread $/;"	m
LIBS	./zeromq/perf/Makefile	/^LIBS = -lrt -lpthread $/;"	m
LIBS	./zeromq/src/Makefile	/^LIBS = -lrt -lpthread $/;"	m
LIBS	./zeromq/tests/Makefile	/^LIBS = -lrt -lpthread $/;"	m
LIBTOOL	./zeromq/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	./zeromq/builds/msvc/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	./zeromq/doc/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	./zeromq/foreign/openpgm/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	./zeromq/perf/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	./zeromq/src/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	./zeromq/tests/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBYAMPL	./Makefile	/^LIBYAMPL = libyampl.so$/;"	m
LIBZMQ	./Makefile	/^LIBZMQ = .\/zeromq\/src\/.libs\/libzmq.a$/;"	m
LIBZMQ_DIST	./zeromq/builds/msvc/Makefile	/^LIBZMQ_DIST = libzmq\/libzmq.vcproj libzmq\/libzmq.vcxproj \\$/;"	m
LIBZMQ_EXTRA_CFLAGS	./zeromq/Makefile	/^LIBZMQ_EXTRA_CFLAGS = $/;"	m
LIBZMQ_EXTRA_CFLAGS	./zeromq/builds/msvc/Makefile	/^LIBZMQ_EXTRA_CFLAGS = $/;"	m
LIBZMQ_EXTRA_CFLAGS	./zeromq/doc/Makefile	/^LIBZMQ_EXTRA_CFLAGS = $/;"	m
LIBZMQ_EXTRA_CFLAGS	./zeromq/foreign/openpgm/Makefile	/^LIBZMQ_EXTRA_CFLAGS = $/;"	m
LIBZMQ_EXTRA_CFLAGS	./zeromq/perf/Makefile	/^LIBZMQ_EXTRA_CFLAGS = $/;"	m
LIBZMQ_EXTRA_CFLAGS	./zeromq/src/Makefile	/^LIBZMQ_EXTRA_CFLAGS = $/;"	m
LIBZMQ_EXTRA_CFLAGS	./zeromq/tests/Makefile	/^LIBZMQ_EXTRA_CFLAGS = $/;"	m
LIBZMQ_EXTRA_CXXFLAGS	./zeromq/Makefile	/^LIBZMQ_EXTRA_CXXFLAGS = -fvisibility=hidden $/;"	m
LIBZMQ_EXTRA_CXXFLAGS	./zeromq/builds/msvc/Makefile	/^LIBZMQ_EXTRA_CXXFLAGS = -fvisibility=hidden $/;"	m
LIBZMQ_EXTRA_CXXFLAGS	./zeromq/doc/Makefile	/^LIBZMQ_EXTRA_CXXFLAGS = -fvisibility=hidden $/;"	m
LIBZMQ_EXTRA_CXXFLAGS	./zeromq/foreign/openpgm/Makefile	/^LIBZMQ_EXTRA_CXXFLAGS = -fvisibility=hidden $/;"	m
LIBZMQ_EXTRA_CXXFLAGS	./zeromq/perf/Makefile	/^LIBZMQ_EXTRA_CXXFLAGS = -fvisibility=hidden $/;"	m
LIBZMQ_EXTRA_CXXFLAGS	./zeromq/src/Makefile	/^LIBZMQ_EXTRA_CXXFLAGS = -fvisibility=hidden $/;"	m
LIBZMQ_EXTRA_CXXFLAGS	./zeromq/tests/Makefile	/^LIBZMQ_EXTRA_CXXFLAGS = -fvisibility=hidden $/;"	m
LIBZMQ_EXTRA_LDFLAGS	./zeromq/Makefile	/^LIBZMQ_EXTRA_LDFLAGS = $/;"	m
LIBZMQ_EXTRA_LDFLAGS	./zeromq/builds/msvc/Makefile	/^LIBZMQ_EXTRA_LDFLAGS = $/;"	m
LIBZMQ_EXTRA_LDFLAGS	./zeromq/doc/Makefile	/^LIBZMQ_EXTRA_LDFLAGS = $/;"	m
LIBZMQ_EXTRA_LDFLAGS	./zeromq/foreign/openpgm/Makefile	/^LIBZMQ_EXTRA_LDFLAGS = $/;"	m
LIBZMQ_EXTRA_LDFLAGS	./zeromq/perf/Makefile	/^LIBZMQ_EXTRA_LDFLAGS = $/;"	m
LIBZMQ_EXTRA_LDFLAGS	./zeromq/src/Makefile	/^LIBZMQ_EXTRA_LDFLAGS = $/;"	m
LIBZMQ_EXTRA_LDFLAGS	./zeromq/tests/Makefile	/^LIBZMQ_EXTRA_LDFLAGS = $/;"	m
LINK	./zeromq/src/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LINK	./zeromq/tests/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LIPO	./zeromq/Makefile	/^LIPO = $/;"	m
LIPO	./zeromq/builds/msvc/Makefile	/^LIPO = $/;"	m
LIPO	./zeromq/doc/Makefile	/^LIPO = $/;"	m
LIPO	./zeromq/foreign/openpgm/Makefile	/^LIPO = $/;"	m
LIPO	./zeromq/perf/Makefile	/^LIPO = $/;"	m
LIPO	./zeromq/src/Makefile	/^LIPO = $/;"	m
LIPO	./zeromq/tests/Makefile	/^LIPO = $/;"	m
LN_S	./zeromq/Makefile	/^LN_S = ln -s$/;"	m
LN_S	./zeromq/builds/msvc/Makefile	/^LN_S = ln -s$/;"	m
LN_S	./zeromq/doc/Makefile	/^LN_S = ln -s$/;"	m
LN_S	./zeromq/foreign/openpgm/Makefile	/^LN_S = ln -s$/;"	m
LN_S	./zeromq/perf/Makefile	/^LN_S = ln -s$/;"	m
LN_S	./zeromq/src/Makefile	/^LN_S = ln -s$/;"	m
LN_S	./zeromq/tests/Makefile	/^LN_S = ln -s$/;"	m
LOCAL	./include/yampl/Channel.h	/^  LOCAL,$/;"	e	enum:yampl::Context
LOCAL_PIPE	./include/yampl/Channel.h	/^  LOCAL_PIPE,$/;"	e	enum:yampl::Context
LOCAL_SHM	./include/yampl/Channel.h	/^  LOCAL_SHM,$/;"	e	enum:yampl::Context
LTCOMPILE	./zeromq/src/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	./zeromq/tests/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCXXCOMPILE	./zeromq/perf/Makefile	/^LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCXXCOMPILE	./zeromq/src/Makefile	/^LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCXXCOMPILE	./zeromq/tests/Makefile	/^LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
LTLIBOBJS	./zeromq/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	./zeromq/builds/msvc/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	./zeromq/doc/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	./zeromq/foreign/openpgm/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	./zeromq/perf/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	./zeromq/src/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	./zeromq/tests/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBRARIES	./zeromq/src/Makefile	/^LTLIBRARIES = $(lib_LTLIBRARIES)$/;"	m
LTVER	./zeromq/Makefile	/^LTVER = 3:0:0$/;"	m
LTVER	./zeromq/builds/msvc/Makefile	/^LTVER = 3:0:0$/;"	m
LTVER	./zeromq/doc/Makefile	/^LTVER = 3:0:0$/;"	m
LTVER	./zeromq/foreign/openpgm/Makefile	/^LTVER = 3:0:0$/;"	m
LTVER	./zeromq/perf/Makefile	/^LTVER = 3:0:0$/;"	m
LTVER	./zeromq/src/Makefile	/^LTVER = 3:0:0$/;"	m
LTVER	./zeromq/tests/Makefile	/^LTVER = 3:0:0$/;"	m
LT_OBJDIR	./zeromq/src/platform.hpp	129;"	d
MAINTAINERCLEANFILES	./zeromq/Makefile	/^MAINTAINERCLEANFILES = \\$/;"	m
MAINTAINERCLEANFILES	./zeromq/doc/Makefile	/^MAINTAINERCLEANFILES = $(MAN_DOC) $(MAN_HTML)$/;"	m
MAKEINFO	./zeromq/Makefile	/^MAKEINFO = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run makeinfo$/;"	m
MAKEINFO	./zeromq/builds/msvc/Makefile	/^MAKEINFO = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run makeinfo$/;"	m
MAKEINFO	./zeromq/doc/Makefile	/^MAKEINFO = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run makeinfo$/;"	m
MAKEINFO	./zeromq/foreign/openpgm/Makefile	/^MAKEINFO = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run makeinfo$/;"	m
MAKEINFO	./zeromq/perf/Makefile	/^MAKEINFO = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run makeinfo$/;"	m
MAKEINFO	./zeromq/src/Makefile	/^MAKEINFO = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run makeinfo$/;"	m
MAKEINFO	./zeromq/tests/Makefile	/^MAKEINFO = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/missing --run makeinfo$/;"	m
MAN3	./zeromq/doc/Makefile	/^MAN3 = zmq_bind.3 zmq_close.3 zmq_connect.3 zmq_proxy.3 \\$/;"	m
MAN7	./zeromq/doc/Makefile	/^MAN7 = zmq.7 zmq_tcp.7 zmq_pgm.7 zmq_epgm.7 zmq_inproc.7 zmq_ipc.7$/;"	m
MANIFEST_TOOL	./zeromq/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	./zeromq/builds/msvc/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	./zeromq/doc/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	./zeromq/foreign/openpgm/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	./zeromq/perf/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	./zeromq/src/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	./zeromq/tests/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANS	./zeromq/doc/Makefile	/^MANS = $(dist_man_MANS)$/;"	m
MAN_DOC	./zeromq/doc/Makefile	/^MAN_DOC = $(MAN1) $(MAN3) $(MAN7)$/;"	m
MAN_HTML	./zeromq/doc/Makefile	/^MAN_HTML = $(MAN_TXT:%.txt=%.html)$/;"	m
MAN_TXT	./zeromq/doc/Makefile	/^MAN_TXT = $(MAN3:%.3=%.txt) $(MAN7:%.7=%.txt)$/;"	m
MKDIR_P	./zeromq/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	./zeromq/builds/msvc/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	./zeromq/doc/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	./zeromq/foreign/openpgm/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	./zeromq/perf/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	./zeromq/src/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	./zeromq/tests/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MOVE_DATA	./include/yampl/ISocketFactory.h	/^  MOVE_DATA$/;"	e	enum:yampl::Semantics
MSG_ERRQUEUE	./zeromq/src/pgm_socket.cpp	47;"	d	file:
Mode	./include/yampl/pipe/PipeSocketBase.h	/^enum Mode{$/;"	g	namespace:yampl::pipe
NDEBUG	./zeromq/tests/test_connect_delay.cpp	29;"	d	file:
NDEBUG	./zeromq/tests/test_connect_resolve.cpp	25;"	d	file:
NDEBUG	./zeromq/tests/test_invalid_rep.cpp	25;"	d	file:
NDEBUG	./zeromq/tests/test_last_endpoint.cpp	25;"	d	file:
NDEBUG	./zeromq/tests/test_msg_flags.cpp	25;"	d	file:
NDEBUG	./zeromq/tests/test_reqrep_device.cpp	26;"	d	file:
NDEBUG	./zeromq/tests/test_shutdown_stress.cpp	27;"	d	file:
NDEBUG	./zeromq/tests/test_sub_forward.cpp	26;"	d	file:
NDEBUG	./zeromq/tests/test_term_endpoint.cpp	27;"	d	file:
NDEBUG	./zeromq/tests/test_timeo.cpp	27;"	d	file:
NDEBUG	./zeromq/tests/testutil.hpp	28;"	d
NM	./zeromq/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	./zeromq/builds/msvc/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	./zeromq/doc/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	./zeromq/foreign/openpgm/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	./zeromq/perf/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	./zeromq/src/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	./zeromq/tests/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NMEDIT	./zeromq/Makefile	/^NMEDIT = $/;"	m
NMEDIT	./zeromq/builds/msvc/Makefile	/^NMEDIT = $/;"	m
NMEDIT	./zeromq/doc/Makefile	/^NMEDIT = $/;"	m
NMEDIT	./zeromq/foreign/openpgm/Makefile	/^NMEDIT = $/;"	m
NMEDIT	./zeromq/perf/Makefile	/^NMEDIT = $/;"	m
NMEDIT	./zeromq/src/Makefile	/^NMEDIT = $/;"	m
NMEDIT	./zeromq/tests/Makefile	/^NMEDIT = $/;"	m
NOATOM	./zeromq/src/windows.hpp	71;"	d
NOCLIPBOARD	./zeromq/src/windows.hpp	74;"	d
NOCOLOR	./zeromq/src/windows.hpp	77;"	d
NOCOMM	./zeromq/src/windows.hpp	134;"	d
NOCTLMGR	./zeromq/src/windows.hpp	80;"	d
NODEFERWINDOWPOS	./zeromq/src/windows.hpp	146;"	d
NODRAWTEXT	./zeromq/src/windows.hpp	83;"	d
NOGDI	./zeromq/src/windows.hpp	86;"	d
NOGDICAPMASKS	./zeromq/src/windows.hpp	35;"	d
NOHELP	./zeromq/src/windows.hpp	140;"	d
NOICONS	./zeromq/src/windows.hpp	53;"	d
NOKANJI	./zeromq/src/windows.hpp	137;"	d
NOKERNEL	./zeromq/src/windows.hpp	89;"	d
NOKEYSTATES	./zeromq/src/windows.hpp	56;"	d
NOMB	./zeromq/src/windows.hpp	98;"	d
NOMCX	./zeromq/src/windows.hpp	149;"	d
NOMEMMGR	./zeromq/src/windows.hpp	101;"	d
NOMENUS	./zeromq/src/windows.hpp	50;"	d
NOMETAFILE	./zeromq/src/windows.hpp	104;"	d
NOMINMAX	./zeromq/src/encoder.hpp	27;"	d
NOMINMAX	./zeromq/src/windows.hpp	107;"	d
NOMSG	./zeromq/src/windows.hpp	110;"	d
NONLS	./zeromq/src/windows.hpp	95;"	d
NOOPENFILE	./zeromq/src/windows.hpp	113;"	d
NOPROFILER	./zeromq/src/windows.hpp	143;"	d
NORASTEROPS	./zeromq/src/windows.hpp	62;"	d
NORMAL_INSTALL	./zeromq/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	./zeromq/builds/msvc/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	./zeromq/doc/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	./zeromq/foreign/openpgm/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	./zeromq/perf/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	./zeromq/src/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	./zeromq/tests/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	./zeromq/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	./zeromq/builds/msvc/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	./zeromq/doc/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	./zeromq/foreign/openpgm/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	./zeromq/perf/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	./zeromq/src/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	./zeromq/tests/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NOSCROLL	./zeromq/src/windows.hpp	116;"	d
NOSERVICE	./zeromq/src/windows.hpp	119;"	d
NOSHOWWINDOW	./zeromq/src/windows.hpp	65;"	d
NOSOUND	./zeromq/src/windows.hpp	122;"	d
NOSYSCOMMANDS	./zeromq/src/windows.hpp	59;"	d
NOSYSMETRICS	./zeromq/src/windows.hpp	47;"	d
NOTEXTMETRIC	./zeromq/src/windows.hpp	125;"	d
NOUSER	./zeromq/src/windows.hpp	92;"	d
NOVIRTUALKEYCODES	./zeromq/src/windows.hpp	38;"	d
NOWH	./zeromq/src/windows.hpp	128;"	d
NOWINMESSAGES	./zeromq/src/windows.hpp	41;"	d
NOWINOFFSETS	./zeromq/src/windows.hpp	131;"	d
NOWINSTYLES	./zeromq/src/windows.hpp	44;"	d
NROFF	./zeromq/doc/Makefile	/^NROFF = nroff$/;"	m
OBJDUMP	./zeromq/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	./zeromq/builds/msvc/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	./zeromq/doc/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	./zeromq/foreign/openpgm/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	./zeromq/perf/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	./zeromq/src/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	./zeromq/tests/Makefile	/^OBJDUMP = objdump$/;"	m
OBJECTS	./Makefile	/^OBJECTS = $(SOURCES:.cpp=.o)$/;"	m
OBJEXT	./zeromq/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	./zeromq/builds/msvc/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	./zeromq/doc/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	./zeromq/foreign/openpgm/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	./zeromq/perf/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	./zeromq/src/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	./zeromq/tests/Makefile	/^OBJEXT = o$/;"	m
OEMRESOURCE	./zeromq/src/windows.hpp	68;"	d
OTOOL	./zeromq/Makefile	/^OTOOL = $/;"	m
OTOOL	./zeromq/builds/msvc/Makefile	/^OTOOL = $/;"	m
OTOOL	./zeromq/doc/Makefile	/^OTOOL = $/;"	m
OTOOL	./zeromq/foreign/openpgm/Makefile	/^OTOOL = $/;"	m
OTOOL	./zeromq/perf/Makefile	/^OTOOL = $/;"	m
OTOOL	./zeromq/src/Makefile	/^OTOOL = $/;"	m
OTOOL	./zeromq/tests/Makefile	/^OTOOL = $/;"	m
OTOOL64	./zeromq/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	./zeromq/builds/msvc/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	./zeromq/doc/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	./zeromq/foreign/openpgm/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	./zeromq/perf/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	./zeromq/src/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	./zeromq/tests/Makefile	/^OTOOL64 = $/;"	m
OpenPGM_CFLAGS	./zeromq/Makefile	/^OpenPGM_CFLAGS = $/;"	m
OpenPGM_CFLAGS	./zeromq/builds/msvc/Makefile	/^OpenPGM_CFLAGS = $/;"	m
OpenPGM_CFLAGS	./zeromq/doc/Makefile	/^OpenPGM_CFLAGS = $/;"	m
OpenPGM_CFLAGS	./zeromq/foreign/openpgm/Makefile	/^OpenPGM_CFLAGS = $/;"	m
OpenPGM_CFLAGS	./zeromq/perf/Makefile	/^OpenPGM_CFLAGS = $/;"	m
OpenPGM_CFLAGS	./zeromq/src/Makefile	/^OpenPGM_CFLAGS = $/;"	m
OpenPGM_CFLAGS	./zeromq/tests/Makefile	/^OpenPGM_CFLAGS = $/;"	m
OpenPGM_LIBS	./zeromq/Makefile	/^OpenPGM_LIBS = $/;"	m
OpenPGM_LIBS	./zeromq/builds/msvc/Makefile	/^OpenPGM_LIBS = $/;"	m
OpenPGM_LIBS	./zeromq/doc/Makefile	/^OpenPGM_LIBS = $/;"	m
OpenPGM_LIBS	./zeromq/foreign/openpgm/Makefile	/^OpenPGM_LIBS = $/;"	m
OpenPGM_LIBS	./zeromq/perf/Makefile	/^OpenPGM_LIBS = $/;"	m
OpenPGM_LIBS	./zeromq/src/Makefile	/^OpenPGM_LIBS = $/;"	m
OpenPGM_LIBS	./zeromq/tests/Makefile	/^OpenPGM_LIBS = $/;"	m
PACKAGE	./zeromq/Makefile	/^PACKAGE = zeromq$/;"	m
PACKAGE	./zeromq/builds/msvc/Makefile	/^PACKAGE = zeromq$/;"	m
PACKAGE	./zeromq/doc/Makefile	/^PACKAGE = zeromq$/;"	m
PACKAGE	./zeromq/foreign/openpgm/Makefile	/^PACKAGE = zeromq$/;"	m
PACKAGE	./zeromq/perf/Makefile	/^PACKAGE = zeromq$/;"	m
PACKAGE	./zeromq/src/Makefile	/^PACKAGE = zeromq$/;"	m
PACKAGE	./zeromq/src/platform.hpp	135;"	d
PACKAGE	./zeromq/tests/Makefile	/^PACKAGE = zeromq$/;"	m
PACKAGE_BUGREPORT	./config/config.h	76;"	d
PACKAGE_BUGREPORT	./zeromq/Makefile	/^PACKAGE_BUGREPORT = zeromq-dev@lists.zeromq.org$/;"	m
PACKAGE_BUGREPORT	./zeromq/builds/msvc/Makefile	/^PACKAGE_BUGREPORT = zeromq-dev@lists.zeromq.org$/;"	m
PACKAGE_BUGREPORT	./zeromq/doc/Makefile	/^PACKAGE_BUGREPORT = zeromq-dev@lists.zeromq.org$/;"	m
PACKAGE_BUGREPORT	./zeromq/foreign/openpgm/Makefile	/^PACKAGE_BUGREPORT = zeromq-dev@lists.zeromq.org$/;"	m
PACKAGE_BUGREPORT	./zeromq/perf/Makefile	/^PACKAGE_BUGREPORT = zeromq-dev@lists.zeromq.org$/;"	m
PACKAGE_BUGREPORT	./zeromq/src/Makefile	/^PACKAGE_BUGREPORT = zeromq-dev@lists.zeromq.org$/;"	m
PACKAGE_BUGREPORT	./zeromq/src/platform.hpp	138;"	d
PACKAGE_BUGREPORT	./zeromq/tests/Makefile	/^PACKAGE_BUGREPORT = zeromq-dev@lists.zeromq.org$/;"	m
PACKAGE_NAME	./config/config.h	79;"	d
PACKAGE_NAME	./zeromq/Makefile	/^PACKAGE_NAME = zeromq$/;"	m
PACKAGE_NAME	./zeromq/builds/msvc/Makefile	/^PACKAGE_NAME = zeromq$/;"	m
PACKAGE_NAME	./zeromq/doc/Makefile	/^PACKAGE_NAME = zeromq$/;"	m
PACKAGE_NAME	./zeromq/foreign/openpgm/Makefile	/^PACKAGE_NAME = zeromq$/;"	m
PACKAGE_NAME	./zeromq/perf/Makefile	/^PACKAGE_NAME = zeromq$/;"	m
PACKAGE_NAME	./zeromq/src/Makefile	/^PACKAGE_NAME = zeromq$/;"	m
PACKAGE_NAME	./zeromq/src/platform.hpp	141;"	d
PACKAGE_NAME	./zeromq/tests/Makefile	/^PACKAGE_NAME = zeromq$/;"	m
PACKAGE_STRING	./config/config.h	82;"	d
PACKAGE_STRING	./zeromq/Makefile	/^PACKAGE_STRING = zeromq 3.2.1$/;"	m
PACKAGE_STRING	./zeromq/builds/msvc/Makefile	/^PACKAGE_STRING = zeromq 3.2.1$/;"	m
PACKAGE_STRING	./zeromq/doc/Makefile	/^PACKAGE_STRING = zeromq 3.2.1$/;"	m
PACKAGE_STRING	./zeromq/foreign/openpgm/Makefile	/^PACKAGE_STRING = zeromq 3.2.1$/;"	m
PACKAGE_STRING	./zeromq/perf/Makefile	/^PACKAGE_STRING = zeromq 3.2.1$/;"	m
PACKAGE_STRING	./zeromq/src/Makefile	/^PACKAGE_STRING = zeromq 3.2.1$/;"	m
PACKAGE_STRING	./zeromq/src/platform.hpp	144;"	d
PACKAGE_STRING	./zeromq/tests/Makefile	/^PACKAGE_STRING = zeromq 3.2.1$/;"	m
PACKAGE_TARNAME	./config/config.h	85;"	d
PACKAGE_TARNAME	./zeromq/Makefile	/^PACKAGE_TARNAME = zeromq$/;"	m
PACKAGE_TARNAME	./zeromq/builds/msvc/Makefile	/^PACKAGE_TARNAME = zeromq$/;"	m
PACKAGE_TARNAME	./zeromq/doc/Makefile	/^PACKAGE_TARNAME = zeromq$/;"	m
PACKAGE_TARNAME	./zeromq/foreign/openpgm/Makefile	/^PACKAGE_TARNAME = zeromq$/;"	m
PACKAGE_TARNAME	./zeromq/perf/Makefile	/^PACKAGE_TARNAME = zeromq$/;"	m
PACKAGE_TARNAME	./zeromq/src/Makefile	/^PACKAGE_TARNAME = zeromq$/;"	m
PACKAGE_TARNAME	./zeromq/src/platform.hpp	147;"	d
PACKAGE_TARNAME	./zeromq/tests/Makefile	/^PACKAGE_TARNAME = zeromq$/;"	m
PACKAGE_URL	./config/config.h	88;"	d
PACKAGE_URL	./zeromq/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	./zeromq/builds/msvc/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	./zeromq/doc/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	./zeromq/foreign/openpgm/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	./zeromq/perf/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	./zeromq/src/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	./zeromq/src/platform.hpp	150;"	d
PACKAGE_URL	./zeromq/tests/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_VERSION	./config/config.h	91;"	d
PACKAGE_VERSION	./zeromq/Makefile	/^PACKAGE_VERSION = 3.2.1$/;"	m
PACKAGE_VERSION	./zeromq/builds/msvc/Makefile	/^PACKAGE_VERSION = 3.2.1$/;"	m
PACKAGE_VERSION	./zeromq/doc/Makefile	/^PACKAGE_VERSION = 3.2.1$/;"	m
PACKAGE_VERSION	./zeromq/foreign/openpgm/Makefile	/^PACKAGE_VERSION = 3.2.1$/;"	m
PACKAGE_VERSION	./zeromq/perf/Makefile	/^PACKAGE_VERSION = 3.2.1$/;"	m
PACKAGE_VERSION	./zeromq/src/Makefile	/^PACKAGE_VERSION = 3.2.1$/;"	m
PACKAGE_VERSION	./zeromq/src/platform.hpp	153;"	d
PACKAGE_VERSION	./zeromq/tests/Makefile	/^PACKAGE_VERSION = 3.2.1$/;"	m
PATH_SEPARATOR	./zeromq/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	./zeromq/builds/msvc/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	./zeromq/doc/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	./zeromq/foreign/openpgm/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	./zeromq/perf/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	./zeromq/src/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	./zeromq/tests/Makefile	/^PATH_SEPARATOR = :$/;"	m
PERF_DIST	./zeromq/builds/msvc/Makefile	/^PERF_DIST = c_local_thr\/c_local_thr.vcproj \\$/;"	m
PIPE_CLIENT	./include/yampl/pipe/PipeSocketBase.h	/^  PIPE_CLIENT,$/;"	e	enum:yampl::pipe::Mode
PIPE_PULL	./include/yampl/pipe/PipeSocketBase.h	/^  PIPE_PULL,$/;"	e	enum:yampl::pipe::Mode
PIPE_PUSH	./include/yampl/pipe/PipeSocketBase.h	/^  PIPE_PUSH,$/;"	e	enum:yampl::pipe::Mode
PIPE_SERVER	./include/yampl/pipe/PipeSocketBase.h	/^  PIPE_SERVER$/;"	e	enum:yampl::pipe::Mode
PKG_CONFIG	./zeromq/Makefile	/^PKG_CONFIG = $/;"	m
PKG_CONFIG	./zeromq/builds/msvc/Makefile	/^PKG_CONFIG = $/;"	m
PKG_CONFIG	./zeromq/doc/Makefile	/^PKG_CONFIG = $/;"	m
PKG_CONFIG	./zeromq/foreign/openpgm/Makefile	/^PKG_CONFIG = $/;"	m
PKG_CONFIG	./zeromq/perf/Makefile	/^PKG_CONFIG = $/;"	m
PKG_CONFIG	./zeromq/src/Makefile	/^PKG_CONFIG = $/;"	m
PKG_CONFIG	./zeromq/tests/Makefile	/^PKG_CONFIG = $/;"	m
PKG_CONFIG_LIBDIR	./zeromq/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	./zeromq/builds/msvc/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	./zeromq/doc/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	./zeromq/foreign/openpgm/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	./zeromq/perf/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	./zeromq/src/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	./zeromq/tests/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_PATH	./zeromq/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	./zeromq/builds/msvc/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	./zeromq/doc/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	./zeromq/foreign/openpgm/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	./zeromq/perf/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	./zeromq/src/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	./zeromq/tests/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	307;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	310;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	313;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	316;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	319;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	322;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	325;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	328;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	331;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	334;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	337;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	340;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	343;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	346;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	349;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	352;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	355;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	358;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	361;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	364;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	367;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	370;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	373;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	376;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	379;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	383;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	386;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	389;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	392;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	395;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	399;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	292;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	295;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	298;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	301;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	304;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	307;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	310;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	313;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	316;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	319;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	322;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	325;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	328;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	331;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	334;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	337;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	340;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	343;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	346;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	349;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	352;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	355;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	358;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	361;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	364;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	368;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	371;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	374;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	377;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	380;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	384;"	d	file:
POST_INSTALL	./zeromq/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	./zeromq/builds/msvc/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	./zeromq/doc/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	./zeromq/foreign/openpgm/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	./zeromq/perf/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	./zeromq/src/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	./zeromq/tests/Makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	./zeromq/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	./zeromq/builds/msvc/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	./zeromq/doc/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	./zeromq/foreign/openpgm/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	./zeromq/perf/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	./zeromq/src/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	./zeromq/tests/Makefile	/^POST_UNINSTALL = :$/;"	m
PRECOMPILED_DIST	./zeromq/builds/msvc/Makefile	/^PRECOMPILED_DIST = ..\/..\/src\/precompiled.hpp \\$/;"	m
PREFIX	./Makefile	/^PREFIX = \/usr\/lib\/yampl$/;"	m
PRE_INSTALL	./zeromq/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	./zeromq/builds/msvc/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	./zeromq/doc/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	./zeromq/foreign/openpgm/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	./zeromq/perf/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	./zeromq/src/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	./zeromq/tests/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	./zeromq/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	./zeromq/builds/msvc/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	./zeromq/doc/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	./zeromq/foreign/openpgm/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	./zeromq/perf/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	./zeromq/src/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	./zeromq/tests/Makefile	/^PRE_UNINSTALL = :$/;"	m
PROGRAMS	./zeromq/perf/Makefile	/^PROGRAMS = $(noinst_PROGRAMS)$/;"	m
PROGRAMS	./zeromq/tests/Makefile	/^PROGRAMS = $(noinst_PROGRAMS)$/;"	m
PROPERTIES_DIST	./zeromq/builds/msvc/Makefile	/^PROPERTIES_DIST = properties\/Common.props \\$/;"	m
PeerList	./include/yampl/generic/ServerSocketBase.h	/^    typedef std::list<std::tr1::shared_ptr<T> > PeerList;$/;"	t	class:yampl::ServerSocketBase
PeerList	./include/yampl/shm/ServerSocket.h	/^    typedef ServerSocketBase<SimpleServerSocket>::PeerList PeerList;$/;"	t	class:yampl::shm::ServerSocket
PeerToIdMap	./include/yampl/generic/ServerSocketBase.h	/^    typedef std::map<std::tr1::shared_ptr<T>, std::string> PeerToIdMap;$/;"	t	class:yampl::ServerSocketBase
PipeSocketBase	./include/yampl/pipe/PipeSocketBase.h	/^class PipeSocketBase : public ISocket{$/;"	c	namespace:yampl::pipe
PipeSocketBase	./include/yampl/shm/PipeSocketBase.h	/^  class PipeSocketBase : public ISocket{$/;"	c	namespace:yampl::shm
PipeSocketBase	./src/pipe/PipeSocketBase.cpp	/^PipeSocketBase::PipeSocketBase(const Channel &channel, Mode mode, Semantics semantics, void (*deallocator)(void *, void *)) : m_mode(mode), m_semantics(semantics), m_isRecvPending(false), m_receiveSize(0), m_receiveBuffer(NULL){$/;"	f	class:yampl::pipe::PipeSocketBase
PipeSocketBase	./src/shm/SHMSocketBase.cpp	/^PipeSocketBase::PipeSocketBase(const Channel &channel, Semantics semantics, void (*deallocator)(void *, void *)) : m_size(1048576), m_name("\/" + channel.name), m_semantics(semantics), m_deallocator(deallocator), m_isRecvPending(false), m_receiveSize(0), m_receiveBuffer(NULL){$/;"	f	class:yampl::shm::PipeSocketBase
Poller	./include/yampl/utils/Poller.h	/^class Poller{$/;"	c	namespace:yampl
Poller	./include/yampl/utils/Poller.h	/^inline Poller::Poller(){$/;"	f	class:yampl::Poller
ProducerSocket	./include/yampl/pipe/ProducerSocket.h	/^class ProducerSocket : public PipeSocketBase{$/;"	c	namespace:yampl::pipe
ProducerSocket	./include/yampl/pipe/ProducerSocket.h	/^inline ProducerSocket::ProducerSocket(const Channel &channel, Semantics semantics, void (*deallocator)(void *, void *)) : PipeSocketBase(channel, PIPE_PUSH, semantics, deallocator){$/;"	f	class:yampl::pipe::ProducerSocket
ProducerSocket	./include/yampl/shm/ProducerSocket.h	/^class ProducerSocket : public PipeSocketBase{$/;"	c	namespace:yampl::shm
ProducerSocket	./include/yampl/shm/ProducerSocket.h	/^inline ProducerSocket::ProducerSocket(const Channel &channel, Semantics semantics, void (*deallocator)(void *, void *)) : PipeSocketBase(channel, semantics, deallocator){$/;"	f	class:yampl::shm::ProducerSocket
RANLIB	./zeromq/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	./zeromq/builds/msvc/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	./zeromq/doc/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	./zeromq/foreign/openpgm/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	./zeromq/perf/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	./zeromq/src/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	./zeromq/tests/Makefile	/^RANLIB = ranlib$/;"	m
RECURSIVE_CLEAN_TARGETS	./zeromq/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	./zeromq/foreign/openpgm/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_TARGETS	./zeromq/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \\$/;"	m
RECURSIVE_TARGETS	./zeromq/foreign/openpgm/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \\$/;"	m
RETSIGTYPE	./zeromq/src/platform.hpp	156;"	d
RM	./cmake-build-debug/Makefile	/^RM = \/home\/ntauthority\/Downloads\/clion-2017.3.3\/bin\/cmake\/bin\/cmake -E remove -f$/;"	m
RawPipe	./include/yampl/utils/RawPipe.h	/^class RawPipe{$/;"	c	namespace:yampl
RawPipe	./include/yampl/utils/RawPipe.h	/^inline RawPipe::RawPipe(const std::string &name, bool doUnlink): m_name(name), m_doUnlink(doUnlink){$/;"	f	class:yampl::RawPipe
RawToPeerMap	./include/yampl/generic/ServerSocketBase.h	/^    typedef std::map<T*, std::tr1::shared_ptr<T> > RawToPeerMap;$/;"	t	class:yampl::ServerSocketBase
RecvArgs	./include/yampl/ISocket.h	/^	RecvArgs(void **buffer) : buffer(buffer), size(0), allocate(true), timeout(-1), peerId(0), peerIdOut(0), custom(0){}$/;"	f	struct:yampl::ISocket::RecvArgs
RecvArgs	./include/yampl/ISocket.h	/^	RecvArgs(void **buffer, size_t size) : buffer(buffer), size(size), allocate(false), timeout(-1), peerId(0), peerIdOut(0), custom(0){}$/;"	f	struct:yampl::ISocket::RecvArgs
RecvArgs	./include/yampl/ISocket.h	/^    struct RecvArgs{$/;"	s	class:yampl::ISocket
RingBuffer	./include/yampl/utils/RingBuffer.h	/^class RingBuffer{$/;"	c	namespace:yampl
RingBuffer	./include/yampl/utils/RingBuffer.h	/^inline RingBuffer::RingBuffer(size_t size, void *buffer, bool isProducer): m_size(size), m_buffer((char *)buffer), m_head(0), m_tail(0), m_initialized(false){$/;"	f	class:yampl::RingBuffer
SED	./zeromq/Makefile	/^SED = \/bin\/sed$/;"	m
SED	./zeromq/builds/msvc/Makefile	/^SED = \/bin\/sed$/;"	m
SED	./zeromq/doc/Makefile	/^SED = \/bin\/sed$/;"	m
SED	./zeromq/foreign/openpgm/Makefile	/^SED = \/bin\/sed$/;"	m
SED	./zeromq/perf/Makefile	/^SED = \/bin\/sed$/;"	m
SED	./zeromq/src/Makefile	/^SED = \/bin\/sed$/;"	m
SED	./zeromq/tests/Makefile	/^SED = \/bin\/sed$/;"	m
SET_MAKE	./zeromq/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	./zeromq/builds/msvc/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	./zeromq/doc/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	./zeromq/foreign/openpgm/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	./zeromq/perf/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	./zeromq/src/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	./zeromq/tests/Makefile	/^SET_MAKE = $/;"	m
SHELL	./cmake-build-debug/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	./zeromq/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	./zeromq/builds/msvc/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	./zeromq/doc/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	./zeromq/foreign/openpgm/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	./zeromq/perf/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	./zeromq/src/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	./zeromq/tests/Makefile	/^SHELL = \/bin\/bash$/;"	m
SIMULATE_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	163;"	d	file:
SIMULATE_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	178;"	d	file:
SIMULATE_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	21;"	d	file:
SIMULATE_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	157;"	d	file:
SIMULATE_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	172;"	d	file:
SIMULATE_ID	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
SIMULATE_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	170;"	d	file:
SIMULATE_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	185;"	d	file:
SIMULATE_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	37;"	d	file:
SIMULATE_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	164;"	d	file:
SIMULATE_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	179;"	d	file:
SIMULATE_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	37;"	d	file:
SIMULATE_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	171;"	d	file:
SIMULATE_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	186;"	d	file:
SIMULATE_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	38;"	d	file:
SIMULATE_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	165;"	d	file:
SIMULATE_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	180;"	d	file:
SIMULATE_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
SOURCES	./Makefile	/^SOURCES = $(wildcard src\/pipe\/*.cpp) \\$/;"	m
SOURCES	./zeromq/Makefile	/^SOURCES =$/;"	m
SOURCES	./zeromq/builds/msvc/Makefile	/^SOURCES =$/;"	m
SOURCES	./zeromq/doc/Makefile	/^SOURCES =$/;"	m
SOURCES	./zeromq/foreign/openpgm/Makefile	/^SOURCES =$/;"	m
SOURCES	./zeromq/perf/Makefile	/^SOURCES = $(inproc_lat_SOURCES) $(inproc_thr_SOURCES) \\$/;"	m
SOURCES	./zeromq/src/Makefile	/^SOURCES = $(libzmq_la_SOURCES)$/;"	m
SOURCES	./zeromq/tests/Makefile	/^SOURCES = $(test_connect_delay_SOURCES) \\$/;"	m
STDC_HEADERS	./config/config.h	94;"	d
STDC_HEADERS	./zeromq/src/platform.hpp	159;"	d
STRINGIFY	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	303;"	d	file:
STRINGIFY	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	288;"	d	file:
STRINGIFY_HELPER	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	302;"	d	file:
STRINGIFY_HELPER	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	287;"	d	file:
STRIP	./zeromq/Makefile	/^STRIP = strip$/;"	m
STRIP	./zeromq/builds/msvc/Makefile	/^STRIP = strip$/;"	m
STRIP	./zeromq/doc/Makefile	/^STRIP = strip$/;"	m
STRIP	./zeromq/foreign/openpgm/Makefile	/^STRIP = strip$/;"	m
STRIP	./zeromq/perf/Makefile	/^STRIP = strip$/;"	m
STRIP	./zeromq/src/Makefile	/^STRIP = strip$/;"	m
STRIP	./zeromq/tests/Makefile	/^STRIP = strip$/;"	m
SUBDIRS	./zeromq/Makefile	/^SUBDIRS = src doc perf tests$/;"	m
SUBDIRS	./zeromq/foreign/openpgm/Makefile	/^SUBDIRS = $(pgm_subdir)$/;"	m
SUFFIXES	./cmake-build-debug/Makefile	/^SUFFIXES =$/;"	m
Semantics	./include/yampl/ISocketFactory.h	/^enum Semantics{$/;"	g	namespace:yampl
Semaphore	./include/yampl/utils/Semaphore.h	/^class Semaphore{$/;"	c	namespace:yampl
Semaphore	./include/yampl/utils/Semaphore.h	/^inline Semaphore::Semaphore(int *sem): m_sem(sem), m_futex(sem){$/;"	f	class:yampl::Semaphore
ServerSocket	./include/yampl/pipe/ServerSocket.h	/^class ServerSocket : public yampl::ServerSocketBase<SimpleServerSocket>{$/;"	c	namespace:yampl::pipe
ServerSocket	./include/yampl/pipe/ServerSocket.h	/^inline ServerSocket::ServerSocket(const Channel &channel, Semantics semantics, void (*deallocator)(void *, void *)) : yampl::ServerSocketBase<SimpleServerSocket>(channel, semantics, deallocator, std::tr1::bind(&ServerSocket::accept, this, std::tr1::placeholders::_1)){$/;"	f	class:yampl::pipe::ServerSocket
ServerSocket	./include/yampl/shm/ServerSocket.h	/^class ServerSocket : public yampl::ServerSocketBase<SimpleServerSocket>{$/;"	c	namespace:yampl::shm
ServerSocket	./include/yampl/shm/ServerSocket.h	/^inline ServerSocket::ServerSocket(const Channel &channel, Semantics semantics, void (*deallocator)(void *, void *)) : yampl::ServerSocketBase<SimpleServerSocket>(channel, semantics, deallocator, std::tr1::bind(&ServerSocket::accept, this, std::tr1::placeholders::_1)), m_isRecvPending(false){$/;"	f	class:yampl::shm::ServerSocket
ServerSocket	./include/yampl/zeromq/ServerSocket.h	/^class ServerSocket : public SocketBase{$/;"	c	namespace:yampl::zeromq
ServerSocket	./src/zeromq/ServerSocket.cpp	/^ServerSocket::ServerSocket(Channel channel, zmq::context_t *context, Semantics semantics, void (*deallocator)(void *, void *)) : SocketBase(channel, context, semantics, deallocator, ZMQ_ROUTER), m_lastAddress(new zmq::message_t){$/;"	f	class:yampl::zeromq::ServerSocket
ServerSocketBase	./include/yampl/generic/ServerSocketBase.h	/^class ServerSocketBase: public ISocket{$/;"	c	namespace:yampl
ServerSocketBase	./include/yampl/generic/ServerSocketBase.h	/^inline ServerSocketBase<T>::ServerSocketBase(const Channel& channel, Semantics semantics, void (*deallocator)(void *, void *), const std::tr1::function<void(T*)> &accept) : m_accept(accept){$/;"	f	class:yampl::ServerSocketBase
ServiceSocketBase	./include/yampl/generic/ServiceSocketBase.h	/^ServiceSocketBase<P, C>::ServiceSocketBase(const Channel &channel, Semantics semantics, void (*deallocator)(void *, void *)) : m_reqChannel(channel.name + "_req", channel.context), m_repChannel(channel.name + "_rep", channel.context), m_producerSocket(0), m_consumerSocket(0){}$/;"	f	class:yampl::ServiceSocketBase
ServiceSocketBase	./include/yampl/generic/ServiceSocketBase.h	/^class ServiceSocketBase : public ISocket{$/;"	c	namespace:yampl
SharedMemory	./include/yampl/utils/SharedMemory.h	/^class SharedMemory{$/;"	c	namespace:yampl
SharedMemory	./include/yampl/utils/SharedMemory.h	/^inline SharedMemory::SharedMemory(const std::string& name, size_t size) : m_name(name), m_size(size), m_fd(-1), m_buffer(0){$/;"	f	class:yampl::SharedMemory
SimpleClientSocket	./include/yampl/generic/SimpleClientSocket.h	/^SimpleClientSocket<P, C>::SimpleClientSocket(const Channel &channel, Semantics semantics, void (*deallocator)(void *, void *), const std::string& name) : ServiceSocketBase<P, C>(channel, semantics, deallocator){$/;"	f	class:yampl::SimpleClientSocket
SimpleClientSocket	./include/yampl/generic/SimpleClientSocket.h	/^class SimpleClientSocket : public ServiceSocketBase<P, C>{$/;"	c	namespace:yampl
SimpleClientSocket	./include/yampl/pipe/SimpleClientSocket.h	/^typedef SimpleClientSocket<ProducerSocket, ConsumerSocket> SimpleClientSocket;$/;"	t	namespace:yampl::pipe
SimpleClientSocket	./include/yampl/shm/SimpleClientSocket.h	/^typedef SimpleClientSocket<ProducerSocket, ConsumerSocket> SimpleClientSocket;$/;"	t	namespace:yampl::shm
SimpleServerSocket	./include/yampl/generic/SimpleServerSocket.h	/^SimpleServerSocket<P, C>::SimpleServerSocket(const Channel &channel, Semantics semantics, void (*deallocator)(void *, void *)) : ServiceSocketBase<P, C>(channel, semantics, deallocator){$/;"	f	class:yampl::SimpleServerSocket
SimpleServerSocket	./include/yampl/generic/SimpleServerSocket.h	/^class SimpleServerSocket : public ServiceSocketBase<P, C>{$/;"	c	namespace:yampl
SimpleServerSocket	./include/yampl/pipe/SimpleServerSocket.h	/^typedef SimpleServerSocket<ProducerSocket, ConsumerSocket> SimpleServerSocket;$/;"	t	namespace:yampl::pipe
SimpleServerSocket	./include/yampl/shm/SimpleServerSocket.h	/^typedef SimpleServerSocket<ProducerSocket, ConsumerSocket> SimpleServerSocket;$/;"	t	namespace:yampl::shm
SocketBase	./include/yampl/zeromq/SocketBase.h	/^class SocketBase : public ISocket{$/;"	c	namespace:yampl::zeromq
SocketBase	./src/zeromq/SocketBase.cpp	/^SocketBase::SocketBase(Channel channel, zmq::context_t *context, Semantics semantics, void (*deallocator)(void *, void *), int type) : m_channel(channel), m_semantics(semantics), m_deallocator(deallocator), m_socket(0), m_message(new zmq::message_t()), m_isRecvPending(false){$/;"	f	class:yampl::zeromq::SocketBase
SocketFactory	./include/yampl/SocketFactory.h	/^class SocketFactory : public ISocketFactory{$/;"	c	namespace:yampl
SocketFactory	./include/yampl/pipe/SocketFactory.h	/^class SocketFactory : public ISocketFactory{$/;"	c	namespace:yampl::pipe
SocketFactory	./include/yampl/pipe/SocketFactory.h	/^inline SocketFactory::SocketFactory(){$/;"	f	class:yampl::pipe::SocketFactory
SocketFactory	./include/yampl/shm/SocketFactory.h	/^class SocketFactory : public ISocketFactory{$/;"	c	namespace:yampl::shm
SocketFactory	./include/yampl/zeromq/SocketFactory.h	/^class SocketFactory : public ISocketFactory{$/;"	c	namespace:yampl::zeromq
SocketFactory	./src/SocketFactory.cpp	/^SocketFactory::SocketFactory(){$/;"	f	class:yampl::SocketFactory
SocketFactory	./src/zeromq/SocketFactory.cpp	/^SocketFactory::SocketFactory() : m_context(new zmq::context_t(1)){$/;"	f	class:yampl::zeromq::SocketFactory
SpinLock	./include/yampl/utils/SpinLock.h	/^class SpinLock{$/;"	c	namespace:yampl
SpinLock	./include/yampl/utils/SpinLock.h	/^inline SpinLock::SpinLock() : m_flag(false){$/;"	f	class:yampl::SpinLock
T	./include/yampl/ISocket.h	/^    void send(T (&buffer)[N], void *hint = 0){$/;"	m	class:yampl::ISocket
TAGS	./Makefile	/^TAGS = tags$/;"	m
TESTS	./Makefile	/^TESTS = tests$/;"	m
TESTS	./zeromq/tests/Makefile	/^TESTS = $(noinst_PROGRAMS)$/;"	m
THREAD	./include/yampl/Channel.h	/^  THREAD = 0,$/;"	e	enum:yampl::Context
THREAD_COUNT	./zeromq/tests/test_shutdown_stress.cpp	30;"	d	file:
TIME_WITH_SYS_TIME	./zeromq/src/platform.hpp	162;"	d
Thread	./include/yampl/utils/Thread.h	/^class Thread{$/;"	c	namespace:yampl
Thread	./include/yampl/utils/Thread.h	/^inline Thread::Thread(const std::tr1::function<void()> &fun) : m_isDestroyable(false), m_fun(new std::tr1::function<void()>(fun)){$/;"	f	class:yampl::Thread
TocEntry	./zeromq/doc/zmq.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_bind.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_close.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_connect.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_ctx_destroy.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_ctx_get.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_ctx_new.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_ctx_set.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_epgm.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_errno.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_getsockopt.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_init.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_inproc.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_ipc.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_msg_close.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_msg_copy.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_msg_data.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_msg_get.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_msg_init.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_msg_init_data.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_msg_init_size.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_msg_more.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_msg_move.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_msg_recv.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_msg_send.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_msg_set.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_msg_size.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_pgm.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_poll.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_proxy.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_recv.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_recvmsg.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_send.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_sendmsg.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_setsockopt.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_socket.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_socket_monitor.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_strerror.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_tcp.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_term.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	./zeromq/doc/zmq_version.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
UUID	./include/yampl/utils/UUID.h	/^class UUID{$/;"	c	namespace:yampl
UUID	./include/yampl/utils/UUID.h	/^inline UUID::UUID(const std::string &id){$/;"	f	class:yampl::UUID
UnroutableException	./include/yampl/Exceptions.h	/^    UnroutableException(): Exception("Destination peer not found"){}$/;"	f	class:yampl::UnroutableException
UnroutableException	./include/yampl/Exceptions.h	/^class UnroutableException : public Exception{$/;"	c	namespace:yampl
UnsupportedException	./include/yampl/Exceptions.h	/^  UnsupportedException() : Exception("This feature is not supported yet"){}$/;"	f	class:yampl::UnsupportedException
UnsupportedException	./include/yampl/Exceptions.h	/^class UnsupportedException: public Exception{$/;"	c	namespace:yampl
VERSION	./zeromq/Makefile	/^VERSION = 3.2.1$/;"	m
VERSION	./zeromq/builds/msvc/Makefile	/^VERSION = 3.2.1$/;"	m
VERSION	./zeromq/doc/Makefile	/^VERSION = 3.2.1$/;"	m
VERSION	./zeromq/foreign/openpgm/Makefile	/^VERSION = 3.2.1$/;"	m
VERSION	./zeromq/perf/Makefile	/^VERSION = 3.2.1$/;"	m
VERSION	./zeromq/src/Makefile	/^VERSION = 3.2.1$/;"	m
VERSION	./zeromq/src/platform.hpp	165;"	d
VERSION	./zeromq/tests/Makefile	/^VERSION = 3.2.1$/;"	m
WIN32_LEAN_AND_MEAN	./zeromq/src/windows.hpp	32;"	d
XMLTO	./zeromq/Makefile	/^XMLTO = $/;"	m
XMLTO	./zeromq/builds/msvc/Makefile	/^XMLTO = $/;"	m
XMLTO	./zeromq/doc/Makefile	/^XMLTO = $/;"	m
XMLTO	./zeromq/foreign/openpgm/Makefile	/^XMLTO = $/;"	m
XMLTO	./zeromq/perf/Makefile	/^XMLTO = $/;"	m
XMLTO	./zeromq/src/Makefile	/^XMLTO = $/;"	m
XMLTO	./zeromq/tests/Makefile	/^XMLTO = $/;"	m
YAMPL_CHANNEL_H	./include/yampl/Channel.h	2;"	d
YAMPL_EXCEPTIONS_H	./include/yampl/Exceptions.h	2;"	d
YAMPL_FUTEX_H	./include/yampl/utils/Futex.h	2;"	d
YAMPL_H	./include/yampl.h	2;"	d
YAMPL_ISOCKETFACTORY_H	./include/yampl/ISocketFactory.h	2;"	d
YAMPL_ISOCKET_H	./include/yampl/ISocket.h	2;"	d
YAMPL_MOCLIENTSOCKET_H	./include/yampl/generic/ClientSocket.h	2;"	d
YAMPL_MOSERVERSOCKET_H	./include/yampl/generic/ServerSocketBase.h	2;"	d
YAMPL_PIPE_CLIENTSOCKET_H	./include/yampl/pipe/ClientSocket.h	2;"	d
YAMPL_PIPE_CONSUMERSOCKET_H	./include/yampl/pipe/ConsumerSocket.h	2;"	d
YAMPL_PIPE_PIPESOCKETBASE_H	./include/yampl/pipe/PipeSocketBase.h	2;"	d
YAMPL_PIPE_PRODUCERSOCKET_H	./include/yampl/pipe/ProducerSocket.h	2;"	d
YAMPL_PIPE_SERVERSOCKET_H	./include/yampl/pipe/ServerSocket.h	2;"	d
YAMPL_PIPE_SIMPLECLIENTSOCKET_H	./include/yampl/pipe/SimpleClientSocket.h	2;"	d
YAMPL_PIPE_SIMPLESERVERSOCKET_H	./include/yampl/pipe/SimpleServerSocket.h	2;"	d
YAMPL_PIPE_SOCKETFACTORY_H	./include/yampl/pipe/SocketFactory.h	2;"	d
YAMPL_POLLER_H	./include/yampl/utils/Poller.h	2;"	d
YAMPL_RAWPIPE_H	./include/yampl/utils/RawPipe.h	2;"	d
YAMPL_RINGBUFFER_H	./include/yampl/utils/RingBuffer.h	2;"	d
YAMPL_SEMAPHORE_H	./include/yampl/utils/Semaphore.h	2;"	d
YAMPL_SERVICESOCKET	./include/yampl/generic/ServiceSocketBase.h	2;"	d
YAMPL_SHAREDMEMORY_H	./include/yampl/utils/SharedMemory.h	2;"	d
YAMPL_SHM_CLIENTSOCKET_H	./include/yampl/shm/ClientSocket.h	2;"	d
YAMPL_SHM_CONSUMERSOCKET_H	./include/yampl/shm/ConsumerSocket.h	2;"	d
YAMPL_SHM_PIPESOCKETBASE_H	./include/yampl/shm/PipeSocketBase.h	2;"	d
YAMPL_SHM_PRODUCERSOCKET_H	./include/yampl/shm/ProducerSocket.h	2;"	d
YAMPL_SHM_SERVERSOCKET_H	./include/yampl/shm/ServerSocket.h	2;"	d
YAMPL_SHM_SIMPLECLIENTSOCKET_H	./include/yampl/shm/SimpleClientSocket.h	2;"	d
YAMPL_SHM_SIMPLESERVERSOCKET_H	./include/yampl/shm/SimpleServerSocket.h	2;"	d
YAMPL_SHM_SOCKETFACTORY_H	./include/yampl/shm/SocketFactory.h	2;"	d
YAMPL_SIMPLECLIENTSOCKET_H	./include/yampl/generic/SimpleClientSocket.h	2;"	d
YAMPL_SIMPLESERVERSOCKET_H	./include/yampl/generic/SimpleServerSocket.h	2;"	d
YAMPL_SOCKETFACTORY_H	./include/yampl/SocketFactory.h	2;"	d
YAMPL_SPINLOCK_H	./include/yampl/utils/SpinLock.h	2;"	d
YAMPL_THREAD_H	./include/yampl/utils/Thread.h	2;"	d
YAMPL_UTILS_H	./include/yampl/utils/utils.h	2;"	d
YAMPL_UUID_H	./include/yampl/utils/UUID.h	2;"	d
YAMPL_ZEROMQ_CLIENTSOCKET_H	./include/yampl/zeromq/ClientSocket.h	2;"	d
YAMPL_ZEROMQ_SERVERSOCKET_H	./include/yampl/zeromq/ServerSocket.h	2;"	d
YAMPL_ZEROMQ_SOCKETBASE_H	./include/yampl/zeromq/SocketBase.h	2;"	d
YAMPL_ZEROMQ_SOCKETFACTORY_H	./include/yampl/zeromq/SocketFactory.h	2;"	d
ZMQ	./include/yampl/SocketFactory.h	/^namespace ZMQ{$/;"	n	namespace:yampl
ZMQ_AFFINITY	./zeromq/include/zmq.h	221;"	d
ZMQ_ASSERT	./zeromq/include/zmq.hpp	53;"	d
ZMQ_ASSERT	./zeromq/include/zmq.hpp	55;"	d
ZMQ_ATOMIC_COUNTER_ARM	./zeromq/src/atomic_counter.hpp	190;"	d
ZMQ_ATOMIC_COUNTER_ARM	./zeromq/src/atomic_counter.hpp	33;"	d
ZMQ_ATOMIC_COUNTER_ATOMIC_H	./zeromq/src/atomic_counter.hpp	184;"	d
ZMQ_ATOMIC_COUNTER_ATOMIC_H	./zeromq/src/atomic_counter.hpp	37;"	d
ZMQ_ATOMIC_COUNTER_MUTEX	./zeromq/src/atomic_counter.hpp	193;"	d
ZMQ_ATOMIC_COUNTER_MUTEX	./zeromq/src/atomic_counter.hpp	29;"	d
ZMQ_ATOMIC_COUNTER_MUTEX	./zeromq/src/atomic_counter.hpp	39;"	d
ZMQ_ATOMIC_COUNTER_WINDOWS	./zeromq/src/atomic_counter.hpp	181;"	d
ZMQ_ATOMIC_COUNTER_WINDOWS	./zeromq/src/atomic_counter.hpp	35;"	d
ZMQ_ATOMIC_COUNTER_X86	./zeromq/src/atomic_counter.hpp	187;"	d
ZMQ_ATOMIC_COUNTER_X86	./zeromq/src/atomic_counter.hpp	31;"	d
ZMQ_ATOMIC_PTR_ARM	./zeromq/src/atomic_ptr.hpp	189;"	d
ZMQ_ATOMIC_PTR_ARM	./zeromq/src/atomic_ptr.hpp	32;"	d
ZMQ_ATOMIC_PTR_ATOMIC_H	./zeromq/src/atomic_ptr.hpp	183;"	d
ZMQ_ATOMIC_PTR_ATOMIC_H	./zeromq/src/atomic_ptr.hpp	36;"	d
ZMQ_ATOMIC_PTR_MUTEX	./zeromq/src/atomic_ptr.hpp	192;"	d
ZMQ_ATOMIC_PTR_MUTEX	./zeromq/src/atomic_ptr.hpp	28;"	d
ZMQ_ATOMIC_PTR_MUTEX	./zeromq/src/atomic_ptr.hpp	38;"	d
ZMQ_ATOMIC_PTR_WINDOWS	./zeromq/src/atomic_ptr.hpp	180;"	d
ZMQ_ATOMIC_PTR_WINDOWS	./zeromq/src/atomic_ptr.hpp	34;"	d
ZMQ_ATOMIC_PTR_X86	./zeromq/src/atomic_ptr.hpp	186;"	d
ZMQ_ATOMIC_PTR_X86	./zeromq/src/atomic_ptr.hpp	30;"	d
ZMQ_BACKLOG	./zeromq/include/zmq.h	235;"	d
ZMQ_DEALER	./zeromq/include/zmq.h	209;"	d
ZMQ_DELAY_ATTACH_ON_CONNECT	./zeromq/include/zmq.h	251;"	d
ZMQ_DONTWAIT	./zeromq/include/zmq.h	259;"	d
ZMQ_EVENTS	./zeromq/include/zmq.h	231;"	d
ZMQ_EVENT_ACCEPTED	./zeromq/include/zmq.h	278;"	d
ZMQ_EVENT_ACCEPT_FAILED	./zeromq/include/zmq.h	279;"	d
ZMQ_EVENT_ALL	./zeromq/include/zmq.h	285;"	d
ZMQ_EVENT_BIND_FAILED	./zeromq/include/zmq.h	276;"	d
ZMQ_EVENT_CLOSED	./zeromq/include/zmq.h	281;"	d
ZMQ_EVENT_CLOSE_FAILED	./zeromq/include/zmq.h	282;"	d
ZMQ_EVENT_CONNECTED	./zeromq/include/zmq.h	271;"	d
ZMQ_EVENT_CONNECT_DELAYED	./zeromq/include/zmq.h	272;"	d
ZMQ_EVENT_CONNECT_RETRIED	./zeromq/include/zmq.h	273;"	d
ZMQ_EVENT_DISCONNECTED	./zeromq/include/zmq.h	283;"	d
ZMQ_EVENT_LISTENING	./zeromq/include/zmq.h	275;"	d
ZMQ_EXPORT	./zeromq/include/zmq.h	394;"	d
ZMQ_EXPORT	./zeromq/include/zmq.h	42;"	d
ZMQ_EXPORT	./zeromq/include/zmq.h	44;"	d
ZMQ_EXPORT	./zeromq/include/zmq.h	48;"	d
ZMQ_EXPORT	./zeromq/include/zmq.h	50;"	d
ZMQ_EXPORT	./zeromq/include/zmq.h	52;"	d
ZMQ_EXPORT	./zeromq/include/zmq_utils.h	31;"	d
ZMQ_EXPORT	./zeromq/include/zmq_utils.h	33;"	d
ZMQ_EXPORT	./zeromq/include/zmq_utils.h	37;"	d
ZMQ_EXPORT	./zeromq/include/zmq_utils.h	39;"	d
ZMQ_EXPORT	./zeromq/include/zmq_utils.h	41;"	d
ZMQ_EXPORT	./zeromq/include/zmq_utils.h	58;"	d
ZMQ_FD	./zeromq/include/zmq.h	230;"	d
ZMQ_FORWARDER	./zeromq/include/zmq.h	389;"	d
ZMQ_HAS_RVALUE_REFS	./zeromq/include/zmq.hpp	39;"	d
ZMQ_HAS_RVALUE_REFS	./zeromq/include/zmq.hpp	43;"	d
ZMQ_HAS_RVALUE_REFS	./zeromq/include/zmq.hpp	47;"	d
ZMQ_HAUSNUMERO	./zeromq/include/zmq.h	79;"	d
ZMQ_HAVE_EVENTFD	./zeromq/src/platform.hpp	180;"	d
ZMQ_HAVE_IFADDRS	./zeromq/src/platform.hpp	189;"	d
ZMQ_HAVE_LINUX	./zeromq/src/platform.hpp	192;"	d
ZMQ_HAVE_SOCK_CLOEXEC	./zeromq/src/platform.hpp	213;"	d
ZMQ_HAVE_SO_KEEPALIVE	./zeromq/src/platform.hpp	219;"	d
ZMQ_HAVE_TCP_KEEPCNT	./zeromq/src/platform.hpp	225;"	d
ZMQ_HAVE_TCP_KEEPIDLE	./zeromq/src/platform.hpp	228;"	d
ZMQ_HAVE_TCP_KEEPINTVL	./zeromq/src/platform.hpp	231;"	d
ZMQ_HAVE_UIO	./zeromq/src/platform.hpp	234;"	d
ZMQ_HAVE_WINDOWS	./zeromq/builds/msvc/platform.hpp	30;"	d
ZMQ_IDENTITY	./zeromq/include/zmq.h	222;"	d
ZMQ_IO_THREADS	./zeromq/include/zmq.h	158;"	d
ZMQ_IO_THREADS_DFLT	./zeromq/include/zmq.h	162;"	d
ZMQ_IPV4ONLY	./zeromq/include/zmq.h	243;"	d
ZMQ_LAST_ENDPOINT	./zeromq/include/zmq.h	244;"	d
ZMQ_LINGER	./zeromq/include/zmq.h	233;"	d
ZMQ_MAKE_VERSION	./zeromq/include/zmq.h	65;"	d
ZMQ_MAXMSGSIZE	./zeromq/include/zmq.h	237;"	d
ZMQ_MAX_SOCKETS	./zeromq/include/zmq.h	159;"	d
ZMQ_MAX_SOCKETS_DFLT	./zeromq/include/zmq.h	163;"	d
ZMQ_MORE	./zeromq/include/zmq.h	256;"	d
ZMQ_MULTICAST_HOPS	./zeromq/include/zmq.h	240;"	d
ZMQ_NOBLOCK	./zeromq/include/zmq.h	263;"	d
ZMQ_PAIR	./zeromq/include/zmq.h	204;"	d
ZMQ_POLLERR	./zeromq/include/zmq.h	367;"	d
ZMQ_POLLIN	./zeromq/include/zmq.h	365;"	d
ZMQ_POLLOUT	./zeromq/include/zmq.h	366;"	d
ZMQ_POLL_BASED_ON_POLL	./zeromq/src/zmq.cpp	28;"	d	file:
ZMQ_POLL_BASED_ON_POLL	./zeromq/src/zmq.cpp	34;"	d	file:
ZMQ_POLL_BASED_ON_POLL	./zeromq/src/zmq.cpp	964;"	d	file:
ZMQ_POLL_BASED_ON_SELECT	./zeromq/src/zmq.cpp	26;"	d	file:
ZMQ_POLL_BASED_ON_SELECT	./zeromq/src/zmq.cpp	37;"	d	file:
ZMQ_POLL_BASED_ON_SELECT	./zeromq/src/zmq.cpp	961;"	d	file:
ZMQ_PUB	./zeromq/include/zmq.h	205;"	d
ZMQ_PULL	./zeromq/include/zmq.h	211;"	d
ZMQ_PUSH	./zeromq/include/zmq.h	212;"	d
ZMQ_QUEUE	./zeromq/include/zmq.h	390;"	d
ZMQ_RATE	./zeromq/include/zmq.h	225;"	d
ZMQ_RCVBUF	./zeromq/include/zmq.h	228;"	d
ZMQ_RCVHWM	./zeromq/include/zmq.h	239;"	d
ZMQ_RCVMORE	./zeromq/include/zmq.h	229;"	d
ZMQ_RCVTIMEO	./zeromq/include/zmq.h	241;"	d
ZMQ_RECONNECT_IVL	./zeromq/include/zmq.h	234;"	d
ZMQ_RECONNECT_IVL_MAX	./zeromq/include/zmq.h	236;"	d
ZMQ_RECOVERY_IVL	./zeromq/include/zmq.h	226;"	d
ZMQ_REP	./zeromq/include/zmq.h	208;"	d
ZMQ_REQ	./zeromq/include/zmq.h	207;"	d
ZMQ_ROUTER	./zeromq/include/zmq.h	210;"	d
ZMQ_ROUTER_BEHAVIOR	./zeromq/include/zmq.h	264;"	d
ZMQ_ROUTER_MANDATORY	./zeromq/include/zmq.h	245;"	d
ZMQ_SIGNALER_WAIT_BASED_ON_POLL	./zeromq/src/signaler.cpp	26;"	d	file:
ZMQ_SIGNALER_WAIT_BASED_ON_POLL	./zeromq/src/signaler.cpp	32;"	d	file:
ZMQ_SIGNALER_WAIT_BASED_ON_POLL	./zeromq/src/signaler.cpp	400;"	d	file:
ZMQ_SIGNALER_WAIT_BASED_ON_SELECT	./zeromq/src/signaler.cpp	24;"	d	file:
ZMQ_SIGNALER_WAIT_BASED_ON_SELECT	./zeromq/src/signaler.cpp	35;"	d	file:
ZMQ_SIGNALER_WAIT_BASED_ON_SELECT	./zeromq/src/signaler.cpp	397;"	d	file:
ZMQ_SNDBUF	./zeromq/include/zmq.h	227;"	d
ZMQ_SNDHWM	./zeromq/include/zmq.h	238;"	d
ZMQ_SNDMORE	./zeromq/include/zmq.h	260;"	d
ZMQ_SNDTIMEO	./zeromq/include/zmq.h	242;"	d
ZMQ_STREAMER	./zeromq/include/zmq.h	388;"	d
ZMQ_SUB	./zeromq/include/zmq.h	206;"	d
ZMQ_SUBSCRIBE	./zeromq/include/zmq.h	223;"	d
ZMQ_TCP_ACCEPT_FILTER	./zeromq/include/zmq.h	250;"	d
ZMQ_TCP_KEEPALIVE	./zeromq/include/zmq.h	246;"	d
ZMQ_TCP_KEEPALIVE_CNT	./zeromq/include/zmq.h	247;"	d
ZMQ_TCP_KEEPALIVE_IDLE	./zeromq/include/zmq.h	248;"	d
ZMQ_TCP_KEEPALIVE_INTVL	./zeromq/include/zmq.h	249;"	d
ZMQ_TYPE	./zeromq/include/zmq.h	232;"	d
ZMQ_TYPE_UNSAFE	./zeromq/src/zmq.cpp	21;"	d	file:
ZMQ_UNSUBSCRIBE	./zeromq/include/zmq.h	224;"	d
ZMQ_USE_DEVPOLL	./zeromq/src/poller.hpp	37;"	d
ZMQ_USE_DEVPOLL	./zeromq/src/poller.hpp	58;"	d
ZMQ_USE_DEVPOLL	./zeromq/src/poller.hpp	70;"	d
ZMQ_USE_EPOLL	./zeromq/src/poller.hpp	34;"	d
ZMQ_USE_EPOLL	./zeromq/src/poller.hpp	43;"	d
ZMQ_USE_KQUEUE	./zeromq/src/poller.hpp	40;"	d
ZMQ_USE_KQUEUE	./zeromq/src/poller.hpp	49;"	d
ZMQ_USE_KQUEUE	./zeromq/src/poller.hpp	52;"	d
ZMQ_USE_KQUEUE	./zeromq/src/poller.hpp	55;"	d
ZMQ_USE_KQUEUE	./zeromq/src/poller.hpp	61;"	d
ZMQ_USE_POLL	./zeromq/src/poller.hpp	31;"	d
ZMQ_USE_POLL	./zeromq/src/poller.hpp	64;"	d
ZMQ_USE_POLL	./zeromq/src/poller.hpp	67;"	d
ZMQ_USE_SELECT	./zeromq/src/poller.hpp	28;"	d
ZMQ_USE_SELECT	./zeromq/src/poller.hpp	46;"	d
ZMQ_USE_SELECT	./zeromq/src/poller.hpp	73;"	d
ZMQ_USE_SELECT	./zeromq/src/poller.hpp	76;"	d
ZMQ_VERSION	./zeromq/include/zmq.h	67;"	d
ZMQ_VERSION_MAJOR	./zeromq/include/zmq.h	61;"	d
ZMQ_VERSION_MINOR	./zeromq/include/zmq.h	62;"	d
ZMQ_VERSION_PATCH	./zeromq/include/zmq.h	63;"	d
ZMQ_XPUB	./zeromq/include/zmq.h	213;"	d
ZMQ_XPUB_VERBOSE	./zeromq/include/zmq.h	252;"	d
ZMQ_XREP	./zeromq/include/zmq.h	218;"	d
ZMQ_XREQ	./zeromq/include/zmq.h	217;"	d
ZMQ_XSUB	./zeromq/include/zmq.h	214;"	d
_	./zeromq/include/zmq.h	/^typedef struct zmq_msg_t {unsigned char _ [32];} zmq_msg_t;$/;"	m	struct:zmq_msg_t
_CRT_SECURE_NO_WARNINGS	./zeromq/src/windows.hpp	29;"	d
_GNU_SOURCE	./src/pipe/PipeSocketBase.cpp	1;"	d	file:
_WIN32_WINNT	./zeromq/src/windows.hpp	154;"	d
_WIN32_WINNT	./zeromq/src/windows.hpp	163;"	d
_WIN32_WINNT	./zeromq/src/windows.hpp	164;"	d
__IPC_CONNECTER_HPP_INCLUDED__	./zeromq/src/ipc_connecter.hpp	22;"	d
__PGM_SOCKET_HPP_INCLUDED__	./zeromq/src/pgm_socket.hpp	24;"	d
__PGM_WININT_H__	./zeromq/src/pgm_socket.hpp	32;"	d
__PGM_WININT_H__	./zeromq/src/zmq.cpp	89;"	d	file:
__TCP_CONNECTER_HPP_INCLUDED__	./zeromq/src/tcp_connecter.hpp	23;"	d
__ZMQ_ADDRESS_HPP_INCLUDED__	./zeromq/src/address.hpp	22;"	d
__ZMQ_ARRAY_INCLUDED__	./zeromq/src/array.hpp	23;"	d
__ZMQ_ATOMIC_COUNTER_HPP_INCLUDED__	./zeromq/src/atomic_counter.hpp	23;"	d
__ZMQ_ATOMIC_PTR_HPP_INCLUDED__	./zeromq/src/atomic_ptr.hpp	23;"	d
__ZMQ_BLOB_HPP_INCLUDED__	./zeromq/src/blob.hpp	22;"	d
__ZMQ_CLOCK_HPP_INCLUDED__	./zeromq/src/clock.hpp	22;"	d
__ZMQ_COMMAND_HPP_INCLUDED__	./zeromq/src/command.hpp	23;"	d
__ZMQ_CONFIG_HPP_INCLUDED__	./zeromq/src/config.hpp	23;"	d
__ZMQ_CTX_HPP_INCLUDED__	./zeromq/src/ctx.hpp	23;"	d
__ZMQ_DEALER_HPP_INCLUDED__	./zeromq/src/dealer.hpp	22;"	d
__ZMQ_DECODER_HPP_INCLUDED__	./zeromq/src/decoder.hpp	23;"	d
__ZMQ_DEVPOLL_HPP_INCLUDED__	./zeromq/src/devpoll.hpp	23;"	d
__ZMQ_DIST_HPP_INCLUDED__	./zeromq/src/dist.hpp	22;"	d
__ZMQ_ENCODER_HPP_INCLUDED__	./zeromq/src/encoder.hpp	23;"	d
__ZMQ_EPOLL_HPP_INCLUDED__	./zeromq/src/epoll.hpp	23;"	d
__ZMQ_ERR_HPP_INCLUDED__	./zeromq/src/err.hpp	23;"	d
__ZMQ_FD_HPP_INCLUDED__	./zeromq/src/fd.hpp	22;"	d
__ZMQ_FQ_HPP_INCLUDED__	./zeromq/src/fq.hpp	23;"	d
__ZMQ_HPP_INCLUDED__	./zeromq/include/zmq.hpp	26;"	d
__ZMQ_H_INCLUDED__	./zeromq/include/zmq.h	24;"	d
__ZMQ_IO_OBJECT_HPP_INCLUDED__	./zeromq/src/io_object.hpp	23;"	d
__ZMQ_IO_THREAD_HPP_INCLUDED__	./zeromq/src/io_thread.hpp	23;"	d
__ZMQ_IPC_ADDRESS_HPP_INCLUDED__	./zeromq/src/ipc_address.hpp	22;"	d
__ZMQ_IPC_LISTENER_HPP_INCLUDED__	./zeromq/src/ipc_listener.hpp	22;"	d
__ZMQ_IP_HPP_INCLUDED__	./zeromq/src/ip.hpp	23;"	d
__ZMQ_I_DECODER_HPP_INCLUDED__	./zeromq/src/i_decoder.hpp	22;"	d
__ZMQ_I_ENCODER_HPP_INCLUDED__	./zeromq/src/i_encoder.hpp	22;"	d
__ZMQ_I_ENGINE_HPP_INCLUDED__	./zeromq/src/i_engine.hpp	23;"	d
__ZMQ_I_MSG_SINK_HPP_INCLUDED__	./zeromq/src/i_msg_sink.hpp	22;"	d
__ZMQ_I_MSG_SOURCE_HPP_INCLUDED__	./zeromq/src/i_msg_source.hpp	22;"	d
__ZMQ_I_POLL_EVENTS_HPP_INCLUDED__	./zeromq/src/i_poll_events.hpp	23;"	d
__ZMQ_KQUEUE_HPP_INCLUDED__	./zeromq/src/kqueue.hpp	23;"	d
__ZMQ_LB_HPP_INCLUDED__	./zeromq/src/lb.hpp	23;"	d
__ZMQ_LIKELY_HPP_INCLUDED__	./zeromq/src/likely.hpp	22;"	d
__ZMQ_MAILBOX_HPP_INCLUDED__	./zeromq/src/mailbox.hpp	23;"	d
__ZMQ_MSG_HPP_INCLUDE__	./zeromq/src/msg.hpp	24;"	d
__ZMQ_MTRIE_HPP_INCLUDED__	./zeromq/src/mtrie.hpp	23;"	d
__ZMQ_MUTEX_HPP_INCLUDED__	./zeromq/src/mutex.hpp	23;"	d
__ZMQ_OBJECT_HPP_INCLUDED__	./zeromq/src/object.hpp	23;"	d
__ZMQ_OPTIONS_HPP_INCLUDED__	./zeromq/src/options.hpp	24;"	d
__ZMQ_OWN_HPP_INCLUDED__	./zeromq/src/own.hpp	22;"	d
__ZMQ_PAIR_HPP_INCLUDED__	./zeromq/src/pair.hpp	23;"	d
__ZMQ_PGM_RECEIVER_HPP_INCLUDED__	./zeromq/src/pgm_receiver.hpp	24;"	d
__ZMQ_PGM_SENDER_HPP_INCLUDED__	./zeromq/src/pgm_sender.hpp	24;"	d
__ZMQ_PIPE_HPP_INCLUDED__	./zeromq/src/pipe.hpp	24;"	d
__ZMQ_PLATFORM_HPP_INCLUDED__	./zeromq/builds/msvc/platform.hpp	22;"	d
__ZMQ_POLLER_BASE_HPP_INCLUDED__	./zeromq/src/poller_base.hpp	22;"	d
__ZMQ_POLLER_HPP_INCLUDED__	./zeromq/src/poller.hpp	23;"	d
__ZMQ_POLL_HPP_INCLUDED__	./zeromq/src/poll.hpp	23;"	d
__ZMQ_PRECOMPILED_HPP_INCLUDED__	./zeromq/src/precompiled.hpp	22;"	d
__ZMQ_PROXY_HPP_INCLUDED__	./zeromq/src/proxy.hpp	22;"	d
__ZMQ_PUB_HPP_INCLUDED__	./zeromq/src/pub.hpp	23;"	d
__ZMQ_PULL_HPP_INCLUDED__	./zeromq/src/pull.hpp	23;"	d
__ZMQ_PUSH_HPP_INCLUDED__	./zeromq/src/push.hpp	23;"	d
__ZMQ_RANDOM_HPP_INCLUDED__	./zeromq/src/random.hpp	22;"	d
__ZMQ_REAPER_HPP_INCLUDED__	./zeromq/src/reaper.hpp	22;"	d
__ZMQ_REP_HPP_INCLUDED__	./zeromq/src/rep.hpp	23;"	d
__ZMQ_REQ_HPP_INCLUDED__	./zeromq/src/req.hpp	24;"	d
__ZMQ_ROUTER_HPP_INCLUDED__	./zeromq/src/router.hpp	24;"	d
__ZMQ_SELECT_HPP_INCLUDED__	./zeromq/src/select.hpp	23;"	d
__ZMQ_SESSION_BASE_HPP_INCLUDED__	./zeromq/src/session_base.hpp	24;"	d
__ZMQ_SIGNALER_HPP_INCLUDED__	./zeromq/src/signaler.hpp	22;"	d
__ZMQ_SOCKET_BASE_HPP_INCLUDED__	./zeromq/src/socket_base.hpp	24;"	d
__ZMQ_STDINT_HPP_INCLUDED__	./zeromq/src/stdint.hpp	22;"	d
__ZMQ_STREAM_ENGINE_HPP_INCLUDED__	./zeromq/src/stream_engine.hpp	23;"	d
__ZMQ_SUB_HPP_INCLUDED__	./zeromq/src/sub.hpp	23;"	d
__ZMQ_TCP_ADDRESS_HPP_INCLUDED__	./zeromq/src/tcp_address.hpp	23;"	d
__ZMQ_TCP_HPP_INCLUDED__	./zeromq/src/tcp.hpp	23;"	d
__ZMQ_TCP_LISTENER_HPP_INCLUDED__	./zeromq/src/tcp_listener.hpp	23;"	d
__ZMQ_TEST_TESTUTIL_HPP_INCLUDED__	./zeromq/tests/testutil.hpp	23;"	d
__ZMQ_THREAD_HPP_INCLUDED__	./zeromq/src/thread.hpp	23;"	d
__ZMQ_TRIE_HPP_INCLUDED__	./zeromq/src/trie.hpp	24;"	d
__ZMQ_UTILS_H_INCLUDED__	./zeromq/include/zmq_utils.h	22;"	d
__ZMQ_V1_DECODER_HPP_INCLUDED__	./zeromq/src/v1_decoder.hpp	23;"	d
__ZMQ_V1_ENCODER_HPP_INCLUDED__	./zeromq/src/v1_encoder.hpp	23;"	d
__ZMQ_V1_PROTOCOL_HPP_INCLUDED__	./zeromq/src/v1_protocol.hpp	22;"	d
__ZMQ_WINDOWS_HPP_INCLUDED__	./zeromq/src/windows.hpp	23;"	d
__ZMQ_WIRE_HPP_INCLUDED__	./zeromq/src/wire.hpp	22;"	d
__ZMQ_XPUB_HPP_INCLUDED__	./zeromq/src/xpub.hpp	22;"	d
__ZMQ_XSUB_HPP_INCLUDED__	./zeromq/src/xsub.hpp	22;"	d
__ZMQ_YPIPE_HPP_INCLUDED__	./zeromq/src/ypipe.hpp	23;"	d
__ZMQ_YQUEUE_HPP_INCLUDED__	./zeromq/src/yqueue.hpp	23;"	d
abs_builddir	./zeromq/Makefile	/^abs_builddir = \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq$/;"	m
abs_builddir	./zeromq/builds/msvc/Makefile	/^abs_builddir = \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/builds\/msvc$/;"	m
abs_builddir	./zeromq/doc/Makefile	/^abs_builddir = \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/doc$/;"	m
abs_builddir	./zeromq/foreign/openpgm/Makefile	/^abs_builddir = \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/foreign\/openpgm$/;"	m
abs_builddir	./zeromq/perf/Makefile	/^abs_builddir = \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/perf$/;"	m
abs_builddir	./zeromq/src/Makefile	/^abs_builddir = \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/src$/;"	m
abs_builddir	./zeromq/tests/Makefile	/^abs_builddir = \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/tests$/;"	m
abs_srcdir	./zeromq/Makefile	/^abs_srcdir = \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq$/;"	m
abs_srcdir	./zeromq/builds/msvc/Makefile	/^abs_srcdir = \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/builds\/msvc$/;"	m
abs_srcdir	./zeromq/doc/Makefile	/^abs_srcdir = \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/doc$/;"	m
abs_srcdir	./zeromq/foreign/openpgm/Makefile	/^abs_srcdir = \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/foreign\/openpgm$/;"	m
abs_srcdir	./zeromq/perf/Makefile	/^abs_srcdir = \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/perf$/;"	m
abs_srcdir	./zeromq/src/Makefile	/^abs_srcdir = \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/src$/;"	m
abs_srcdir	./zeromq/tests/Makefile	/^abs_srcdir = \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/tests$/;"	m
abs_top_builddir	./zeromq/Makefile	/^abs_top_builddir = \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq$/;"	m
abs_top_builddir	./zeromq/builds/msvc/Makefile	/^abs_top_builddir = \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq$/;"	m
abs_top_builddir	./zeromq/doc/Makefile	/^abs_top_builddir = \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq$/;"	m
abs_top_builddir	./zeromq/foreign/openpgm/Makefile	/^abs_top_builddir = \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq$/;"	m
abs_top_builddir	./zeromq/perf/Makefile	/^abs_top_builddir = \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq$/;"	m
abs_top_builddir	./zeromq/src/Makefile	/^abs_top_builddir = \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq$/;"	m
abs_top_builddir	./zeromq/tests/Makefile	/^abs_top_builddir = \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq$/;"	m
abs_top_srcdir	./zeromq/Makefile	/^abs_top_srcdir = \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq$/;"	m
abs_top_srcdir	./zeromq/builds/msvc/Makefile	/^abs_top_srcdir = \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq$/;"	m
abs_top_srcdir	./zeromq/doc/Makefile	/^abs_top_srcdir = \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq$/;"	m
abs_top_srcdir	./zeromq/foreign/openpgm/Makefile	/^abs_top_srcdir = \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq$/;"	m
abs_top_srcdir	./zeromq/perf/Makefile	/^abs_top_srcdir = \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq$/;"	m
abs_top_srcdir	./zeromq/src/Makefile	/^abs_top_srcdir = \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq$/;"	m
abs_top_srcdir	./zeromq/tests/Makefile	/^abs_top_srcdir = \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq$/;"	m
ac_ct_AR	./zeromq/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	./zeromq/builds/msvc/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	./zeromq/doc/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	./zeromq/foreign/openpgm/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	./zeromq/perf/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	./zeromq/src/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	./zeromq/tests/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_CC	./zeromq/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	./zeromq/builds/msvc/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	./zeromq/doc/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	./zeromq/foreign/openpgm/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	./zeromq/perf/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	./zeromq/src/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	./zeromq/tests/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CXX	./zeromq/Makefile	/^ac_ct_CXX = $/;"	m
ac_ct_CXX	./zeromq/builds/msvc/Makefile	/^ac_ct_CXX = $/;"	m
ac_ct_CXX	./zeromq/doc/Makefile	/^ac_ct_CXX = $/;"	m
ac_ct_CXX	./zeromq/foreign/openpgm/Makefile	/^ac_ct_CXX = $/;"	m
ac_ct_CXX	./zeromq/perf/Makefile	/^ac_ct_CXX = $/;"	m
ac_ct_CXX	./zeromq/src/Makefile	/^ac_ct_CXX = $/;"	m
ac_ct_CXX	./zeromq/tests/Makefile	/^ac_ct_CXX = $/;"	m
ac_ct_DUMPBIN	./zeromq/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	./zeromq/builds/msvc/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	./zeromq/doc/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	./zeromq/foreign/openpgm/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	./zeromq/perf/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	./zeromq/src/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	./zeromq/tests/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_fn_c_check_func	./configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_func	./zeromq/configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	./configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_compile	./zeromq/configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_mongrel	./configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_check_header_mongrel	./zeromq/configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_check_type	./configure	/^ac_fn_c_check_type ()$/;"	f
ac_fn_c_find_uintX_t	./zeromq/configure	/^ac_fn_c_find_uintX_t ()$/;"	f
ac_fn_c_try_compile	./configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_compile	./zeromq/configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	./configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_cpp	./zeromq/configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	./configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_link	./zeromq/configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	./configure	/^ac_fn_c_try_run ()$/;"	f
ac_fn_c_try_run	./zeromq/configure	/^ac_fn_c_try_run ()$/;"	f
ac_fn_cxx_check_func	./zeromq/configure	/^ac_fn_cxx_check_func ()$/;"	f
ac_fn_cxx_check_header_mongrel	./zeromq/configure	/^ac_fn_cxx_check_header_mongrel ()$/;"	f
ac_fn_cxx_check_type	./zeromq/configure	/^ac_fn_cxx_check_type ()$/;"	f
ac_fn_cxx_try_compile	./configure	/^ac_fn_cxx_try_compile ()$/;"	f
ac_fn_cxx_try_compile	./zeromq/configure	/^ac_fn_cxx_try_compile ()$/;"	f
ac_fn_cxx_try_cpp	./zeromq/configure	/^ac_fn_cxx_try_cpp ()$/;"	f
ac_fn_cxx_try_link	./zeromq/configure	/^ac_fn_cxx_try_link ()$/;"	f
ac_fn_cxx_try_run	./zeromq/configure	/^ac_fn_cxx_try_run ()$/;"	f
accept	./include/yampl/pipe/ServerSocket.h	/^inline void ServerSocket::accept(SimpleServerSocket *socket){$/;"	f	class:yampl::pipe::ServerSocket
accept	./include/yampl/shm/ServerSocket.h	/^inline void ServerSocket::accept(SimpleServerSocket *socket){$/;"	f	class:yampl::shm::ServerSocket
accept	./zeromq/src/ipc_listener.cpp	/^zmq::fd_t zmq::ipc_listener_t::accept ()$/;"	f	class:zmq::ipc_listener_t
accept	./zeromq/src/tcp_listener.cpp	/^zmq::fd_t zmq::tcp_listener_t::accept ()$/;"	f	class:zmq::tcp_listener_t
accept_failed	./zeromq/include/zmq.h	/^    } accept_failed;$/;"	m	union:__anon40::__anon41	typeref:struct:__anon40::__anon41::__anon48
accepted	./zeromq/include/zmq.h	/^    } accepted;$/;"	m	union:__anon40::__anon41	typeref:struct:__anon40::__anon41::__anon47
accepted	./zeromq/src/devpoll.hpp	/^            bool accepted;$/;"	m	struct:zmq::devpoll_t::fd_entry_t
activate_in	./zeromq/src/pgm_receiver.cpp	/^void zmq::pgm_receiver_t::activate_in ()$/;"	f	class:zmq::pgm_receiver_t
activate_in	./zeromq/src/pgm_sender.cpp	/^void zmq::pgm_sender_t::activate_in ()$/;"	f	class:zmq::pgm_sender_t
activate_in	./zeromq/src/stream_engine.cpp	/^void zmq::stream_engine_t::activate_in ()$/;"	f	class:zmq::stream_engine_t
activate_out	./zeromq/src/pgm_receiver.cpp	/^void zmq::pgm_receiver_t::activate_out ()$/;"	f	class:zmq::pgm_receiver_t
activate_out	./zeromq/src/pgm_sender.cpp	/^void zmq::pgm_sender_t::activate_out ()$/;"	f	class:zmq::pgm_sender_t
activate_out	./zeromq/src/stream_engine.cpp	/^void zmq::stream_engine_t::activate_out ()$/;"	f	class:zmq::stream_engine_t
activate_read	./zeromq/src/command.hpp	/^            activate_read,$/;"	e	enum:zmq::command_t::type_t
activate_read	./zeromq/src/command.hpp	/^            } activate_read;$/;"	m	union:zmq::command_t::__anon20	typeref:struct:zmq::command_t::__anon20::__anon26
activate_write	./zeromq/src/command.hpp	/^            activate_write,$/;"	e	enum:zmq::command_t::type_t
activate_write	./zeromq/src/command.hpp	/^            } activate_write;$/;"	m	union:zmq::command_t::__anon20	typeref:struct:zmq::command_t::__anon20::__anon27
activated	./zeromq/src/dist.cpp	/^void zmq::dist_t::activated (pipe_t *pipe_)$/;"	f	class:zmq::dist_t
activated	./zeromq/src/fq.cpp	/^void zmq::fq_t::activated (pipe_t *pipe_)$/;"	f	class:zmq::fq_t
activated	./zeromq/src/lb.cpp	/^void zmq::lb_t::activated (pipe_t *pipe_)$/;"	f	class:zmq::lb_t
active	./zeromq/src/dist.hpp	/^        pipes_t::size_type active;$/;"	m	class:zmq::dist_t
active	./zeromq/src/fq.hpp	/^        pipes_t::size_type active;$/;"	m	class:zmq::fq_t
active	./zeromq/src/lb.hpp	/^        pipes_t::size_type active;$/;"	m	class:zmq::lb_t
active	./zeromq/src/mailbox.hpp	/^        bool active;$/;"	m	class:zmq::mailbox_t
active	./zeromq/src/pipe.hpp	/^            active,$/;"	e	enum:zmq::pipe_t::__anon12
active	./zeromq/src/router.hpp	/^            bool active;$/;"	m	struct:zmq::router_t::outpipe_t
add	./include/yampl/utils/Poller.h	/^inline void Poller::add(int fd, void *data){$/;"	f	class:yampl::Poller
add	./zeromq/src/atomic_counter.hpp	/^        inline integer_t add (integer_t increment_)$/;"	f	class:zmq::atomic_counter_t
add	./zeromq/src/mtrie.cpp	/^bool zmq::mtrie_t::add (unsigned char *prefix_, size_t size_, pipe_t *pipe_)$/;"	f	class:zmq::mtrie_t
add	./zeromq/src/trie.cpp	/^bool zmq::trie_t::add (unsigned char *prefix_, size_t size_)$/;"	f	class:zmq::trie_t
add_endpoint	./zeromq/src/socket_base.cpp	/^void zmq::socket_base_t::add_endpoint (const char *addr_, own_t *endpoint_)$/;"	f	class:zmq::socket_base_t
add_fd	./zeromq/src/devpoll.cpp	/^zmq::devpoll_t::handle_t zmq::devpoll_t::add_fd (fd_t fd_,$/;"	f	class:zmq::devpoll_t
add_fd	./zeromq/src/epoll.cpp	/^zmq::epoll_t::handle_t zmq::epoll_t::add_fd (fd_t fd_, i_poll_events *events_)$/;"	f	class:zmq::epoll_t
add_fd	./zeromq/src/io_object.cpp	/^zmq::io_object_t::handle_t zmq::io_object_t::add_fd (fd_t fd_)$/;"	f	class:zmq::io_object_t
add_fd	./zeromq/src/kqueue.cpp	/^zmq::kqueue_t::handle_t zmq::kqueue_t::add_fd (fd_t fd_,$/;"	f	class:zmq::kqueue_t
add_fd	./zeromq/src/poll.cpp	/^zmq::poll_t::handle_t zmq::poll_t::add_fd (fd_t fd_, i_poll_events *events_)$/;"	f	class:zmq::poll_t
add_fd	./zeromq/src/select.cpp	/^zmq::select_t::handle_t zmq::select_t::add_fd (fd_t fd_, i_poll_events *events_)$/;"	f	class:zmq::select_t
add_helper	./zeromq/src/mtrie.cpp	/^bool zmq::mtrie_t::add_helper (unsigned char *prefix_, size_t size_,$/;"	f	class:zmq::mtrie_t
add_reconnect_timer	./zeromq/src/ipc_connecter.cpp	/^void zmq::ipc_connecter_t::add_reconnect_timer()$/;"	f	class:zmq::ipc_connecter_t
add_reconnect_timer	./zeromq/src/tcp_connecter.cpp	/^void zmq::tcp_connecter_t::add_reconnect_timer()$/;"	f	class:zmq::tcp_connecter_t
add_refs	./zeromq/src/msg.cpp	/^void zmq::msg_t::add_refs (int refs_)$/;"	f	class:zmq::msg_t
add_timer	./zeromq/src/io_object.cpp	/^void zmq::io_object_t::add_timer (int timeout_, int id_)$/;"	f	class:zmq::io_object_t
add_timer	./zeromq/src/poller_base.cpp	/^void zmq::poller_base_t::add_timer (int timeout_, i_poll_events *sink_, int id_)$/;"	f	class:zmq::poller_base_t
addr	./zeromq/include/zmq.h	/^        char *addr;$/;"	m	struct:__anon40::__anon41::__anon42
addr	./zeromq/include/zmq.h	/^        char *addr;$/;"	m	struct:__anon40::__anon41::__anon43
addr	./zeromq/include/zmq.h	/^        char *addr;$/;"	m	struct:__anon40::__anon41::__anon44
addr	./zeromq/include/zmq.h	/^        char *addr;$/;"	m	struct:__anon40::__anon41::__anon45
addr	./zeromq/include/zmq.h	/^        char *addr;$/;"	m	struct:__anon40::__anon41::__anon46
addr	./zeromq/include/zmq.h	/^        char *addr;$/;"	m	struct:__anon40::__anon41::__anon47
addr	./zeromq/include/zmq.h	/^        char *addr;$/;"	m	struct:__anon40::__anon41::__anon48
addr	./zeromq/include/zmq.h	/^        char *addr;$/;"	m	struct:__anon40::__anon41::__anon49
addr	./zeromq/include/zmq.h	/^        char *addr;$/;"	m	struct:__anon40::__anon41::__anon50
addr	./zeromq/include/zmq.h	/^        char *addr;$/;"	m	struct:__anon40::__anon41::__anon51
addr	./zeromq/src/ipc_address.cpp	/^const sockaddr *zmq::ipc_address_t::addr () const$/;"	f	class:zmq::ipc_address_t
addr	./zeromq/src/ipc_connecter.hpp	/^        const address_t *addr;$/;"	m	class:zmq::ipc_connecter_t
addr	./zeromq/src/session_base.hpp	/^        const address_t *addr;$/;"	m	class:zmq::session_base_t
addr	./zeromq/src/tcp_address.cpp	/^const sockaddr *zmq::tcp_address_t::addr () const$/;"	f	class:zmq::tcp_address_t
addr	./zeromq/src/tcp_connecter.hpp	/^        const address_t *addr;$/;"	m	class:zmq::tcp_connecter_t
addr	./zeromq/tests/test_monitor.cpp	/^const char *addr;$/;"	v
address	./zeromq/src/address.hpp	/^        const std::string address;$/;"	m	struct:zmq::address_t
address	./zeromq/src/ipc_address.hpp	/^        struct sockaddr_un address;$/;"	m	class:zmq::ipc_address_t	typeref:struct:zmq::ipc_address_t::sockaddr_un
address	./zeromq/src/tcp_address.hpp	/^        } address;$/;"	m	class:zmq::tcp_address_t	typeref:union:zmq::tcp_address_t::__anon5
address	./zeromq/src/tcp_listener.hpp	/^        tcp_address_t address;$/;"	m	class:zmq::tcp_listener_t
address_mask	./zeromq/src/tcp_address.hpp	/^        int address_mask;$/;"	m	class:zmq::tcp_address_mask_t
address_t	./zeromq/src/address.cpp	/^zmq::address_t::address_t ($/;"	f	class:zmq::address_t
address_t	./zeromq/src/address.hpp	/^    struct address_t {$/;"	s	namespace:zmq
addrlen	./zeromq/src/ipc_address.cpp	/^socklen_t zmq::ipc_address_t::addrlen () const$/;"	f	class:zmq::ipc_address_t
addrlen	./zeromq/src/tcp_address.cpp	/^socklen_t zmq::tcp_address_t::addrlen () const$/;"	f	class:zmq::tcp_address_t
adjust_load	./zeromq/src/poller_base.cpp	/^void zmq::poller_base_t::adjust_load (int amount_)$/;"	f	class:zmq::poller_base_t
affinity	./zeromq/src/options.hpp	/^        uint64_t affinity;$/;"	m	struct:zmq::options_t
alloc_assert	./zeromq/src/err.hpp	144;"	d
allocate	./include/yampl/ISocket.h	/^	bool allocate;$/;"	m	struct:yampl::ISocket::RecvArgs
am__CONFIG_DISTCLEAN_FILES	./zeromq/Makefile	/^am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\$/;"	m
am__EXEEXT_1	./zeromq/tests/Makefile	/^am__EXEEXT_1 = test_shutdown_stress$(EXEEXT) \\$/;"	m
am__aclocal_m4_deps	./zeromq/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/config\/libtool.m4 \\$/;"	m
am__aclocal_m4_deps	./zeromq/builds/msvc/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/config\/libtool.m4 \\$/;"	m
am__aclocal_m4_deps	./zeromq/doc/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/config\/libtool.m4 \\$/;"	m
am__aclocal_m4_deps	./zeromq/foreign/openpgm/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/config\/libtool.m4 \\$/;"	m
am__aclocal_m4_deps	./zeromq/perf/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/config\/libtool.m4 \\$/;"	m
am__aclocal_m4_deps	./zeromq/src/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/config\/libtool.m4 \\$/;"	m
am__aclocal_m4_deps	./zeromq/tests/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/config\/libtool.m4 \\$/;"	m
am__append_1	./zeromq/tests/Makefile	/^am__append_1 = test_shutdown_stress \\$/;"	m
am__base_list	./zeromq/doc/Makefile	/^am__base_list = \\$/;"	m
am__base_list	./zeromq/src/Makefile	/^am__base_list = \\$/;"	m
am__cd	./zeromq/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	./zeromq/builds/msvc/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	./zeromq/doc/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	./zeromq/foreign/openpgm/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	./zeromq/perf/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	./zeromq/src/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	./zeromq/tests/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__configure_deps	./zeromq/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	./zeromq/builds/msvc/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	./zeromq/doc/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	./zeromq/foreign/openpgm/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	./zeromq/perf/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	./zeromq/src/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	./zeromq/tests/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__depfiles_maybe	./zeromq/perf/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	./zeromq/src/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	./zeromq/tests/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__distuninstallcheck_listfiles	./zeromq/Makefile	/^am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \\$/;"	m
am__include	./zeromq/Makefile	/^am__include = include$/;"	m
am__include	./zeromq/builds/msvc/Makefile	/^am__include = include$/;"	m
am__include	./zeromq/doc/Makefile	/^am__include = include$/;"	m
am__include	./zeromq/foreign/openpgm/Makefile	/^am__include = include$/;"	m
am__include	./zeromq/perf/Makefile	/^am__include = include$/;"	m
am__include	./zeromq/src/Makefile	/^am__include = include$/;"	m
am__include	./zeromq/tests/Makefile	/^am__include = include$/;"	m
am__install_max	./zeromq/doc/Makefile	/^am__install_max = 40$/;"	m
am__install_max	./zeromq/src/Makefile	/^am__install_max = 40$/;"	m
am__installdirs	./zeromq/doc/Makefile	/^am__installdirs = "$(DESTDIR)$(man3dir)" "$(DESTDIR)$(man7dir)"$/;"	m
am__installdirs	./zeromq/src/Makefile	/^am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgconfigdir)" \\$/;"	m
am__leading_dot	./zeromq/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	./zeromq/builds/msvc/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	./zeromq/doc/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	./zeromq/foreign/openpgm/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	./zeromq/perf/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	./zeromq/src/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	./zeromq/tests/Makefile	/^am__leading_dot = .$/;"	m
am__mv	./zeromq/perf/Makefile	/^am__mv = mv -f$/;"	m
am__mv	./zeromq/src/Makefile	/^am__mv = mv -f$/;"	m
am__mv	./zeromq/tests/Makefile	/^am__mv = mv -f$/;"	m
am__nobase_list	./zeromq/doc/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	./zeromq/src/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_strip	./zeromq/doc/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	./zeromq/src/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip_setup	./zeromq/doc/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	./zeromq/src/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__quote	./zeromq/Makefile	/^am__quote = $/;"	m
am__quote	./zeromq/builds/msvc/Makefile	/^am__quote = $/;"	m
am__quote	./zeromq/doc/Makefile	/^am__quote = $/;"	m
am__quote	./zeromq/foreign/openpgm/Makefile	/^am__quote = $/;"	m
am__quote	./zeromq/perf/Makefile	/^am__quote = $/;"	m
am__quote	./zeromq/src/Makefile	/^am__quote = $/;"	m
am__quote	./zeromq/tests/Makefile	/^am__quote = $/;"	m
am__relativize	./zeromq/Makefile	/^am__relativize = \\$/;"	m
am__relativize	./zeromq/foreign/openpgm/Makefile	/^am__relativize = \\$/;"	m
am__remove_distdir	./zeromq/Makefile	/^am__remove_distdir = \\$/;"	m
am__strip_dir	./zeromq/doc/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	./zeromq/src/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__tar	./zeromq/Makefile	/^am__tar = tar --format=ustar -chf - "$$tardir"$/;"	m
am__tar	./zeromq/builds/msvc/Makefile	/^am__tar = tar --format=ustar -chf - "$$tardir"$/;"	m
am__tar	./zeromq/doc/Makefile	/^am__tar = tar --format=ustar -chf - "$$tardir"$/;"	m
am__tar	./zeromq/foreign/openpgm/Makefile	/^am__tar = tar --format=ustar -chf - "$$tardir"$/;"	m
am__tar	./zeromq/perf/Makefile	/^am__tar = tar --format=ustar -chf - "$$tardir"$/;"	m
am__tar	./zeromq/src/Makefile	/^am__tar = tar --format=ustar -chf - "$$tardir"$/;"	m
am__tar	./zeromq/tests/Makefile	/^am__tar = tar --format=ustar -chf - "$$tardir"$/;"	m
am__test_pair_ipc_SOURCES_DIST	./zeromq/tests/Makefile	/^am__test_pair_ipc_SOURCES_DIST = test_pair_ipc.cpp testutil.hpp$/;"	m
am__test_reqrep_ipc_SOURCES_DIST	./zeromq/tests/Makefile	/^am__test_reqrep_ipc_SOURCES_DIST = test_reqrep_ipc.cpp testutil.hpp$/;"	m
am__test_shutdown_stress_SOURCES_DIST	./zeromq/tests/Makefile	/^am__test_shutdown_stress_SOURCES_DIST = test_shutdown_stress.cpp$/;"	m
am__test_timeo_SOURCES_DIST	./zeromq/tests/Makefile	/^am__test_timeo_SOURCES_DIST = test_timeo.cpp$/;"	m
am__tty_colors	./zeromq/tests/Makefile	/^am__tty_colors = \\$/;"	m
am__uninstall_files_from_dir	./zeromq/doc/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	./zeromq/src/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__untar	./zeromq/Makefile	/^am__untar = tar -xf -$/;"	m
am__untar	./zeromq/builds/msvc/Makefile	/^am__untar = tar -xf -$/;"	m
am__untar	./zeromq/doc/Makefile	/^am__untar = tar -xf -$/;"	m
am__untar	./zeromq/foreign/openpgm/Makefile	/^am__untar = tar -xf -$/;"	m
am__untar	./zeromq/perf/Makefile	/^am__untar = tar -xf -$/;"	m
am__untar	./zeromq/src/Makefile	/^am__untar = tar -xf -$/;"	m
am__untar	./zeromq/tests/Makefile	/^am__untar = tar -xf -$/;"	m
am__v_CCLD_	./zeromq/src/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_	./zeromq/tests/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_0	./zeromq/src/Makefile	/^am__v_CCLD_0 = @echo "  CCLD  " $@;$/;"	m
am__v_CCLD_0	./zeromq/tests/Makefile	/^am__v_CCLD_0 = @echo "  CCLD  " $@;$/;"	m
am__v_CC_	./zeromq/src/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_	./zeromq/tests/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_0	./zeromq/src/Makefile	/^am__v_CC_0 = @echo "  CC    " $@;$/;"	m
am__v_CC_0	./zeromq/tests/Makefile	/^am__v_CC_0 = @echo "  CC    " $@;$/;"	m
am__v_CXXLD_	./zeromq/perf/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	./zeromq/src/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	./zeromq/tests/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_0	./zeromq/perf/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD " $@;$/;"	m
am__v_CXXLD_0	./zeromq/src/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD " $@;$/;"	m
am__v_CXXLD_0	./zeromq/tests/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD " $@;$/;"	m
am__v_CXX_	./zeromq/perf/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	./zeromq/src/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	./zeromq/tests/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_0	./zeromq/perf/Makefile	/^am__v_CXX_0 = @echo "  CXX   " $@;$/;"	m
am__v_CXX_0	./zeromq/src/Makefile	/^am__v_CXX_0 = @echo "  CXX   " $@;$/;"	m
am__v_CXX_0	./zeromq/tests/Makefile	/^am__v_CXX_0 = @echo "  CXX   " $@;$/;"	m
am__v_GEN_	./zeromq/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	./zeromq/builds/msvc/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	./zeromq/doc/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	./zeromq/foreign/openpgm/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	./zeromq/perf/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	./zeromq/src/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	./zeromq/tests/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_0	./zeromq/Makefile	/^am__v_GEN_0 = @echo "  GEN   " $@;$/;"	m
am__v_GEN_0	./zeromq/builds/msvc/Makefile	/^am__v_GEN_0 = @echo "  GEN   " $@;$/;"	m
am__v_GEN_0	./zeromq/doc/Makefile	/^am__v_GEN_0 = @echo "  GEN   " $@;$/;"	m
am__v_GEN_0	./zeromq/foreign/openpgm/Makefile	/^am__v_GEN_0 = @echo "  GEN   " $@;$/;"	m
am__v_GEN_0	./zeromq/perf/Makefile	/^am__v_GEN_0 = @echo "  GEN   " $@;$/;"	m
am__v_GEN_0	./zeromq/src/Makefile	/^am__v_GEN_0 = @echo "  GEN   " $@;$/;"	m
am__v_GEN_0	./zeromq/tests/Makefile	/^am__v_GEN_0 = @echo "  GEN   " $@;$/;"	m
am__v_at_	./zeromq/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	./zeromq/builds/msvc/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	./zeromq/doc/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	./zeromq/foreign/openpgm/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	./zeromq/perf/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	./zeromq/src/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	./zeromq/tests/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_0	./zeromq/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	./zeromq/builds/msvc/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	./zeromq/doc/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	./zeromq/foreign/openpgm/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	./zeromq/perf/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	./zeromq/src/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	./zeromq/tests/Makefile	/^am__v_at_0 = @$/;"	m
am__v_lt_	./zeromq/perf/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_	./zeromq/src/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_	./zeromq/tests/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_0	./zeromq/perf/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_0	./zeromq/src/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_0	./zeromq/tests/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__vpath_adj	./zeromq/doc/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	./zeromq/src/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj_setup	./zeromq/doc/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	./zeromq/src/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am_inproc_lat_OBJECTS	./zeromq/perf/Makefile	/^am_inproc_lat_OBJECTS = inproc_lat.$(OBJEXT)$/;"	m
am_inproc_thr_OBJECTS	./zeromq/perf/Makefile	/^am_inproc_thr_OBJECTS = inproc_thr.$(OBJEXT)$/;"	m
am_libzmq_la_OBJECTS	./zeromq/src/Makefile	/^am_libzmq_la_OBJECTS = libzmq_la-address.lo libzmq_la-clock.lo \\$/;"	m
am_local_lat_OBJECTS	./zeromq/perf/Makefile	/^am_local_lat_OBJECTS = local_lat.$(OBJEXT)$/;"	m
am_local_thr_OBJECTS	./zeromq/perf/Makefile	/^am_local_thr_OBJECTS = local_thr.$(OBJEXT)$/;"	m
am_remote_lat_OBJECTS	./zeromq/perf/Makefile	/^am_remote_lat_OBJECTS = remote_lat.$(OBJEXT)$/;"	m
am_remote_thr_OBJECTS	./zeromq/perf/Makefile	/^am_remote_thr_OBJECTS = remote_thr.$(OBJEXT)$/;"	m
am_test_connect_delay_OBJECTS	./zeromq/tests/Makefile	/^am_test_connect_delay_OBJECTS = test_connect_delay.$(OBJEXT)$/;"	m
am_test_connect_resolve_OBJECTS	./zeromq/tests/Makefile	/^am_test_connect_resolve_OBJECTS = test_connect_resolve.$(OBJEXT)$/;"	m
am_test_hwm_OBJECTS	./zeromq/tests/Makefile	/^am_test_hwm_OBJECTS = test_hwm.$(OBJEXT)$/;"	m
am_test_invalid_rep_OBJECTS	./zeromq/tests/Makefile	/^am_test_invalid_rep_OBJECTS = test_invalid_rep.$(OBJEXT)$/;"	m
am_test_last_endpoint_OBJECTS	./zeromq/tests/Makefile	/^am_test_last_endpoint_OBJECTS = test_last_endpoint.$(OBJEXT)$/;"	m
am_test_monitor_OBJECTS	./zeromq/tests/Makefile	/^am_test_monitor_OBJECTS = test_monitor.$(OBJEXT)$/;"	m
am_test_msg_flags_OBJECTS	./zeromq/tests/Makefile	/^am_test_msg_flags_OBJECTS = test_msg_flags.$(OBJEXT)$/;"	m
am_test_pair_inproc_OBJECTS	./zeromq/tests/Makefile	/^am_test_pair_inproc_OBJECTS = test_pair_inproc.$(OBJEXT)$/;"	m
am_test_pair_ipc_OBJECTS	./zeromq/tests/Makefile	/^am_test_pair_ipc_OBJECTS = test_pair_ipc.$(OBJEXT)$/;"	m
am_test_pair_tcp_OBJECTS	./zeromq/tests/Makefile	/^am_test_pair_tcp_OBJECTS = test_pair_tcp.$(OBJEXT)$/;"	m
am_test_reqrep_device_OBJECTS	./zeromq/tests/Makefile	/^am_test_reqrep_device_OBJECTS = test_reqrep_device.$(OBJEXT)$/;"	m
am_test_reqrep_inproc_OBJECTS	./zeromq/tests/Makefile	/^am_test_reqrep_inproc_OBJECTS = test_reqrep_inproc.$(OBJEXT)$/;"	m
am_test_reqrep_ipc_OBJECTS	./zeromq/tests/Makefile	/^am_test_reqrep_ipc_OBJECTS =  \\$/;"	m
am_test_reqrep_tcp_OBJECTS	./zeromq/tests/Makefile	/^am_test_reqrep_tcp_OBJECTS = test_reqrep_tcp.$(OBJEXT)$/;"	m
am_test_router_mandatory_OBJECTS	./zeromq/tests/Makefile	/^am_test_router_mandatory_OBJECTS = test_router_mandatory.$(OBJEXT)$/;"	m
am_test_shutdown_stress_OBJECTS	./zeromq/tests/Makefile	/^am_test_shutdown_stress_OBJECTS =  \\$/;"	m
am_test_sub_forward_OBJECTS	./zeromq/tests/Makefile	/^am_test_sub_forward_OBJECTS = test_sub_forward.$(OBJEXT)$/;"	m
am_test_term_endpoint_OBJECTS	./zeromq/tests/Makefile	/^am_test_term_endpoint_OBJECTS = test_term_endpoint.$(OBJEXT)$/;"	m
am_test_timeo_OBJECTS	./zeromq/tests/Makefile	/^am_test_timeo_OBJECTS = test_timeo.$(OBJEXT)$/;"	m
anonymous_pipes	./zeromq/src/router.hpp	/^        std::set <pipe_t*> anonymous_pipes;$/;"	m	class:zmq::router_t
apply	./zeromq/src/trie.cpp	/^void zmq::trie_t::apply (void (*func_) (unsigned char *data_, size_t size_,$/;"	f	class:zmq::trie_t
apply_helper	./zeromq/src/trie.cpp	/^void zmq::trie_t::apply_helper ($/;"	f	class:zmq::trie_t
arg	./zeromq/src/thread.hpp	/^        void *arg;$/;"	m	class:zmq::thread_t
args	./zeromq/src/command.hpp	/^        } args;$/;"	m	struct:zmq::command_t	typeref:union:zmq::command_t::__anon20
array_index	./zeromq/src/array.hpp	/^        int array_index;$/;"	m	class:zmq::array_item_t
array_item_t	./zeromq/src/array.hpp	/^        inline array_item_t () :$/;"	f	class:zmq::array_item_t
array_item_t	./zeromq/src/array.hpp	/^    template <int ID = 0> class array_item_t$/;"	c	namespace:zmq
array_t	./zeromq/src/array.hpp	/^        inline array_t ()$/;"	f	class:zmq::array_t
array_t	./zeromq/src/array.hpp	/^    template <typename T, int ID = 0> class array_t$/;"	c	namespace:zmq
as_fn_append	./config.status	/^  as_fn_append ()$/;"	f
as_fn_append	./configure	/^  as_fn_append ()$/;"	f
as_fn_append	./zeromq/config.status	/^  as_fn_append ()$/;"	f
as_fn_append	./zeromq/configure	/^  as_fn_append ()$/;"	f
as_fn_arith	./config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	./configure	/^  as_fn_arith ()$/;"	f
as_fn_arith	./zeromq/config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	./zeromq/configure	/^  as_fn_arith ()$/;"	f
as_fn_error	./config.status	/^as_fn_error ()$/;"	f
as_fn_error	./configure	/^as_fn_error ()$/;"	f
as_fn_error	./zeromq/config.status	/^as_fn_error ()$/;"	f
as_fn_error	./zeromq/configure	/^as_fn_error ()$/;"	f
as_fn_executable_p	./config.status	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	./configure	/^as_fn_executable_p ()$/;"	f
as_fn_exit	./config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	./configure	/^as_fn_exit ()$/;"	f
as_fn_exit	./zeromq/config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	./zeromq/configure	/^as_fn_exit ()$/;"	f
as_fn_failure	./configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_failure	./zeromq/configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	./config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	./configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	./zeromq/config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	./zeromq/configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	./configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_failure	./zeromq/configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	./configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_ret_success	./zeromq/configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	./config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	./configure	/^as_fn_set_status ()$/;"	f
as_fn_set_status	./zeromq/config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	./zeromq/configure	/^as_fn_set_status ()$/;"	f
as_fn_success	./configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_success	./zeromq/configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	./config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	./configure	/^as_fn_unset ()$/;"	f
as_fn_unset	./zeromq/config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	./zeromq/configure	/^as_fn_unset ()$/;"	f
assign	./zeromq/src/blob.hpp	/^      assign(char_type& __c1, const char_type& __c2)$/;"	f	struct:std::char_traits
assign	./zeromq/src/blob.hpp	/^      assign(char_type* __s, size_t __n, char_type __a)$/;"	f	struct:std::char_traits
atomic_counter_t	./zeromq/src/atomic_counter.hpp	/^        inline atomic_counter_t (integer_t value_ = 0) :$/;"	f	class:zmq::atomic_counter_t
atomic_counter_t	./zeromq/src/atomic_counter.hpp	/^    class atomic_counter_t$/;"	c	namespace:zmq
atomic_ptr_t	./zeromq/src/atomic_ptr.hpp	/^        inline atomic_ptr_t ()$/;"	f	class:zmq::atomic_ptr_t
atomic_ptr_t	./zeromq/src/atomic_ptr.hpp	/^    template <typename T> class atomic_ptr_t$/;"	c	namespace:zmq
attach	./zeromq/src/command.hpp	/^            attach,$/;"	e	enum:zmq::command_t::type_t
attach	./zeromq/src/command.hpp	/^            } attach;$/;"	m	union:zmq::command_t::__anon20	typeref:struct:zmq::command_t::__anon20::__anon24
attach	./zeromq/src/dist.cpp	/^void zmq::dist_t::attach (pipe_t *pipe_)$/;"	f	class:zmq::dist_t
attach	./zeromq/src/fq.cpp	/^void zmq::fq_t::attach (pipe_t *pipe_)$/;"	f	class:zmq::fq_t
attach	./zeromq/src/lb.cpp	/^void zmq::lb_t::attach (pipe_t *pipe_)$/;"	f	class:zmq::lb_t
attach_pipe	./zeromq/src/session_base.cpp	/^void zmq::session_base_t::attach_pipe (pipe_t *pipe_)$/;"	f	class:zmq::session_base_t
attach_pipe	./zeromq/src/socket_base.cpp	/^void zmq::socket_base_t::attach_pipe (pipe_t *pipe_, bool icanhasall_)$/;"	f	class:zmq::socket_base_t
back	./zeromq/src/yqueue.hpp	/^        inline T &back ()$/;"	f	class:zmq::yqueue_t
back_chunk	./zeromq/src/yqueue.hpp	/^        chunk_t *back_chunk;$/;"	m	class:zmq::yqueue_t
back_pos	./zeromq/src/yqueue.hpp	/^        int back_pos;$/;"	m	class:zmq::yqueue_t
backlog	./zeromq/src/options.hpp	/^        int backlog;$/;"	m	struct:zmq::options_t
base	./zeromq/src/msg.hpp	/^            } base;$/;"	m	union:zmq::msg_t::__anon15	typeref:struct:zmq::msg_t::__anon15::__anon16
begin_chunk	./zeromq/src/yqueue.hpp	/^        chunk_t *begin_chunk;$/;"	m	class:zmq::yqueue_t
begin_pos	./zeromq/src/yqueue.hpp	/^        int begin_pos;$/;"	m	class:zmq::yqueue_t
beginning	./zeromq/src/encoder.hpp	/^        bool beginning;$/;"	m	class:zmq::encoder_base_t
bind	./zeromq/include/zmq.hpp	/^        inline void bind (const char *addr_)$/;"	f	class:zmq::socket_t
bind	./zeromq/src/command.hpp	/^            bind,$/;"	e	enum:zmq::command_t::type_t
bind	./zeromq/src/command.hpp	/^            } bind;$/;"	m	union:zmq::command_t::__anon20	typeref:struct:zmq::command_t::__anon20::__anon25
bind	./zeromq/src/socket_base.cpp	/^int zmq::socket_base_t::bind (const char *addr_)$/;"	f	class:zmq::socket_base_t
bind_failed	./zeromq/include/zmq.h	/^    } bind_failed;$/;"	m	union:__anon40::__anon41	typeref:struct:__anon40::__anon41::__anon46
bindir	./zeromq/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	./zeromq/builds/msvc/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	./zeromq/doc/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	./zeromq/foreign/openpgm/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	./zeromq/perf/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	./zeromq/src/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	./zeromq/tests/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
blob_t	./zeromq/src/blob.hpp	/^    typedef std::basic_string <unsigned char> blob_t;$/;"	t	namespace:zmq
blob_t	./zeromq/src/xpub.hpp	/^        typedef std::basic_string <unsigned char> blob_t;$/;"	t	class:zmq::xpub_t
body	./zeromq/src/req.hpp	/^            body$/;"	e	enum:zmq::req_session_t::__anon11
bottom	./zeromq/src/req.hpp	/^            bottom,$/;"	e	enum:zmq::req_session_t::__anon11
bounce	./zeromq/tests/testutil.hpp	/^inline void bounce (void *sb, void *sc)$/;"	f
buf	./zeromq/src/decoder.hpp	/^        unsigned char *buf;$/;"	m	class:zmq::decoder_base_t
buf	./zeromq/src/encoder.hpp	/^        unsigned char *buf;$/;"	m	class:zmq::encoder_base_t
buffer	./include/yampl/ISocket.h	/^	void **buffer;$/;"	m	struct:yampl::ISocket::RecvArgs
bufsize	./zeromq/src/decoder.hpp	/^        size_t bufsize;$/;"	m	class:zmq::decoder_base_t
bufsize	./zeromq/src/encoder.hpp	/^        size_t bufsize;$/;"	m	class:zmq::encoder_base_t
build	./zeromq/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	./zeromq/builds/msvc/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	./zeromq/doc/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	./zeromq/foreign/openpgm/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	./zeromq/perf/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	./zeromq/src/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	./zeromq/tests/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build_alias	./zeromq/Makefile	/^build_alias = $/;"	m
build_alias	./zeromq/builds/msvc/Makefile	/^build_alias = $/;"	m
build_alias	./zeromq/doc/Makefile	/^build_alias = $/;"	m
build_alias	./zeromq/foreign/openpgm/Makefile	/^build_alias = $/;"	m
build_alias	./zeromq/perf/Makefile	/^build_alias = $/;"	m
build_alias	./zeromq/src/Makefile	/^build_alias = $/;"	m
build_alias	./zeromq/tests/Makefile	/^build_alias = $/;"	m
build_cpu	./zeromq/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	./zeromq/builds/msvc/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	./zeromq/doc/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	./zeromq/foreign/openpgm/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	./zeromq/perf/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	./zeromq/src/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	./zeromq/tests/Makefile	/^build_cpu = x86_64$/;"	m
build_os	./zeromq/Makefile	/^build_os = linux-gnu$/;"	m
build_os	./zeromq/builds/msvc/Makefile	/^build_os = linux-gnu$/;"	m
build_os	./zeromq/doc/Makefile	/^build_os = linux-gnu$/;"	m
build_os	./zeromq/foreign/openpgm/Makefile	/^build_os = linux-gnu$/;"	m
build_os	./zeromq/perf/Makefile	/^build_os = linux-gnu$/;"	m
build_os	./zeromq/src/Makefile	/^build_os = linux-gnu$/;"	m
build_os	./zeromq/tests/Makefile	/^build_os = linux-gnu$/;"	m
build_triplet	./zeromq/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	./zeromq/builds/msvc/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	./zeromq/doc/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	./zeromq/foreign/openpgm/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	./zeromq/perf/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	./zeromq/src/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	./zeromq/tests/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_vendor	./zeromq/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	./zeromq/builds/msvc/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	./zeromq/doc/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	./zeromq/foreign/openpgm/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	./zeromq/perf/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	./zeromq/src/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	./zeromq/tests/Makefile	/^build_vendor = unknown$/;"	m
builddir	./zeromq/Makefile	/^builddir = .$/;"	m
builddir	./zeromq/builds/msvc/Makefile	/^builddir = .$/;"	m
builddir	./zeromq/doc/Makefile	/^builddir = .$/;"	m
builddir	./zeromq/foreign/openpgm/Makefile	/^builddir = .$/;"	m
builddir	./zeromq/perf/Makefile	/^builddir = .$/;"	m
builddir	./zeromq/src/Makefile	/^builddir = .$/;"	m
builddir	./zeromq/tests/Makefile	/^builddir = .$/;"	m
c	./zeromq/src/ypipe.hpp	/^        atomic_ptr_t <T> c;$/;"	m	class:zmq::ypipe_t
cancel	./include/yampl/utils/Thread.h	/^inline void Thread::cancel(){$/;"	f	class:yampl::Thread
cancel_timer	./zeromq/src/io_object.cpp	/^void zmq::io_object_t::cancel_timer (int id_)$/;"	f	class:zmq::io_object_t
cancel_timer	./zeromq/src/poller_base.cpp	/^void zmq::poller_base_t::cancel_timer (i_poll_events *sink_, int id_)$/;"	f	class:zmq::poller_base_t
cas	./zeromq/src/atomic_ptr.hpp	/^        inline T *cas (T *cmp_, T *val_)$/;"	f	class:zmq::atomic_ptr_t
char_traits	./zeromq/src/blob.hpp	/^    struct char_traits<unsigned char>$/;"	s	namespace:std
char_type	./zeromq/src/blob.hpp	/^      typedef unsigned char char_type;$/;"	t	struct:std::char_traits
check	./zeromq/src/msg.cpp	/^bool zmq::msg_t::check ()$/;"	f	class:zmq::msg_t
check	./zeromq/src/trie.cpp	/^bool zmq::trie_t::check (unsigned char *data_, size_t size_)$/;"	f	class:zmq::trie_t
check_destroy	./zeromq/src/socket_base.cpp	/^void zmq::socket_base_t::check_destroy ()$/;"	f	class:zmq::socket_base_t
check_msg_t_size	./zeromq/src/zmq.cpp	/^typedef char check_msg_t_size$/;"	t	file:
check_protocol	./zeromq/src/socket_base.cpp	/^int zmq::socket_base_t::check_protocol (const std::string &protocol_)$/;"	f	class:zmq::socket_base_t
check_read	./zeromq/src/pipe.cpp	/^bool zmq::pipe_t::check_read ()$/;"	f	class:zmq::pipe_t
check_read	./zeromq/src/ypipe.hpp	/^        inline bool check_read ()$/;"	f	class:zmq::ypipe_t
check_tag	./zeromq/src/ctx.cpp	/^bool zmq::ctx_t::check_tag ()$/;"	f	class:zmq::ctx_t
check_tag	./zeromq/src/socket_base.cpp	/^bool zmq::socket_base_t::check_tag ()$/;"	f	class:zmq::socket_base_t
check_term_acks	./zeromq/src/own.cpp	/^void zmq::own_t::check_term_acks ()$/;"	f	class:zmq::own_t
check_write	./zeromq/src/pipe.cpp	/^bool zmq::pipe_t::check_write ()$/;"	f	class:zmq::pipe_t
choose_io_thread	./zeromq/src/ctx.cpp	/^zmq::io_thread_t *zmq::ctx_t::choose_io_thread (uint64_t affinity_)$/;"	f	class:zmq::ctx_t
choose_io_thread	./zeromq/src/object.cpp	/^zmq::io_thread_t *zmq::object_t::choose_io_thread (uint64_t affinity_)$/;"	f	class:zmq::object_t
chunk_t	./zeromq/src/yqueue.hpp	/^        struct chunk_t$/;"	s	class:zmq::yqueue_t
clean_pipes	./zeromq/src/session_base.cpp	/^void zmq::session_base_t::clean_pipes ()$/;"	f	class:zmq::session_base_t
clear	./zeromq/src/array.hpp	/^        inline void clear ()$/;"	f	class:zmq::array_t
client	./examples/benchmarks/benchmark.cpp	/^void client(ISocketFactory *factory, Channel channel, Semantics semantics, void *s_buffer, void *r_buffer, unsigned size, unsigned iterations){$/;"	f
client	./examples/multithreaded/multithread.cpp	/^void client(ISocketFactory *factory, int id){$/;"	f
client	./tests/calls.cpp	/^void client(){$/;"	f
client	./tests/dest.cpp	/^void client(ISocketFactory *factory, const Channel &channel){$/;"	f
client	./tests/size.cpp	/^void client(ISocketFactory *factory, const Channel &channel){$/;"	f
clock	./zeromq/src/poller_base.hpp	/^        clock_t clock;$/;"	m	class:zmq::poller_base_t
clock	./zeromq/src/socket_base.hpp	/^        clock_t clock;$/;"	m	class:zmq::socket_base_t
clock_precision	./zeromq/src/config.hpp	/^        clock_precision = 1000000,$/;"	e	enum:zmq::__anon7
clock_t	./zeromq/src/clock.cpp	/^zmq::clock_t::clock_t () :$/;"	f	class:zmq::clock_t
clock_t	./zeromq/src/clock.hpp	/^    class clock_t$/;"	c	namespace:zmq
close	./zeromq/include/zmq.hpp	/^        inline void close()$/;"	f	class:zmq::context_t
close	./zeromq/include/zmq.hpp	/^        inline void close()$/;"	f	class:zmq::socket_t
close	./zeromq/src/ipc_connecter.cpp	/^int zmq::ipc_connecter_t::close ()$/;"	f	class:zmq::ipc_connecter_t
close	./zeromq/src/ipc_listener.cpp	/^int zmq::ipc_listener_t::close ()$/;"	f	class:zmq::ipc_listener_t
close	./zeromq/src/msg.cpp	/^int zmq::msg_t::close ()$/;"	f	class:zmq::msg_t
close	./zeromq/src/socket_base.cpp	/^int zmq::socket_base_t::close ()$/;"	f	class:zmq::socket_base_t
close	./zeromq/src/tcp_connecter.cpp	/^void zmq::tcp_connecter_t::close ()$/;"	f	class:zmq::tcp_connecter_t
close	./zeromq/src/tcp_listener.cpp	/^void zmq::tcp_listener_t::close ()$/;"	f	class:zmq::tcp_listener_t
closeConnection	./include/yampl/generic/ServerSocketBase.h	/^void ServerSocketBase<T>::closeConnection(const UUID &uuid){$/;"	f	class:yampl::ServerSocketBase
close_failed	./zeromq/include/zmq.h	/^    } close_failed;$/;"	m	union:__anon40::__anon41	typeref:struct:__anon40::__anon41::__anon50
closed	./zeromq/include/zmq.h	/^    } closed;$/;"	m	union:__anon40::__anon41	typeref:struct:__anon40::__anon41::__anon49
command_pipe_granularity	./zeromq/src/config.hpp	/^        command_pipe_granularity = 16,$/;"	e	enum:zmq::__anon7
command_t	./zeromq/src/command.hpp	/^    struct command_t$/;"	s	namespace:zmq
compare	./zeromq/src/blob.hpp	/^      compare(const char_type* __s1, const char_type* __s2, size_t __n)$/;"	f	struct:std::char_traits
compute_lwm	./zeromq/src/pipe.cpp	/^int zmq::pipe_t::compute_lwm (int hwm_)$/;"	f	class:zmq::pipe_t
compute_sqns	./zeromq/src/pgm_socket.cpp	/^int zmq::pgm_socket_t::compute_sqns (int tpdu_)$/;"	f	class:zmq::pgm_socket_t
connect	./src/zeromq/ClientSocket.cpp	/^void ClientSocket::connect(){$/;"	f	class:yampl::zeromq::ClientSocket
connect	./zeromq/include/zmq.hpp	/^        inline void connect (const char *addr_)$/;"	f	class:zmq::socket_t
connect	./zeromq/src/ipc_connecter.cpp	/^zmq::fd_t zmq::ipc_connecter_t::connect ()$/;"	f	class:zmq::ipc_connecter_t
connect	./zeromq/src/session_base.hpp	/^        bool connect;$/;"	m	class:zmq::session_base_t
connect	./zeromq/src/socket_base.cpp	/^int zmq::socket_base_t::connect (const char *addr_)$/;"	f	class:zmq::socket_base_t
connect	./zeromq/src/tcp_connecter.cpp	/^zmq::fd_t zmq::tcp_connecter_t::connect ()$/;"	f	class:zmq::tcp_connecter_t
connect_delayed	./zeromq/include/zmq.h	/^    } connect_delayed;$/;"	m	union:__anon40::__anon41	typeref:struct:__anon40::__anon41::__anon43
connect_retried	./zeromq/include/zmq.h	/^    } connect_retried;$/;"	m	union:__anon40::__anon41	typeref:struct:__anon40::__anon41::__anon44
connected	./zeromq/include/zmq.h	/^    } connected;$/;"	m	union:__anon40::__anon41	typeref:struct:__anon40::__anon41::__anon42
connected	./zeromq/include/zmq.hpp	/^        inline bool connected()$/;"	f	class:zmq::socket_t
const	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	10;"	d	file:
content	./zeromq/src/msg.hpp	/^                content_t *content;$/;"	m	struct:zmq::msg_t::__anon15::__anon18
content_t	./zeromq/src/msg.hpp	/^        struct content_t$/;"	s	class:zmq::msg_t
context	./include/yampl/Channel.h	/^    Context context;$/;"	m	struct:yampl::Channel
context_t	./zeromq/include/zmq.hpp	/^        inline context_t (context_t &&rhs) : ptr (rhs.ptr)$/;"	f	class:zmq::context_t
context_t	./zeromq/include/zmq.hpp	/^        inline context_t (int io_threads_)$/;"	f	class:zmq::context_t
context_t	./zeromq/include/zmq.hpp	/^    class context_t$/;"	c	namespace:zmq
copy	./zeromq/include/zmq.hpp	/^        inline void copy (message_t *msg_)$/;"	f	class:zmq::message_t
copy	./zeromq/src/blob.hpp	/^      copy(char_type* __s1, const char_type* __s2, size_t __n)$/;"	f	struct:std::char_traits
copy	./zeromq/src/msg.cpp	/^int zmq::msg_t::copy (msg_t &src_)$/;"	f	class:zmq::msg_t
count	./zeromq/src/mtrie.hpp	/^        unsigned short count;$/;"	m	class:zmq::mtrie_t
count	./zeromq/src/trie.hpp	/^        unsigned short count;$/;"	m	class:zmq::trie_t
cpipe	./zeromq/src/mailbox.hpp	/^        cpipe_t cpipe;$/;"	m	class:zmq::mailbox_t
cpipe_t	./zeromq/src/mailbox.hpp	/^        typedef ypipe_t <command_t, command_pipe_granularity> cpipe_t;$/;"	t	class:zmq::mailbox_t
create	./zeromq/src/session_base.cpp	/^zmq::session_base_t *zmq::session_base_t::create (class io_thread_t *io_thread_,$/;"	f	class:zmq::session_base_t
create	./zeromq/src/socket_base.cpp	/^zmq::socket_base_t *zmq::socket_base_t::create (int type_, class ctx_t *parent_,$/;"	f	class:zmq::socket_base_t
createClientSocket	./include/yampl/ISocketFactory.h	/^    ISocket *createClientSocket(Channel channel, Semantics semantics, const std::string& name){$/;"	f	class:yampl::ISocketFactory
createClientSocket	./include/yampl/ISocketFactory.h	/^    ISocket *createClientSocket(Channel channel, const std::string& name){$/;"	f	class:yampl::ISocketFactory
createClientSocket	./src/SocketFactory.cpp	/^ISocket *SocketFactory::createClientSocket(Channel channel, Semantics semantics, void (*deallocator)(void *, void *), const std::string& name){$/;"	f	class:yampl::SocketFactory
createClientSocket	./src/pipe/PipeSocketFactory.cpp	/^ISocket *SocketFactory::createClientSocket(Channel channel, Semantics semantics, void (*deallocator)(void *, void *), const std::string& name){$/;"	f	class:yampl::pipe::SocketFactory
createClientSocket	./src/shm/SHMSocketFactory.cpp	/^  ISocket *SocketFactory::createClientSocket(Channel channel, Semantics semantics, void (*deallocator)(void *, void *), const std::string& name){$/;"	f	class:yampl::shm::SocketFactory
createClientSocket	./src/zeromq/SocketFactory.cpp	/^ISocket *SocketFactory::createClientSocket(Channel channel, Semantics semantics, void (*deallocator)(void *, void *), const std::string& name){$/;"	f	class:yampl::zeromq::SocketFactory
createServerSocket	./src/SocketFactory.cpp	/^ISocket *SocketFactory::createServerSocket(Channel channel, Semantics semantics, void (*deallocator)(void *, void *)){$/;"	f	class:yampl::SocketFactory
createServerSocket	./src/pipe/PipeSocketFactory.cpp	/^ISocket *SocketFactory::createServerSocket(Channel channel, Semantics semantics, void (*deallocator)(void *, void *)){$/;"	f	class:yampl::pipe::SocketFactory
createServerSocket	./src/shm/SHMSocketFactory.cpp	/^ISocket *SocketFactory::createServerSocket(Channel channel, Semantics semantics, void (*deallocator)(void *, void *)){$/;"	f	class:yampl::shm::SocketFactory
createServerSocket	./src/zeromq/SocketFactory.cpp	/^ISocket *SocketFactory::createServerSocket(Channel channel, Semantics semantics, void (*deallocator)(void *, void *)){$/;"	f	class:yampl::zeromq::SocketFactory
create_socket	./zeromq/src/ctx.cpp	/^zmq::socket_base_t *zmq::ctx_t::create_socket (int type_)$/;"	f	class:zmq::ctx_t
cs	./zeromq/src/mutex.hpp	/^        CRITICAL_SECTION cs;$/;"	m	class:zmq::mutex_t
ctlThreadFun	./src/pipe/PipeSocketBase.cpp	/^void PipeSocketBase::ctlThreadFun(void (*deallocator)(void *, void *)){$/;"	f	class:yampl::pipe::PipeSocketBase
ctx	./zeromq/src/object.hpp	/^        zmq::ctx_t *ctx;$/;"	m	class:zmq::object_t
ctx_t	./zeromq/src/ctx.cpp	/^zmq::ctx_t::ctx_t () :$/;"	f	class:zmq::ctx_t
ctx_t	./zeromq/src/ctx.hpp	/^    class ctx_t$/;"	c	namespace:zmq
ctx_terminated	./zeromq/src/socket_base.hpp	/^        bool ctx_terminated;$/;"	m	class:zmq::socket_base_t
current	./zeromq/src/fq.hpp	/^        pipes_t::size_type current;$/;"	m	class:zmq::fq_t
current	./zeromq/src/lb.hpp	/^        pipes_t::size_type current;$/;"	m	class:zmq::lb_t
current_out	./zeromq/src/router.hpp	/^        zmq::pipe_t *current_out;$/;"	m	class:zmq::router_t
current_reconnect_ivl	./zeromq/src/ipc_connecter.hpp	/^        int current_reconnect_ivl;$/;"	m	class:zmq::ipc_connecter_t
current_reconnect_ivl	./zeromq/src/tcp_connecter.hpp	/^        int current_reconnect_ivl;$/;"	m	class:zmq::tcp_connecter_t
custom	./include/yampl/ISocket.h	/^	void *custom;$/;"	m	struct:yampl::ISocket::RecvArgs
data	./zeromq/include/zmq.h	/^    } data;$/;"	m	struct:__anon40	typeref:union:__anon40::__anon41
data	./zeromq/include/zmq.hpp	/^        inline const void* data () const$/;"	f	class:zmq::message_t
data	./zeromq/include/zmq.hpp	/^        inline void *data ()$/;"	f	class:zmq::message_t
data	./zeromq/src/msg.cpp	/^void *zmq::msg_t::data ()$/;"	f	class:zmq::msg_t
data	./zeromq/src/msg.hpp	/^                unsigned char data [max_vsm_size];$/;"	m	struct:zmq::msg_t::__anon15::__anon17
data	./zeromq/src/msg.hpp	/^            void *data;$/;"	m	struct:zmq::msg_t::content_t
datadir	./zeromq/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	./zeromq/builds/msvc/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	./zeromq/doc/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	./zeromq/foreign/openpgm/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	./zeromq/perf/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	./zeromq/src/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	./zeromq/tests/Makefile	/^datadir = ${datarootdir}$/;"	m
datarootdir	./zeromq/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	./zeromq/builds/msvc/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	./zeromq/doc/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	./zeromq/foreign/openpgm/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	./zeromq/perf/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	./zeromq/src/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	./zeromq/tests/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
dealer_session_t	./zeromq/src/dealer.cpp	/^zmq::dealer_session_t::dealer_session_t (io_thread_t *io_thread_, bool connect_,$/;"	f	class:zmq::dealer_session_t
dealer_session_t	./zeromq/src/dealer.hpp	/^    class dealer_session_t : public session_base_t$/;"	c	namespace:zmq
dealer_t	./zeromq/src/dealer.cpp	/^zmq::dealer_t::dealer_t (class ctx_t *parent_, uint32_t tid_, int sid_) :$/;"	f	class:zmq::dealer_t
dealer_t	./zeromq/src/dealer.hpp	/^    class dealer_t :$/;"	c	namespace:zmq
deallocator	./examples/benchmarks/benchmark.cpp	/^inline void deallocator(void *, void*){}$/;"	f
deallocator	./examples/multithreaded/multithread.cpp	/^inline void deallocator(void *, void*){}$/;"	f
deallocator	./examples/producer_consumer/producer.cpp	/^void deallocator(void *, void*){}$/;"	f
decoder	./zeromq/src/pgm_receiver.hpp	/^            decoder_t *decoder;$/;"	m	struct:zmq::pgm_receiver_t::peer_info_t
decoder	./zeromq/src/stream_engine.hpp	/^        i_decoder *decoder;$/;"	m	class:zmq::stream_engine_t
decoder_base_t	./zeromq/src/decoder.hpp	/^        inline decoder_base_t (size_t bufsize_) :$/;"	f	class:zmq::decoder_base_t
decoder_base_t	./zeromq/src/decoder.hpp	/^    template <typename T> class decoder_base_t : public i_decoder$/;"	c	namespace:zmq
decoder_t	./zeromq/src/decoder.cpp	/^zmq::decoder_t::decoder_t (size_t bufsize_, int64_t maxmsgsize_) :$/;"	f	class:zmq::decoder_t
decoder_t	./zeromq/src/decoder.hpp	/^    class decoder_t : public decoder_base_t <decoder_t>$/;"	c	namespace:zmq
decoding_error	./zeromq/src/decoder.hpp	/^        inline void decoding_error ()$/;"	f	class:zmq::decoder_base_t
defaultDeallocator	./include/yampl/ISocketFactory.h	/^inline void defaultDeallocator(void *buffer, void *){$/;"	f	namespace:yampl
delay	./zeromq/src/pipe.hpp	/^        bool delay;$/;"	m	class:zmq::pipe_t
delay_attach_on_connect	./zeromq/src/options.hpp	/^        int delay_attach_on_connect;$/;"	m	struct:zmq::options_t
delay_on_close	./zeromq/src/options.hpp	/^        bool delay_on_close;$/;"	m	struct:zmq::options_t
delay_on_disconnect	./zeromq/src/options.hpp	/^        bool delay_on_disconnect;$/;"	m	struct:zmq::options_t
delayed_start	./zeromq/src/ipc_connecter.hpp	/^        const bool delayed_start;$/;"	m	class:zmq::ipc_connecter_t
delayed_start	./zeromq/src/tcp_connecter.hpp	/^        const bool delayed_start;$/;"	m	class:zmq::tcp_connecter_t
delimit	./zeromq/src/pipe.cpp	/^void zmq::pipe_t::delimit ()$/;"	f	class:zmq::pipe_t
delimited	./zeromq/src/pipe.hpp	/^            delimited,$/;"	e	enum:zmq::pipe_t::__anon12
delimiter	./zeromq/src/msg.hpp	/^            } delimiter;$/;"	m	union:zmq::msg_t::__anon15	typeref:struct:zmq::msg_t::__anon15::__anon19
depcomp	./zeromq/perf/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/config\/depcomp$/;"	m
depcomp	./zeromq/src/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/config\/depcomp$/;"	m
depcomp	./zeromq/tests/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/config\/depcomp$/;"	m
dequeue	./include/yampl/utils/RingBuffer.h	/^inline size_t RingBuffer::dequeue(void *buffer, size_t size){$/;"	f	class:yampl::RingBuffer
dequeueBuffer	./include/yampl/utils/RingBuffer.h	/^inline void RingBuffer::dequeueBuffer(void *buffer, size_t size){$/;"	f	class:yampl::RingBuffer
descriptor	./zeromq/src/thread.hpp	/^        HANDLE descriptor;$/;"	m	class:zmq::thread_t
descriptor	./zeromq/src/thread.hpp	/^        pthread_t descriptor;$/;"	m	class:zmq::thread_t
destination	./zeromq/src/command.hpp	/^        zmq::object_t *destination;$/;"	m	struct:zmq::command_t
destroy_socket	./zeromq/src/ctx.cpp	/^void zmq::ctx_t::destroy_socket (class socket_base_t *socket_)$/;"	f	class:zmq::ctx_t
destroy_socket	./zeromq/src/object.cpp	/^void zmq::object_t::destroy_socket (socket_base_t *socket_)$/;"	f	class:zmq::object_t
destroyed	./zeromq/src/socket_base.hpp	/^        bool destroyed;$/;"	m	class:zmq::socket_base_t
detach	./include/yampl/utils/Thread.h	/^inline void Thread::detach(){$/;"	f	class:yampl::Thread
detach	./zeromq/src/session_base.cpp	/^void zmq::session_base_t::detach ()$/;"	f	class:zmq::session_base_t
detached	./zeromq/src/session_base.cpp	/^void zmq::session_base_t::detached ()$/;"	f	class:zmq::session_base_t
devpoll_ctl	./zeromq/src/devpoll.cpp	/^void zmq::devpoll_t::devpoll_ctl (fd_t fd_, short events_)$/;"	f	class:zmq::devpoll_t
devpoll_fd	./zeromq/src/devpoll.hpp	/^        fd_t devpoll_fd;$/;"	m	class:zmq::devpoll_t
devpoll_t	./zeromq/src/devpoll.cpp	/^zmq::devpoll_t::devpoll_t () :$/;"	f	class:zmq::devpoll_t
devpoll_t	./zeromq/src/devpoll.hpp	/^    class devpoll_t : public poller_base_t$/;"	c	namespace:zmq
disableCancelState	./include/yampl/utils/Thread.h	/^inline void Thread::disableCancelState(){$/;"	f	class:yampl::Thread
disconnected	./zeromq/include/zmq.h	/^    } disconnected;$/;"	m	union:__anon40::__anon41	typeref:struct:__anon40::__anon41::__anon51
dist	./zeromq/src/xpub.hpp	/^        dist_t dist;$/;"	m	class:zmq::xpub_t
dist	./zeromq/src/xsub.hpp	/^        dist_t dist;$/;"	m	class:zmq::xsub_t
dist_man_MANS	./zeromq/doc/Makefile	/^dist_man_MANS = $(MAN_DOC)$/;"	m
dist_t	./zeromq/src/dist.cpp	/^zmq::dist_t::dist_t () :$/;"	f	class:zmq::dist_t
dist_t	./zeromq/src/dist.hpp	/^    class dist_t$/;"	c	namespace:zmq
distcleancheck_listfiles	./zeromq/Makefile	/^distcleancheck_listfiles = find . -type f -print$/;"	m
distdir	./zeromq/Makefile	/^distdir = $(PACKAGE)-$(VERSION)$/;"	m
distribute	./zeromq/src/dist.cpp	/^void zmq::dist_t::distribute (msg_t *msg_, int flags_)$/;"	f	class:zmq::dist_t
distuninstallcheck_listfiles	./zeromq/Makefile	/^distuninstallcheck_listfiles = find . -type f -print$/;"	m
do_bind_and_verify	./zeromq/tests/test_last_endpoint.cpp	/^static void do_bind_and_verify (void *s, const char *endpoint)$/;"	f	file:
docdir	./zeromq/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	./zeromq/builds/msvc/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	./zeromq/doc/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	./zeromq/foreign/openpgm/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	./zeromq/perf/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	./zeromq/src/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	./zeromq/tests/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
done	./zeromq/src/command.hpp	/^            done$/;"	e	enum:zmq::command_t::type_t
done	./zeromq/src/command.hpp	/^            } done;$/;"	m	union:zmq::command_t::__anon20	typeref:struct:zmq::command_t::__anon20::__anon36
double_terminated	./zeromq/src/pipe.hpp	/^            double_terminated$/;"	e	enum:zmq::pipe_t::__anon12
down	./include/yampl/utils/Semaphore.h	/^inline void Semaphore::down(int n, long timeout){$/;"	f	class:yampl::Semaphore
drop_subscriptions	./zeromq/src/pgm_receiver.cpp	/^void zmq::pgm_receiver_t::drop_subscriptions ()$/;"	f	class:zmq::pgm_receiver_t
dropping	./zeromq/src/lb.hpp	/^        bool dropping;$/;"	m	class:zmq::lb_t
dumpImpl	./examples/benchmarks/benchmark.cpp	/^void dumpImpl(const char *impl){$/;"	f
dumpSemantics	./examples/benchmarks/benchmark.cpp	/^void dumpSemantics(Semantics semantics){$/;"	f
dvidir	./zeromq/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	./zeromq/builds/msvc/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	./zeromq/doc/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	./zeromq/foreign/openpgm/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	./zeromq/perf/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	./zeromq/src/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	./zeromq/tests/Makefile	/^dvidir = ${docdir}$/;"	m
eight_byte_size_ready	./zeromq/src/decoder.cpp	/^bool zmq::decoder_t::eight_byte_size_ready ()$/;"	f	class:zmq::decoder_t
eight_byte_size_ready	./zeromq/src/v1_decoder.cpp	/^bool zmq::v1_decoder_t::eight_byte_size_ready ()$/;"	f	class:zmq::v1_decoder_t
eligible	./zeromq/src/dist.hpp	/^        pipes_t::size_type eligible;$/;"	m	class:zmq::dist_t
empty	./include/yampl/utils/RingBuffer.h	/^inline bool RingBuffer::empty(){$/;"	f	class:yampl::RingBuffer
empty	./zeromq/src/array.hpp	/^        inline bool empty ()$/;"	f	class:zmq::array_t
empty_slots	./zeromq/src/ctx.hpp	/^        emtpy_slots_t empty_slots;$/;"	m	class:zmq::ctx_t
emtpy_slots_t	./zeromq/src/ctx.hpp	/^        typedef std::vector <uint32_t> emtpy_slots_t;$/;"	t	class:zmq::ctx_t
enableCancelState	./include/yampl/utils/Thread.h	/^inline void Thread::enableCancelState(){$/;"	f	class:yampl::Thread
enable_ipv4_mapping	./zeromq/src/ip.cpp	/^void zmq::enable_ipv4_mapping (fd_t s_)$/;"	f	class:zmq
encoder	./zeromq/src/pgm_sender.hpp	/^        encoder_t encoder;$/;"	m	class:zmq::pgm_sender_t
encoder	./zeromq/src/stream_engine.hpp	/^        i_encoder *encoder;$/;"	m	class:zmq::stream_engine_t
encoder_base_t	./zeromq/src/encoder.hpp	/^        inline encoder_base_t (size_t bufsize_) :$/;"	f	class:zmq::encoder_base_t
encoder_base_t	./zeromq/src/encoder.hpp	/^    template <typename T> class encoder_base_t : public i_encoder$/;"	c	namespace:zmq
encoder_t	./zeromq/src/encoder.cpp	/^zmq::encoder_t::encoder_t (size_t bufsize_) :$/;"	f	class:zmq::encoder_t
encoder_t	./zeromq/src/encoder.hpp	/^    class encoder_t : public encoder_base_t <encoder_t>$/;"	c	namespace:zmq
end_chunk	./zeromq/src/yqueue.hpp	/^        chunk_t *end_chunk;$/;"	m	class:zmq::yqueue_t
end_pos	./zeromq/src/yqueue.hpp	/^        int end_pos;$/;"	m	class:zmq::yqueue_t
end_time	./examples/benchmarks/benchmark.cpp	/^static struct timeval start_time, end_time;$/;"	v	typeref:struct:	file:
endpoint	./zeromq/src/ipc_connecter.hpp	/^        std::string endpoint;$/;"	m	class:zmq::ipc_connecter_t
endpoint	./zeromq/src/ipc_listener.hpp	/^        std::string endpoint;$/;"	m	class:zmq::ipc_listener_t
endpoint	./zeromq/src/stream_engine.hpp	/^        std::string endpoint;$/;"	m	class:zmq::stream_engine_t
endpoint	./zeromq/src/tcp_connecter.hpp	/^        std::string endpoint;$/;"	m	class:zmq::tcp_connecter_t
endpoint	./zeromq/src/tcp_listener.hpp	/^        std::string endpoint;$/;"	m	class:zmq::tcp_listener_t
endpoint_t	./zeromq/src/ctx.hpp	/^    struct endpoint_t$/;"	s	namespace:zmq
endpoints	./zeromq/src/ctx.hpp	/^        endpoints_t endpoints;$/;"	m	class:zmq::ctx_t
endpoints	./zeromq/src/socket_base.hpp	/^        endpoints_t endpoints;$/;"	m	class:zmq::socket_base_t
endpoints_sync	./zeromq/src/ctx.hpp	/^        mutex_t endpoints_sync;$/;"	m	class:zmq::ctx_t
endpoints_t	./zeromq/src/ctx.hpp	/^        typedef std::map <std::string, endpoint_t> endpoints_t;$/;"	t	class:zmq::ctx_t
endpoints_t	./zeromq/src/socket_base.hpp	/^        typedef std::multimap <std::string, own_t *> endpoints_t;$/;"	t	class:zmq::socket_base_t
engine	./zeromq/src/command.hpp	/^                struct i_engine *engine;$/;"	m	struct:zmq::command_t::__anon20::__anon24	typeref:struct:zmq::command_t::__anon20::__anon24::i_engine
engine	./zeromq/src/session_base.hpp	/^        zmq::i_engine *engine;$/;"	m	class:zmq::session_base_t
enqueue	./include/yampl/utils/RingBuffer.h	/^inline size_t RingBuffer::enqueue(void *buffer, size_t size, bool cont){$/;"	f	class:yampl::RingBuffer
enqueueBuffer	./include/yampl/utils/RingBuffer.h	/^inline void RingBuffer::enqueueBuffer(void *buffer, size_t size){$/;"	f	class:yampl::RingBuffer
eof	./zeromq/src/blob.hpp	/^      eof() { return static_cast<int_type>(-1); }$/;"	f	struct:std::char_traits
epoll_fd	./zeromq/src/epoll.hpp	/^        fd_t epoll_fd;$/;"	m	class:zmq::epoll_t
epoll_t	./zeromq/src/epoll.cpp	/^zmq::epoll_t::epoll_t () :$/;"	f	class:zmq::epoll_t
epoll_t	./zeromq/src/epoll.hpp	/^    class epoll_t : public poller_base_t$/;"	c	namespace:zmq
eq	./zeromq/src/blob.hpp	/^      eq(const char_type& __c1, const char_type& __c2)$/;"	f	struct:std::char_traits
eq_int_type	./zeromq/src/blob.hpp	/^      eq_int_type(const int_type& __c1, const int_type& __c2)$/;"	f	struct:std::char_traits
erase	./zeromq/src/array.hpp	/^        inline void erase (T *item_) {$/;"	f	class:zmq::array_t
erase	./zeromq/src/array.hpp	/^        inline void erase (size_type index_) {$/;"	f	class:zmq::array_t
err	./zeromq/include/zmq.h	/^        int err;$/;"	m	struct:__anon40::__anon41::__anon43
err	./zeromq/include/zmq.h	/^        int err;$/;"	m	struct:__anon40::__anon41::__anon46
err	./zeromq/include/zmq.h	/^        int err;$/;"	m	struct:__anon40::__anon41::__anon48
err	./zeromq/include/zmq.h	/^        int err;$/;"	m	struct:__anon40::__anon41::__anon50
errno_assert	./zeromq/src/err.hpp	114;"	d
errno_to_string	./zeromq/src/err.cpp	/^const char *zmq::errno_to_string (int errno_)$/;"	f	class:zmq
errnum	./zeromq/include/zmq.hpp	/^        int errnum;$/;"	m	class:zmq::error_t
error	./zeromq/src/stream_engine.cpp	/^void zmq::stream_engine_t::error ()$/;"	f	class:zmq::stream_engine_t
error_t	./zeromq/include/zmq.hpp	/^        error_t () : errnum (zmq_errno ()) {}$/;"	f	class:zmq::error_t
error_t	./zeromq/include/zmq.hpp	/^    class error_t : public std::exception$/;"	c	namespace:zmq
ev	./zeromq/src/epoll.hpp	/^            epoll_event ev;$/;"	m	struct:zmq::epoll_t::poll_entry_t
event	./zeromq/include/zmq.h	/^    int event;$/;"	m	struct:__anon40
event_accept_failed	./zeromq/src/socket_base.cpp	/^void zmq::socket_base_t::event_accept_failed (const char *addr_, int err_)$/;"	f	class:zmq::socket_base_t
event_accepted	./zeromq/src/socket_base.cpp	/^void zmq::socket_base_t::event_accepted (const char *addr_, int fd_)$/;"	f	class:zmq::socket_base_t
event_bind_failed	./zeromq/src/socket_base.cpp	/^void zmq::socket_base_t::event_bind_failed (const char *addr_, int err_)$/;"	f	class:zmq::socket_base_t
event_close_failed	./zeromq/src/socket_base.cpp	/^void zmq::socket_base_t::event_close_failed (const char *addr_, int err_)$/;"	f	class:zmq::socket_base_t
event_closed	./zeromq/src/socket_base.cpp	/^void zmq::socket_base_t::event_closed (const char *addr_, int fd_)$/;"	f	class:zmq::socket_base_t
event_connect_delayed	./zeromq/src/socket_base.cpp	/^void zmq::socket_base_t::event_connect_delayed (const char *addr_, int err_)$/;"	f	class:zmq::socket_base_t
event_connect_retried	./zeromq/src/socket_base.cpp	/^void zmq::socket_base_t::event_connect_retried (const char *addr_, int interval_)$/;"	f	class:zmq::socket_base_t
event_connected	./zeromq/src/socket_base.cpp	/^void zmq::socket_base_t::event_connected (const char *addr_, int fd_)$/;"	f	class:zmq::socket_base_t
event_disconnected	./zeromq/src/socket_base.cpp	/^void zmq::socket_base_t::event_disconnected (const char *addr_, int fd_)$/;"	f	class:zmq::socket_base_t
event_listening	./zeromq/src/socket_base.cpp	/^void zmq::socket_base_t::event_listening (const char *addr_, int fd_)$/;"	f	class:zmq::socket_base_t
events	./zeromq/include/zmq.h	/^    short events;$/;"	m	struct:__anon52
events	./zeromq/src/devpoll.hpp	/^            short events;$/;"	m	struct:zmq::devpoll_t::fd_entry_t
events	./zeromq/src/epoll.hpp	/^            zmq::i_poll_events *events;$/;"	m	struct:zmq::epoll_t::poll_entry_t
events	./zeromq/src/poll.hpp	/^            zmq::i_poll_events *events;$/;"	m	struct:zmq::poll_t::fd_entry_t
events	./zeromq/src/select.hpp	/^            zmq::i_poll_events *events;$/;"	m	struct:zmq::select_t::fd_entry_t
exceptfds	./zeromq/src/select.hpp	/^        fd_set exceptfds;$/;"	m	class:zmq::select_t
exec_prefix	./zeromq/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	./zeromq/builds/msvc/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	./zeromq/doc/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	./zeromq/foreign/openpgm/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	./zeromq/perf/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	./zeromq/src/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	./zeromq/tests/Makefile	/^exec_prefix = ${prefix}$/;"	m
execute_timers	./zeromq/src/poller_base.cpp	/^uint64_t zmq::poller_base_t::execute_timers ()$/;"	f	class:zmq::poller_base_t
extract_flags	./zeromq/src/socket_base.cpp	/^void zmq::socket_base_t::extract_flags (msg_t *msg_)$/;"	f	class:zmq::socket_base_t
f	./zeromq/src/ypipe.hpp	/^        T *f;$/;"	m	class:zmq::ypipe_t
family	./zeromq/src/tcp_address.cpp	/^unsigned short zmq::tcp_address_t::family () const$/;"	f	class:zmq::tcp_address_t
fd	./zeromq/include/zmq.h	/^        int fd;$/;"	m	struct:__anon40::__anon41::__anon42
fd	./zeromq/include/zmq.h	/^        int fd;$/;"	m	struct:__anon40::__anon41::__anon45
fd	./zeromq/include/zmq.h	/^        int fd;$/;"	m	struct:__anon40::__anon41::__anon47
fd	./zeromq/include/zmq.h	/^        int fd;$/;"	m	struct:__anon40::__anon41::__anon49
fd	./zeromq/include/zmq.h	/^        int fd;$/;"	m	struct:__anon40::__anon41::__anon51
fd	./zeromq/include/zmq.h	/^    SOCKET fd;$/;"	m	struct:__anon52
fd	./zeromq/include/zmq.h	/^    int fd;$/;"	m	struct:__anon52
fd	./zeromq/src/epoll.hpp	/^            fd_t fd;$/;"	m	struct:zmq::epoll_t::poll_entry_t
fd	./zeromq/src/kqueue.hpp	/^            fd_t fd;$/;"	m	struct:zmq::kqueue_t::poll_entry_t
fd	./zeromq/src/select.hpp	/^            fd_t fd;$/;"	m	struct:zmq::select_t::fd_entry_t
fd_entry_t	./zeromq/src/devpoll.hpp	/^        struct fd_entry_t$/;"	s	class:zmq::devpoll_t
fd_entry_t	./zeromq/src/poll.hpp	/^        struct fd_entry_t$/;"	s	class:zmq::poll_t
fd_entry_t	./zeromq/src/select.hpp	/^        struct fd_entry_t$/;"	s	class:zmq::select_t
fd_set_t	./zeromq/src/select.hpp	/^        typedef std::vector <fd_entry_t> fd_set_t;$/;"	t	class:zmq::select_t
fd_t	./zeromq/src/fd.hpp	/^    typedef UINT_PTR fd_t;$/;"	t	namespace:zmq
fd_table	./zeromq/src/devpoll.hpp	/^        fd_table_t fd_table;$/;"	m	class:zmq::devpoll_t
fd_table	./zeromq/src/poll.hpp	/^        fd_table_t fd_table;$/;"	m	class:zmq::poll_t
fd_table_t	./zeromq/src/devpoll.hpp	/^        typedef std::vector <fd_entry_t> fd_table_t;$/;"	t	class:zmq::devpoll_t
fd_table_t	./zeromq/src/poll.hpp	/^        typedef std::vector <fd_entry_t> fd_table_t;$/;"	t	class:zmq::poll_t
fds	./zeromq/src/select.hpp	/^        fd_set_t fds;$/;"	m	class:zmq::select_t
features	./cmake-build-debug/CMakeFiles/feature_tests.c	/^  const char features[] = {"\\n"$/;"	v
features	./cmake-build-debug/CMakeFiles/feature_tests.cxx	/^  const char features[] = {"\\n"$/;"	v
ffn	./zeromq/src/msg.hpp	/^            msg_free_fn *ffn;$/;"	m	struct:zmq::msg_t::content_t
filename	./zeromq/src/ipc_listener.hpp	/^        std::string filename;$/;"	m	class:zmq::ipc_listener_t
filter	./zeromq/src/options.hpp	/^        bool filter;$/;"	m	struct:zmq::options_t
find	./zeromq/src/blob.hpp	/^      find(const char_type* __s, size_t __n, const char_type& __a)$/;"	f	struct:std::char_traits
find_endpoint	./zeromq/src/ctx.cpp	/^zmq::endpoint_t zmq::ctx_t::find_endpoint (const char *addr_)$/;"	f	class:zmq::ctx_t
find_endpoint	./zeromq/src/object.cpp	/^zmq::endpoint_t zmq::object_t::find_endpoint (const char *addr_)$/;"	f	class:zmq::object_t
flag_pollin	./zeromq/src/kqueue.hpp	/^            bool flag_pollin;$/;"	m	struct:zmq::kqueue_t::poll_entry_t
flag_pollout	./zeromq/src/kqueue.hpp	/^            bool flag_pollout;$/;"	m	struct:zmq::kqueue_t::poll_entry_t
flags	./zeromq/src/msg.cpp	/^unsigned char zmq::msg_t::flags ()$/;"	f	class:zmq::msg_t
flags	./zeromq/src/msg.hpp	/^                unsigned char flags;$/;"	m	struct:zmq::msg_t::__anon15::__anon16
flags	./zeromq/src/msg.hpp	/^                unsigned char flags;$/;"	m	struct:zmq::msg_t::__anon15::__anon17
flags	./zeromq/src/msg.hpp	/^                unsigned char flags;$/;"	m	struct:zmq::msg_t::__anon15::__anon18
flags	./zeromq/src/msg.hpp	/^                unsigned char flags;$/;"	m	struct:zmq::msg_t::__anon15::__anon19
flags_ready	./zeromq/src/decoder.cpp	/^bool zmq::decoder_t::flags_ready ()$/;"	f	class:zmq::decoder_t
flags_ready	./zeromq/src/v1_decoder.cpp	/^bool zmq::v1_decoder_t::flags_ready ()$/;"	f	class:zmq::v1_decoder_t
flush	./zeromq/src/pipe.cpp	/^void zmq::pipe_t::flush ()$/;"	f	class:zmq::pipe_t
flush	./zeromq/src/session_base.cpp	/^void zmq::session_base_t::flush ()$/;"	f	class:zmq::session_base_t
flush	./zeromq/src/ypipe.hpp	/^        inline bool flush ()$/;"	f	class:zmq::ypipe_t
fq	./zeromq/src/dealer.hpp	/^        fq_t fq;$/;"	m	class:zmq::dealer_t
fq	./zeromq/src/pull.hpp	/^        fq_t fq;$/;"	m	class:zmq::pull_t
fq	./zeromq/src/router.hpp	/^        fq_t fq;$/;"	m	class:zmq::router_t
fq	./zeromq/src/xsub.hpp	/^        fq_t fq;$/;"	m	class:zmq::xsub_t
fq_t	./zeromq/src/fq.cpp	/^zmq::fq_t::fq_t () :$/;"	f	class:zmq::fq_t
fq_t	./zeromq/src/fq.hpp	/^    class fq_t$/;"	c	namespace:zmq
free_fn	./zeromq/include/zmq.hpp	/^    typedef zmq_free_fn free_fn;$/;"	t	namespace:zmq
front	./zeromq/src/yqueue.hpp	/^        inline T &front ()$/;"	f	class:zmq::yqueue_t
func_append	./zeromq/config.status	/^func_append ()\\$/;"	f
func_append	./zeromq/config/ltmain.sh	/^func_append ()$/;"	f
func_append	./zeromq/configure	/^func_append ()\\$/;"	f
func_append	./zeromq/libtool	/^func_append ()$/;"	f
func_append_quoted	./zeromq/config.status	/^func_append_quoted ()\\$/;"	f
func_append_quoted	./zeromq/config/ltmain.sh	/^func_append_quoted ()$/;"	f
func_append_quoted	./zeromq/configure	/^func_append_quoted ()\\$/;"	f
func_append_quoted	./zeromq/libtool	/^func_append_quoted ()$/;"	f
func_arith	./zeromq/config.status	/^func_arith ()\\$/;"	f
func_arith	./zeromq/config/ltmain.sh	/^func_arith ()$/;"	f
func_arith	./zeromq/configure	/^func_arith ()\\$/;"	f
func_arith	./zeromq/libtool	/^func_arith ()$/;"	f
func_basename	./zeromq/config.status	/^func_basename ()\\$/;"	f
func_basename	./zeromq/config/ltmain.sh	/^func_basename ()$/;"	f
func_basename	./zeromq/configure	/^func_basename ()\\$/;"	f
func_basename	./zeromq/libtool	/^func_basename ()$/;"	f
func_check_version_match	./zeromq/config/ltmain.sh	/^func_check_version_match ()$/;"	f
func_check_version_match	./zeromq/libtool	/^func_check_version_match ()$/;"	f
func_cl_wrapper	./zeromq/config/compile	/^func_cl_wrapper ()$/;"	f
func_config	./zeromq/config/ltmain.sh	/^func_config ()$/;"	f
func_config	./zeromq/libtool	/^func_config ()$/;"	f
func_convert_core_file_wine_to_w32	./zeromq/config/ltmain.sh	/^func_convert_core_file_wine_to_w32 ()$/;"	f
func_convert_core_file_wine_to_w32	./zeromq/libtool	/^func_convert_core_file_wine_to_w32 ()$/;"	f
func_convert_core_msys_to_w32	./zeromq/config/ltmain.sh	/^func_convert_core_msys_to_w32 ()$/;"	f
func_convert_core_msys_to_w32	./zeromq/libtool	/^func_convert_core_msys_to_w32 ()$/;"	f
func_convert_core_path_wine_to_w32	./zeromq/config/ltmain.sh	/^func_convert_core_path_wine_to_w32 ()$/;"	f
func_convert_core_path_wine_to_w32	./zeromq/libtool	/^func_convert_core_path_wine_to_w32 ()$/;"	f
func_convert_file_check	./zeromq/config/ltmain.sh	/^func_convert_file_check ()$/;"	f
func_convert_file_check	./zeromq/libtool	/^func_convert_file_check ()$/;"	f
func_convert_file_cygwin_to_w32	./zeromq/config/ltmain.sh	/^func_convert_file_cygwin_to_w32 ()$/;"	f
func_convert_file_cygwin_to_w32	./zeromq/libtool	/^func_convert_file_cygwin_to_w32 ()$/;"	f
func_convert_file_msys_to_cygwin	./zeromq/config/ltmain.sh	/^func_convert_file_msys_to_cygwin ()$/;"	f
func_convert_file_msys_to_cygwin	./zeromq/libtool	/^func_convert_file_msys_to_cygwin ()$/;"	f
func_convert_file_msys_to_w32	./zeromq/config/ltmain.sh	/^func_convert_file_msys_to_w32 ()$/;"	f
func_convert_file_msys_to_w32	./zeromq/libtool	/^func_convert_file_msys_to_w32 ()$/;"	f
func_convert_file_nix_to_cygwin	./zeromq/config/ltmain.sh	/^func_convert_file_nix_to_cygwin ()$/;"	f
func_convert_file_nix_to_cygwin	./zeromq/libtool	/^func_convert_file_nix_to_cygwin ()$/;"	f
func_convert_file_nix_to_w32	./zeromq/config/ltmain.sh	/^func_convert_file_nix_to_w32 ()$/;"	f
func_convert_file_nix_to_w32	./zeromq/libtool	/^func_convert_file_nix_to_w32 ()$/;"	f
func_convert_file_noop	./zeromq/config/ltmain.sh	/^func_convert_file_noop ()$/;"	f
func_convert_file_noop	./zeromq/libtool	/^func_convert_file_noop ()$/;"	f
func_convert_path_check	./zeromq/config/ltmain.sh	/^func_convert_path_check ()$/;"	f
func_convert_path_check	./zeromq/libtool	/^func_convert_path_check ()$/;"	f
func_convert_path_cygwin_to_w32	./zeromq/config/ltmain.sh	/^func_convert_path_cygwin_to_w32 ()$/;"	f
func_convert_path_cygwin_to_w32	./zeromq/libtool	/^func_convert_path_cygwin_to_w32 ()$/;"	f
func_convert_path_front_back_pathsep	./zeromq/config/ltmain.sh	/^func_convert_path_front_back_pathsep ()$/;"	f
func_convert_path_front_back_pathsep	./zeromq/libtool	/^func_convert_path_front_back_pathsep ()$/;"	f
func_convert_path_msys_to_cygwin	./zeromq/config/ltmain.sh	/^func_convert_path_msys_to_cygwin ()$/;"	f
func_convert_path_msys_to_cygwin	./zeromq/libtool	/^func_convert_path_msys_to_cygwin ()$/;"	f
func_convert_path_msys_to_w32	./zeromq/config/ltmain.sh	/^func_convert_path_msys_to_w32 ()$/;"	f
func_convert_path_msys_to_w32	./zeromq/libtool	/^func_convert_path_msys_to_w32 ()$/;"	f
func_convert_path_nix_to_cygwin	./zeromq/config/ltmain.sh	/^func_convert_path_nix_to_cygwin ()$/;"	f
func_convert_path_nix_to_cygwin	./zeromq/libtool	/^func_convert_path_nix_to_cygwin ()$/;"	f
func_convert_path_nix_to_w32	./zeromq/config/ltmain.sh	/^func_convert_path_nix_to_w32 ()$/;"	f
func_convert_path_nix_to_w32	./zeromq/libtool	/^func_convert_path_nix_to_w32 ()$/;"	f
func_convert_path_noop	./zeromq/config/ltmain.sh	/^func_convert_path_noop ()$/;"	f
func_convert_path_noop	./zeromq/libtool	/^func_convert_path_noop ()$/;"	f
func_cygming_dll_for_implib	./zeromq/config/ltmain.sh	/^func_cygming_dll_for_implib ()$/;"	f
func_cygming_dll_for_implib	./zeromq/libtool	/^func_cygming_dll_for_implib ()$/;"	f
func_cygming_dll_for_implib_fallback	./zeromq/config/ltmain.sh	/^func_cygming_dll_for_implib_fallback ()$/;"	f
func_cygming_dll_for_implib_fallback	./zeromq/libtool	/^func_cygming_dll_for_implib_fallback ()$/;"	f
func_cygming_dll_for_implib_fallback_core	./zeromq/config/ltmain.sh	/^func_cygming_dll_for_implib_fallback_core ()$/;"	f
func_cygming_dll_for_implib_fallback_core	./zeromq/libtool	/^func_cygming_dll_for_implib_fallback_core ()$/;"	f
func_cygming_gnu_implib_p	./zeromq/config/ltmain.sh	/^func_cygming_gnu_implib_p ()$/;"	f
func_cygming_gnu_implib_p	./zeromq/libtool	/^func_cygming_gnu_implib_p ()$/;"	f
func_cygming_ms_implib_p	./zeromq/config/ltmain.sh	/^func_cygming_ms_implib_p ()$/;"	f
func_cygming_ms_implib_p	./zeromq/libtool	/^func_cygming_ms_implib_p ()$/;"	f
func_cygpath	./zeromq/config/ltmain.sh	/^func_cygpath ()$/;"	f
func_cygpath	./zeromq/libtool	/^func_cygpath ()$/;"	f
func_dirname	./zeromq/config.status	/^func_dirname ()\\$/;"	f
func_dirname	./zeromq/config/ltmain.sh	/^func_dirname ()$/;"	f
func_dirname	./zeromq/configure	/^func_dirname ()\\$/;"	f
func_dirname	./zeromq/libtool	/^func_dirname ()$/;"	f
func_dirname_and_basename	./zeromq/config.status	/^func_dirname_and_basename ()\\$/;"	f
func_dirname_and_basename	./zeromq/config/ltmain.sh	/^func_dirname_and_basename ()$/;"	f
func_dirname_and_basename	./zeromq/configure	/^func_dirname_and_basename ()\\$/;"	f
func_dirname_and_basename	./zeromq/libtool	/^func_dirname_and_basename ()$/;"	f
func_echo	./zeromq/config/ltmain.sh	/^func_echo ()$/;"	f
func_echo	./zeromq/libtool	/^func_echo ()$/;"	f
func_echo_all	./zeromq/config/ltmain.sh	/^func_echo_all ()$/;"	f
func_echo_all	./zeromq/configure	/^func_echo_all ()$/;"	f
func_echo_all	./zeromq/libtool	/^func_echo_all ()$/;"	f
func_emit_cwrapperexe_src	./zeromq/config/ltmain.sh	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_cwrapperexe_src	./zeromq/libtool	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_wrapper	./zeromq/config/ltmain.sh	/^func_emit_wrapper ()$/;"	f
func_emit_wrapper	./zeromq/libtool	/^func_emit_wrapper ()$/;"	f
func_enable_tag	./zeromq/config/ltmain.sh	/^func_enable_tag ()$/;"	f
func_enable_tag	./zeromq/libtool	/^func_enable_tag ()$/;"	f
func_error	./zeromq/config/ltmain.sh	/^func_error ()$/;"	f
func_error	./zeromq/libtool	/^func_error ()$/;"	f
func_exec_program	./zeromq/config/ltmain.sh	/^func_exec_program ()$/;"	f
func_exec_program	./zeromq/libtool	/^func_exec_program ()$/;"	f
func_exec_program	./zeromq/perf/inproc_lat	/^func_exec_program ()$/;"	f
func_exec_program	./zeromq/perf/inproc_thr	/^func_exec_program ()$/;"	f
func_exec_program	./zeromq/perf/local_lat	/^func_exec_program ()$/;"	f
func_exec_program	./zeromq/perf/local_thr	/^func_exec_program ()$/;"	f
func_exec_program	./zeromq/perf/remote_lat	/^func_exec_program ()$/;"	f
func_exec_program	./zeromq/perf/remote_thr	/^func_exec_program ()$/;"	f
func_exec_program	./zeromq/tests/test_connect_delay	/^func_exec_program ()$/;"	f
func_exec_program	./zeromq/tests/test_connect_resolve	/^func_exec_program ()$/;"	f
func_exec_program	./zeromq/tests/test_hwm	/^func_exec_program ()$/;"	f
func_exec_program	./zeromq/tests/test_invalid_rep	/^func_exec_program ()$/;"	f
func_exec_program	./zeromq/tests/test_last_endpoint	/^func_exec_program ()$/;"	f
func_exec_program	./zeromq/tests/test_monitor	/^func_exec_program ()$/;"	f
func_exec_program	./zeromq/tests/test_msg_flags	/^func_exec_program ()$/;"	f
func_exec_program	./zeromq/tests/test_pair_inproc	/^func_exec_program ()$/;"	f
func_exec_program	./zeromq/tests/test_pair_ipc	/^func_exec_program ()$/;"	f
func_exec_program	./zeromq/tests/test_pair_tcp	/^func_exec_program ()$/;"	f
func_exec_program	./zeromq/tests/test_reqrep_device	/^func_exec_program ()$/;"	f
func_exec_program	./zeromq/tests/test_reqrep_inproc	/^func_exec_program ()$/;"	f
func_exec_program	./zeromq/tests/test_reqrep_ipc	/^func_exec_program ()$/;"	f
func_exec_program	./zeromq/tests/test_reqrep_tcp	/^func_exec_program ()$/;"	f
func_exec_program	./zeromq/tests/test_router_mandatory	/^func_exec_program ()$/;"	f
func_exec_program	./zeromq/tests/test_shutdown_stress	/^func_exec_program ()$/;"	f
func_exec_program	./zeromq/tests/test_sub_forward	/^func_exec_program ()$/;"	f
func_exec_program	./zeromq/tests/test_term_endpoint	/^func_exec_program ()$/;"	f
func_exec_program	./zeromq/tests/test_timeo	/^func_exec_program ()$/;"	f
func_exec_program_core	./zeromq/config/ltmain.sh	/^func_exec_program_core ()$/;"	f
func_exec_program_core	./zeromq/libtool	/^func_exec_program_core ()$/;"	f
func_exec_program_core	./zeromq/perf/inproc_lat	/^func_exec_program_core ()$/;"	f
func_exec_program_core	./zeromq/perf/inproc_thr	/^func_exec_program_core ()$/;"	f
func_exec_program_core	./zeromq/perf/local_lat	/^func_exec_program_core ()$/;"	f
func_exec_program_core	./zeromq/perf/local_thr	/^func_exec_program_core ()$/;"	f
func_exec_program_core	./zeromq/perf/remote_lat	/^func_exec_program_core ()$/;"	f
func_exec_program_core	./zeromq/perf/remote_thr	/^func_exec_program_core ()$/;"	f
func_exec_program_core	./zeromq/tests/test_connect_delay	/^func_exec_program_core ()$/;"	f
func_exec_program_core	./zeromq/tests/test_connect_resolve	/^func_exec_program_core ()$/;"	f
func_exec_program_core	./zeromq/tests/test_hwm	/^func_exec_program_core ()$/;"	f
func_exec_program_core	./zeromq/tests/test_invalid_rep	/^func_exec_program_core ()$/;"	f
func_exec_program_core	./zeromq/tests/test_last_endpoint	/^func_exec_program_core ()$/;"	f
func_exec_program_core	./zeromq/tests/test_monitor	/^func_exec_program_core ()$/;"	f
func_exec_program_core	./zeromq/tests/test_msg_flags	/^func_exec_program_core ()$/;"	f
func_exec_program_core	./zeromq/tests/test_pair_inproc	/^func_exec_program_core ()$/;"	f
func_exec_program_core	./zeromq/tests/test_pair_ipc	/^func_exec_program_core ()$/;"	f
func_exec_program_core	./zeromq/tests/test_pair_tcp	/^func_exec_program_core ()$/;"	f
func_exec_program_core	./zeromq/tests/test_reqrep_device	/^func_exec_program_core ()$/;"	f
func_exec_program_core	./zeromq/tests/test_reqrep_inproc	/^func_exec_program_core ()$/;"	f
func_exec_program_core	./zeromq/tests/test_reqrep_ipc	/^func_exec_program_core ()$/;"	f
func_exec_program_core	./zeromq/tests/test_reqrep_tcp	/^func_exec_program_core ()$/;"	f
func_exec_program_core	./zeromq/tests/test_router_mandatory	/^func_exec_program_core ()$/;"	f
func_exec_program_core	./zeromq/tests/test_shutdown_stress	/^func_exec_program_core ()$/;"	f
func_exec_program_core	./zeromq/tests/test_sub_forward	/^func_exec_program_core ()$/;"	f
func_exec_program_core	./zeromq/tests/test_term_endpoint	/^func_exec_program_core ()$/;"	f
func_exec_program_core	./zeromq/tests/test_timeo	/^func_exec_program_core ()$/;"	f
func_execute_cmds	./zeromq/config/ltmain.sh	/^func_execute_cmds ()$/;"	f
func_execute_cmds	./zeromq/libtool	/^func_execute_cmds ()$/;"	f
func_extract_an_archive	./zeromq/config/ltmain.sh	/^func_extract_an_archive ()$/;"	f
func_extract_an_archive	./zeromq/libtool	/^func_extract_an_archive ()$/;"	f
func_extract_archives	./zeromq/config/ltmain.sh	/^func_extract_archives ()$/;"	f
func_extract_archives	./zeromq/libtool	/^func_extract_archives ()$/;"	f
func_fallback_echo	./zeromq/config.status	/^func_fallback_echo ()$/;"	f
func_fallback_echo	./zeromq/config/ltmain.sh	/^func_fallback_echo ()$/;"	f
func_fallback_echo	./zeromq/configure	/^  func_fallback_echo ()$/;"	f
func_fallback_echo	./zeromq/configure	/^func_fallback_echo ()$/;"	f
func_fallback_echo	./zeromq/libtool	/^func_fallback_echo ()$/;"	f
func_fallback_echo	./zeromq/perf/inproc_lat	/^func_fallback_echo ()$/;"	f
func_fallback_echo	./zeromq/perf/inproc_thr	/^func_fallback_echo ()$/;"	f
func_fallback_echo	./zeromq/perf/local_lat	/^func_fallback_echo ()$/;"	f
func_fallback_echo	./zeromq/perf/local_thr	/^func_fallback_echo ()$/;"	f
func_fallback_echo	./zeromq/perf/remote_lat	/^func_fallback_echo ()$/;"	f
func_fallback_echo	./zeromq/perf/remote_thr	/^func_fallback_echo ()$/;"	f
func_fallback_echo	./zeromq/tests/test_connect_delay	/^func_fallback_echo ()$/;"	f
func_fallback_echo	./zeromq/tests/test_connect_resolve	/^func_fallback_echo ()$/;"	f
func_fallback_echo	./zeromq/tests/test_hwm	/^func_fallback_echo ()$/;"	f
func_fallback_echo	./zeromq/tests/test_invalid_rep	/^func_fallback_echo ()$/;"	f
func_fallback_echo	./zeromq/tests/test_last_endpoint	/^func_fallback_echo ()$/;"	f
func_fallback_echo	./zeromq/tests/test_monitor	/^func_fallback_echo ()$/;"	f
func_fallback_echo	./zeromq/tests/test_msg_flags	/^func_fallback_echo ()$/;"	f
func_fallback_echo	./zeromq/tests/test_pair_inproc	/^func_fallback_echo ()$/;"	f
func_fallback_echo	./zeromq/tests/test_pair_ipc	/^func_fallback_echo ()$/;"	f
func_fallback_echo	./zeromq/tests/test_pair_tcp	/^func_fallback_echo ()$/;"	f
func_fallback_echo	./zeromq/tests/test_reqrep_device	/^func_fallback_echo ()$/;"	f
func_fallback_echo	./zeromq/tests/test_reqrep_inproc	/^func_fallback_echo ()$/;"	f
func_fallback_echo	./zeromq/tests/test_reqrep_ipc	/^func_fallback_echo ()$/;"	f
func_fallback_echo	./zeromq/tests/test_reqrep_tcp	/^func_fallback_echo ()$/;"	f
func_fallback_echo	./zeromq/tests/test_router_mandatory	/^func_fallback_echo ()$/;"	f
func_fallback_echo	./zeromq/tests/test_shutdown_stress	/^func_fallback_echo ()$/;"	f
func_fallback_echo	./zeromq/tests/test_sub_forward	/^func_fallback_echo ()$/;"	f
func_fallback_echo	./zeromq/tests/test_term_endpoint	/^func_fallback_echo ()$/;"	f
func_fallback_echo	./zeromq/tests/test_timeo	/^func_fallback_echo ()$/;"	f
func_fatal_configuration	./zeromq/config/ltmain.sh	/^func_fatal_configuration ()$/;"	f
func_fatal_configuration	./zeromq/libtool	/^func_fatal_configuration ()$/;"	f
func_fatal_error	./zeromq/config/ltmain.sh	/^func_fatal_error ()$/;"	f
func_fatal_error	./zeromq/libtool	/^func_fatal_error ()$/;"	f
func_fatal_help	./zeromq/config/ltmain.sh	/^func_fatal_help ()$/;"	f
func_fatal_help	./zeromq/libtool	/^func_fatal_help ()$/;"	f
func_features	./zeromq/config/ltmain.sh	/^func_features ()$/;"	f
func_features	./zeromq/libtool	/^func_features ()$/;"	f
func_file_conv	./zeromq/config/compile	/^func_file_conv ()$/;"	f
func_generate_dlsyms	./zeromq/config/ltmain.sh	/^func_generate_dlsyms ()$/;"	f
func_generate_dlsyms	./zeromq/libtool	/^func_generate_dlsyms ()$/;"	f
func_grep	./zeromq/config/ltmain.sh	/^func_grep ()$/;"	f
func_grep	./zeromq/libtool	/^func_grep ()$/;"	f
func_help	./zeromq/config/ltmain.sh	/^func_help ()$/;"	f
func_help	./zeromq/libtool	/^func_help ()$/;"	f
func_infer_tag	./zeromq/config/ltmain.sh	/^func_infer_tag ()$/;"	f
func_infer_tag	./zeromq/libtool	/^func_infer_tag ()$/;"	f
func_init_to_host_path_cmd	./zeromq/config/ltmain.sh	/^func_init_to_host_path_cmd ()$/;"	f
func_init_to_host_path_cmd	./zeromq/libtool	/^func_init_to_host_path_cmd ()$/;"	f
func_lalib_p	./zeromq/config/ltmain.sh	/^func_lalib_p ()$/;"	f
func_lalib_p	./zeromq/libtool	/^func_lalib_p ()$/;"	f
func_lalib_unsafe_p	./zeromq/config/ltmain.sh	/^func_lalib_unsafe_p ()$/;"	f
func_lalib_unsafe_p	./zeromq/libtool	/^func_lalib_unsafe_p ()$/;"	f
func_len	./zeromq/config.status	/^func_len ()\\$/;"	f
func_len	./zeromq/config/ltmain.sh	/^func_len ()$/;"	f
func_len	./zeromq/configure	/^func_len ()\\$/;"	f
func_len	./zeromq/libtool	/^func_len ()$/;"	f
func_lo2o	./zeromq/config.status	/^func_lo2o ()\\$/;"	f
func_lo2o	./zeromq/config/ltmain.sh	/^func_lo2o ()$/;"	f
func_lo2o	./zeromq/configure	/^func_lo2o ()\\$/;"	f
func_lo2o	./zeromq/libtool	/^func_lo2o ()$/;"	f
func_lt_dump_args	./zeromq/config/ltmain.sh	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	./zeromq/libtool	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	./zeromq/perf/inproc_lat	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	./zeromq/perf/inproc_thr	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	./zeromq/perf/local_lat	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	./zeromq/perf/local_thr	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	./zeromq/perf/remote_lat	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	./zeromq/perf/remote_thr	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	./zeromq/tests/test_connect_delay	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	./zeromq/tests/test_connect_resolve	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	./zeromq/tests/test_hwm	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	./zeromq/tests/test_invalid_rep	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	./zeromq/tests/test_last_endpoint	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	./zeromq/tests/test_monitor	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	./zeromq/tests/test_msg_flags	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	./zeromq/tests/test_pair_inproc	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	./zeromq/tests/test_pair_ipc	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	./zeromq/tests/test_pair_tcp	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	./zeromq/tests/test_reqrep_device	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	./zeromq/tests/test_reqrep_inproc	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	./zeromq/tests/test_reqrep_ipc	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	./zeromq/tests/test_reqrep_tcp	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	./zeromq/tests/test_router_mandatory	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	./zeromq/tests/test_shutdown_stress	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	./zeromq/tests/test_sub_forward	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	./zeromq/tests/test_term_endpoint	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	./zeromq/tests/test_timeo	/^func_lt_dump_args ()$/;"	f
func_ltwrapper_executable_p	./zeromq/config/ltmain.sh	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_executable_p	./zeromq/libtool	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_p	./zeromq/config/ltmain.sh	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_p	./zeromq/libtool	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_script_p	./zeromq/config/ltmain.sh	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_script_p	./zeromq/libtool	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_scriptname	./zeromq/config/ltmain.sh	/^func_ltwrapper_scriptname ()$/;"	f
func_ltwrapper_scriptname	./zeromq/libtool	/^func_ltwrapper_scriptname ()$/;"	f
func_missing_arg	./zeromq/config/ltmain.sh	/^func_missing_arg ()$/;"	f
func_missing_arg	./zeromq/libtool	/^func_missing_arg ()$/;"	f
func_mkdir_p	./zeromq/config/ltmain.sh	/^func_mkdir_p ()$/;"	f
func_mkdir_p	./zeromq/libtool	/^func_mkdir_p ()$/;"	f
func_mktempdir	./zeromq/config/ltmain.sh	/^func_mktempdir ()$/;"	f
func_mktempdir	./zeromq/libtool	/^func_mktempdir ()$/;"	f
func_mode_compile	./zeromq/config/ltmain.sh	/^func_mode_compile ()$/;"	f
func_mode_compile	./zeromq/libtool	/^func_mode_compile ()$/;"	f
func_mode_execute	./zeromq/config/ltmain.sh	/^func_mode_execute ()$/;"	f
func_mode_execute	./zeromq/libtool	/^func_mode_execute ()$/;"	f
func_mode_finish	./zeromq/config/ltmain.sh	/^func_mode_finish ()$/;"	f
func_mode_finish	./zeromq/libtool	/^func_mode_finish ()$/;"	f
func_mode_help	./zeromq/config/ltmain.sh	/^func_mode_help ()$/;"	f
func_mode_help	./zeromq/libtool	/^func_mode_help ()$/;"	f
func_mode_install	./zeromq/config/ltmain.sh	/^func_mode_install ()$/;"	f
func_mode_install	./zeromq/libtool	/^func_mode_install ()$/;"	f
func_mode_link	./zeromq/config/ltmain.sh	/^func_mode_link ()$/;"	f
func_mode_link	./zeromq/libtool	/^func_mode_link ()$/;"	f
func_mode_uninstall	./zeromq/config/ltmain.sh	/^func_mode_uninstall ()$/;"	f
func_mode_uninstall	./zeromq/libtool	/^func_mode_uninstall ()$/;"	f
func_normal_abspath	./zeromq/config/ltmain.sh	/^func_normal_abspath ()$/;"	f
func_normal_abspath	./zeromq/libtool	/^func_normal_abspath ()$/;"	f
func_parse_lt_options	./zeromq/config/ltmain.sh	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	./zeromq/libtool	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	./zeromq/perf/inproc_lat	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	./zeromq/perf/inproc_thr	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	./zeromq/perf/local_lat	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	./zeromq/perf/local_thr	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	./zeromq/perf/remote_lat	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	./zeromq/perf/remote_thr	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	./zeromq/tests/test_connect_delay	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	./zeromq/tests/test_connect_resolve	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	./zeromq/tests/test_hwm	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	./zeromq/tests/test_invalid_rep	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	./zeromq/tests/test_last_endpoint	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	./zeromq/tests/test_monitor	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	./zeromq/tests/test_msg_flags	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	./zeromq/tests/test_pair_inproc	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	./zeromq/tests/test_pair_ipc	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	./zeromq/tests/test_pair_tcp	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	./zeromq/tests/test_reqrep_device	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	./zeromq/tests/test_reqrep_inproc	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	./zeromq/tests/test_reqrep_ipc	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	./zeromq/tests/test_reqrep_tcp	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	./zeromq/tests/test_router_mandatory	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	./zeromq/tests/test_shutdown_stress	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	./zeromq/tests/test_sub_forward	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	./zeromq/tests/test_term_endpoint	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	./zeromq/tests/test_timeo	/^func_parse_lt_options ()$/;"	f
func_quote_for_eval	./zeromq/config/ltmain.sh	/^func_quote_for_eval ()$/;"	f
func_quote_for_eval	./zeromq/libtool	/^func_quote_for_eval ()$/;"	f
func_quote_for_expand	./zeromq/config/ltmain.sh	/^func_quote_for_expand ()$/;"	f
func_quote_for_expand	./zeromq/libtool	/^func_quote_for_expand ()$/;"	f
func_relative_path	./zeromq/config/ltmain.sh	/^func_relative_path ()$/;"	f
func_relative_path	./zeromq/libtool	/^func_relative_path ()$/;"	f
func_replace_sysroot	./zeromq/config/ltmain.sh	/^func_replace_sysroot ()$/;"	f
func_replace_sysroot	./zeromq/libtool	/^func_replace_sysroot ()$/;"	f
func_resolve_sysroot	./zeromq/config/ltmain.sh	/^func_resolve_sysroot ()$/;"	f
func_resolve_sysroot	./zeromq/libtool	/^func_resolve_sysroot ()$/;"	f
func_show_eval	./zeromq/config/ltmain.sh	/^func_show_eval ()$/;"	f
func_show_eval	./zeromq/libtool	/^func_show_eval ()$/;"	f
func_show_eval_locale	./zeromq/config/ltmain.sh	/^func_show_eval_locale ()$/;"	f
func_show_eval_locale	./zeromq/libtool	/^func_show_eval_locale ()$/;"	f
func_source	./zeromq/config/ltmain.sh	/^func_source ()$/;"	f
func_source	./zeromq/libtool	/^func_source ()$/;"	f
func_split_long_opt	./zeromq/config.status	/^func_split_long_opt ()\\$/;"	f
func_split_long_opt	./zeromq/config/ltmain.sh	/^func_split_long_opt ()$/;"	f
func_split_long_opt	./zeromq/configure	/^func_split_long_opt ()\\$/;"	f
func_split_long_opt	./zeromq/libtool	/^func_split_long_opt ()$/;"	f
func_split_short_opt	./zeromq/config.status	/^func_split_short_opt ()\\$/;"	f
func_split_short_opt	./zeromq/config/ltmain.sh	/^func_split_short_opt ()$/;"	f
func_split_short_opt	./zeromq/configure	/^func_split_short_opt ()\\$/;"	f
func_split_short_opt	./zeromq/libtool	/^func_split_short_opt ()$/;"	f
func_stripname	./zeromq/config.status	/^func_stripname ()\\$/;"	f
func_stripname	./zeromq/config/ltmain.sh	/^func_stripname ()$/;"	f
func_stripname	./zeromq/configure	/^func_stripname ()\\$/;"	f
func_stripname	./zeromq/libtool	/^func_stripname ()$/;"	f
func_stripname_cnf	./zeromq/configure	/^func_stripname_cnf ()$/;"	f
func_to_host_file	./zeromq/config/ltmain.sh	/^func_to_host_file ()$/;"	f
func_to_host_file	./zeromq/libtool	/^func_to_host_file ()$/;"	f
func_to_host_path	./zeromq/config/ltmain.sh	/^func_to_host_path ()$/;"	f
func_to_host_path	./zeromq/libtool	/^func_to_host_path ()$/;"	f
func_to_tool_file	./zeromq/config/ltmain.sh	/^func_to_tool_file ()$/;"	f
func_to_tool_file	./zeromq/libtool	/^func_to_tool_file ()$/;"	f
func_tr_sh	./zeromq/config/ltmain.sh	/^func_tr_sh ()$/;"	f
func_tr_sh	./zeromq/libtool	/^func_tr_sh ()$/;"	f
func_usage	./zeromq/config/ltmain.sh	/^func_usage ()$/;"	f
func_usage	./zeromq/libtool	/^func_usage ()$/;"	f
func_verbose	./zeromq/config/ltmain.sh	/^func_verbose ()$/;"	f
func_verbose	./zeromq/libtool	/^func_verbose ()$/;"	f
func_version	./zeromq/config/ltmain.sh	/^func_version ()$/;"	f
func_version	./zeromq/libtool	/^func_version ()$/;"	f
func_warning	./zeromq/config/ltmain.sh	/^func_warning ()$/;"	f
func_warning	./zeromq/libtool	/^func_warning ()$/;"	f
func_win32_import_lib_p	./zeromq/config/ltmain.sh	/^func_win32_import_lib_p ()$/;"	f
func_win32_import_lib_p	./zeromq/libtool	/^func_win32_import_lib_p ()$/;"	f
func_win32_libid	./zeromq/config/ltmain.sh	/^func_win32_libid ()$/;"	f
func_win32_libid	./zeromq/libtool	/^func_win32_libid ()$/;"	f
func_write_libtool_object	./zeromq/config/ltmain.sh	/^func_write_libtool_object ()$/;"	f
func_write_libtool_object	./zeromq/libtool	/^func_write_libtool_object ()$/;"	f
func_xform	./zeromq/config.status	/^func_xform ()\\$/;"	f
func_xform	./zeromq/config/ltmain.sh	/^func_xform ()$/;"	f
func_xform	./zeromq/configure	/^func_xform ()\\$/;"	f
func_xform	./zeromq/libtool	/^func_xform ()$/;"	f
gai_assert	./zeromq/src/err.hpp	134;"	d
generate_random	./zeromq/src/random.cpp	/^uint32_t zmq::generate_random ()$/;"	f	class:zmq
generic	./zeromq/src/tcp_address.hpp	/^            sockaddr generic;$/;"	m	union:zmq::tcp_address_t::__anon5
get	./zeromq/src/atomic_counter.hpp	/^        inline integer_t get ()$/;"	f	class:zmq::atomic_counter_t
get	./zeromq/src/ctx.cpp	/^int zmq::ctx_t::get (int option_)$/;"	f	class:zmq::ctx_t
getConsumerSocket	./include/yampl/generic/ServiceSocketBase.h	/^inline C * ServiceSocketBase<P, C>::getConsumerSocket(){$/;"	f	class:yampl::ServiceSocketBase
getErrno	./include/yampl/Exceptions.h	/^    int getErrno(){$/;"	f	class:yampl::ErrnoException
getMemory	./include/yampl/utils/SharedMemory.h	/^inline void * SharedMemory::getMemory(){$/;"	f	class:yampl::SharedMemory
getProducerSocket	./include/yampl/generic/ServiceSocketBase.h	/^inline P * ServiceSocketBase<P, C>::getProducerSocket(){$/;"	f	class:yampl::ServiceSocketBase
getReadFD	./include/yampl/utils/RawPipe.h	/^inline int RawPipe::getReadFD(){$/;"	f	class:yampl::RawPipe
getText	./zeromq/doc/zmq.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_bind.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_close.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_connect.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_ctx_destroy.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_ctx_get.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_ctx_new.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_ctx_set.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_epgm.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_errno.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_getsockopt.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_init.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_inproc.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_ipc.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_msg_close.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_msg_copy.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_msg_data.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_msg_get.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_msg_init.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_msg_init_data.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_msg_init_size.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_msg_more.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_msg_move.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_msg_recv.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_msg_send.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_msg_set.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_msg_size.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_pgm.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_poll.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_proxy.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_recv.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_recvmsg.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_send.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_sendmsg.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_setsockopt.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_socket.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_socket_monitor.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_strerror.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_tcp.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_term.html	/^  function getText(el) {$/;"	f
getText	./zeromq/doc/zmq_version.html	/^  function getText(el) {$/;"	f
getWriteFD	./include/yampl/utils/RawPipe.h	/^inline int RawPipe::getWriteFD(){$/;"	f	class:yampl::RawPipe
get_address	./zeromq/src/ipc_listener.cpp	/^int zmq::ipc_listener_t::get_address (std::string &addr_)$/;"	f	class:zmq::ipc_listener_t
get_address	./zeromq/src/tcp_listener.cpp	/^int zmq::tcp_listener_t::get_address (std::string &addr_)$/;"	f	class:zmq::tcp_listener_t
get_array_index	./zeromq/src/array.hpp	/^        inline int get_array_index ()$/;"	f	class:zmq::array_item_t
get_buffer	./zeromq/src/decoder.hpp	/^        inline void get_buffer (unsigned char **data_, size_t *size_)$/;"	f	class:zmq::decoder_base_t
get_ctx	./zeromq/src/object.cpp	/^zmq::ctx_t *zmq::object_t::get_ctx ()$/;"	f	class:zmq::object_t
get_data	./zeromq/src/encoder.hpp	/^        inline void get_data (unsigned char **data_, size_t *size_,$/;"	f	class:zmq::encoder_base_t
get_fd	./zeromq/src/mailbox.cpp	/^zmq::fd_t zmq::mailbox_t::get_fd ()$/;"	f	class:zmq::mailbox_t
get_fd	./zeromq/src/signaler.cpp	/^zmq::fd_t zmq::signaler_t::get_fd ()$/;"	f	class:zmq::signaler_t
get_identity	./zeromq/src/pipe.cpp	/^zmq::blob_t zmq::pipe_t::get_identity ()$/;"	f	class:zmq::pipe_t
get_load	./zeromq/src/io_thread.cpp	/^int zmq::io_thread_t::get_load ()$/;"	f	class:zmq::io_thread_t
get_load	./zeromq/src/poller_base.cpp	/^int zmq::poller_base_t::get_load ()$/;"	f	class:zmq::poller_base_t
get_mailbox	./zeromq/src/io_thread.cpp	/^zmq::mailbox_t *zmq::io_thread_t::get_mailbox ()$/;"	f	class:zmq::io_thread_t
get_mailbox	./zeromq/src/reaper.cpp	/^zmq::mailbox_t *zmq::reaper_t::get_mailbox ()$/;"	f	class:zmq::reaper_t
get_mailbox	./zeromq/src/socket_base.cpp	/^zmq::mailbox_t *zmq::socket_base_t::get_mailbox ()$/;"	f	class:zmq::socket_base_t
get_max_tsdu_size	./zeromq/src/pgm_socket.cpp	/^size_t zmq::pgm_socket_t::get_max_tsdu_size ()$/;"	f	class:zmq::pgm_socket_t
get_new_reconnect_ivl	./zeromq/src/ipc_connecter.cpp	/^int zmq::ipc_connecter_t::get_new_reconnect_ivl ()$/;"	f	class:zmq::ipc_connecter_t
get_new_reconnect_ivl	./zeromq/src/tcp_connecter.cpp	/^int zmq::tcp_connecter_t::get_new_reconnect_ivl ()$/;"	f	class:zmq::tcp_connecter_t
get_poller	./zeromq/src/io_thread.cpp	/^zmq::poller_t *zmq::io_thread_t::get_poller ()$/;"	f	class:zmq::io_thread_t
get_reaper	./zeromq/src/ctx.cpp	/^zmq::object_t *zmq::ctx_t::get_reaper ()$/;"	f	class:zmq::ctx_t
get_receiver_fds	./zeromq/src/pgm_socket.cpp	/^void zmq::pgm_socket_t::get_receiver_fds (fd_t *receive_fd_, $/;"	f	class:zmq::pgm_socket_t
get_rx_timeout	./zeromq/src/pgm_socket.cpp	/^long zmq::pgm_socket_t::get_rx_timeout ()$/;"	f	class:zmq::pgm_socket_t
get_sender_fds	./zeromq/src/pgm_socket.cpp	/^void zmq::pgm_socket_t::get_sender_fds (fd_t *send_fd_, fd_t *receive_fd_, $/;"	f	class:zmq::pgm_socket_t
get_socket	./zeromq/src/session_base.cpp	/^zmq::socket_base_t *zmq::session_base_t::get_socket ()$/;"	f	class:zmq::session_base_t
get_tid	./zeromq/src/object.cpp	/^uint32_t zmq::object_t::get_tid ()$/;"	f	class:zmq::object_t
get_tx_timeout	./zeromq/src/pgm_socket.cpp	/^long zmq::pgm_socket_t::get_tx_timeout ()$/;"	f	class:zmq::pgm_socket_t
get_uint16	./zeromq/src/wire.hpp	/^    inline uint16_t get_uint16 (unsigned char *buffer_)$/;"	f	namespace:zmq
get_uint32	./zeromq/src/wire.hpp	/^    inline uint32_t get_uint32 (unsigned char *buffer_)$/;"	f	namespace:zmq
get_uint64	./zeromq/src/wire.hpp	/^    inline uint64_t get_uint64 (unsigned char *buffer_)$/;"	f	namespace:zmq
get_uint8	./zeromq/src/wire.hpp	/^    inline uint8_t get_uint8 (unsigned char *buffer_)$/;"	f	namespace:zmq
getsockopt	./zeromq/include/zmq.hpp	/^        inline void getsockopt (int option_, void *optval_,$/;"	f	class:zmq::socket_t
getsockopt	./zeromq/src/options.cpp	/^int zmq::options_t::getsockopt (int option_, void *optval_, size_t *optvallen_)$/;"	f	class:zmq::options_t
getsockopt	./zeromq/src/socket_base.cpp	/^int zmq::socket_base_t::getsockopt (int option_, void *optval_,$/;"	f	class:zmq::socket_base_t
greeting	./zeromq/src/stream_engine.hpp	/^        unsigned char greeting [greeting_size];$/;"	m	class:zmq::stream_engine_t
greeting_bytes_read	./zeromq/src/stream_engine.hpp	/^        unsigned int greeting_bytes_read;$/;"	m	class:zmq::stream_engine_t
greeting_output_buffer	./zeromq/src/stream_engine.hpp	/^        unsigned char greeting_output_buffer [greeting_size];$/;"	m	class:zmq::stream_engine_t
greeting_size	./zeromq/src/stream_engine.hpp	/^        static const size_t greeting_size = 12;$/;"	m	class:zmq::stream_engine_t
handle	./zeromq/src/ipc_connecter.hpp	/^        handle_t handle;$/;"	m	class:zmq::ipc_connecter_t
handle	./zeromq/src/ipc_listener.hpp	/^        handle_t handle;$/;"	m	class:zmq::ipc_listener_t
handle	./zeromq/src/pgm_sender.hpp	/^        handle_t handle;$/;"	m	class:zmq::pgm_sender_t
handle	./zeromq/src/socket_base.hpp	/^        poller_t::handle_t handle;$/;"	m	class:zmq::socket_base_t
handle	./zeromq/src/stream_engine.hpp	/^        handle_t handle;$/;"	m	class:zmq::stream_engine_t
handle	./zeromq/src/tcp_connecter.hpp	/^        handle_t handle;$/;"	m	class:zmq::tcp_connecter_t
handle	./zeromq/src/tcp_listener.hpp	/^        handle_t handle;$/;"	m	class:zmq::tcp_listener_t
handle_t	./zeromq/src/devpoll.hpp	/^        typedef fd_t handle_t;$/;"	t	class:zmq::devpoll_t
handle_t	./zeromq/src/epoll.hpp	/^        typedef void* handle_t;$/;"	t	class:zmq::epoll_t
handle_t	./zeromq/src/io_object.hpp	/^        typedef poller_t::handle_t handle_t;$/;"	t	class:zmq::io_object_t
handle_t	./zeromq/src/kqueue.hpp	/^        typedef void* handle_t;$/;"	t	class:zmq::kqueue_t
handle_t	./zeromq/src/poll.hpp	/^        typedef fd_t handle_t;$/;"	t	class:zmq::poll_t
handle_t	./zeromq/src/select.hpp	/^        typedef fd_t handle_t;$/;"	t	class:zmq::select_t
handle_valid	./zeromq/src/ipc_connecter.hpp	/^        bool handle_valid;$/;"	m	class:zmq::ipc_connecter_t
handle_valid	./zeromq/src/tcp_connecter.hpp	/^        bool handle_valid;$/;"	m	class:zmq::tcp_connecter_t
handshake	./zeromq/src/stream_engine.cpp	/^bool zmq::stream_engine_t::handshake ()$/;"	f	class:zmq::stream_engine_t
handshaking	./zeromq/src/stream_engine.hpp	/^        bool handshaking;$/;"	m	class:zmq::stream_engine_t
hasPendingMessages	./include/yampl/shm/ConsumerSocket.h	/^    virtual bool hasPendingMessages(){$/;"	f	class:yampl::shm::ConsumerSocket
has_file	./zeromq/src/ipc_listener.hpp	/^        bool has_file;$/;"	m	class:zmq::ipc_listener_t
has_in	./zeromq/src/fq.cpp	/^bool zmq::fq_t::has_in ()$/;"	f	class:zmq::fq_t
has_in	./zeromq/src/socket_base.cpp	/^bool zmq::socket_base_t::has_in ()$/;"	f	class:zmq::socket_base_t
has_linger_timer	./zeromq/src/session_base.hpp	/^        bool has_linger_timer;$/;"	m	class:zmq::session_base_t
has_message	./zeromq/src/xsub.hpp	/^        bool has_message;$/;"	m	class:zmq::xsub_t
has_out	./zeromq/src/dist.cpp	/^bool zmq::dist_t::has_out ()$/;"	f	class:zmq::dist_t
has_out	./zeromq/src/lb.cpp	/^bool zmq::lb_t::has_out ()$/;"	f	class:zmq::lb_t
has_out	./zeromq/src/socket_base.cpp	/^bool zmq::socket_base_t::has_out ()$/;"	f	class:zmq::socket_base_t
has_rx_timer	./zeromq/src/pgm_receiver.hpp	/^        bool has_rx_timer;$/;"	m	class:zmq::pgm_receiver_t
has_rx_timer	./zeromq/src/pgm_sender.hpp	/^        bool has_rx_timer;$/;"	m	class:zmq::pgm_sender_t
has_tx_timer	./zeromq/src/pgm_sender.hpp	/^        bool has_tx_timer;$/;"	m	class:zmq::pgm_sender_t
hiccup	./zeromq/src/command.hpp	/^            hiccup,$/;"	e	enum:zmq::command_t::type_t
hiccup	./zeromq/src/command.hpp	/^            } hiccup;$/;"	m	union:zmq::command_t::__anon20	typeref:struct:zmq::command_t::__anon20::__anon28
hiccup	./zeromq/src/pipe.cpp	/^void zmq::pipe_t::hiccup ()$/;"	f	class:zmq::pipe_t
hiccuped	./zeromq/src/session_base.cpp	/^void zmq::session_base_t::hiccuped (pipe_t *)$/;"	f	class:zmq::session_base_t
hiccuped	./zeromq/src/socket_base.cpp	/^void zmq::socket_base_t::hiccuped (pipe_t *pipe_)$/;"	f	class:zmq::socket_base_t
hint	./include/yampl/ISocket.h	/^    void send(T (&buffer)[N], void *hint = 0){$/;"	m	class:yampl::ISocket
hint	./zeromq/src/msg.hpp	/^            void *hint;$/;"	m	struct:zmq::msg_t::content_t
host	./zeromq/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	./zeromq/builds/msvc/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	./zeromq/doc/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	./zeromq/foreign/openpgm/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	./zeromq/perf/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	./zeromq/src/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	./zeromq/tests/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host_alias	./zeromq/Makefile	/^host_alias = $/;"	m
host_alias	./zeromq/builds/msvc/Makefile	/^host_alias = $/;"	m
host_alias	./zeromq/doc/Makefile	/^host_alias = $/;"	m
host_alias	./zeromq/foreign/openpgm/Makefile	/^host_alias = $/;"	m
host_alias	./zeromq/perf/Makefile	/^host_alias = $/;"	m
host_alias	./zeromq/src/Makefile	/^host_alias = $/;"	m
host_alias	./zeromq/tests/Makefile	/^host_alias = $/;"	m
host_cpu	./zeromq/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	./zeromq/builds/msvc/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	./zeromq/doc/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	./zeromq/foreign/openpgm/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	./zeromq/perf/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	./zeromq/src/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	./zeromq/tests/Makefile	/^host_cpu = x86_64$/;"	m
host_os	./zeromq/Makefile	/^host_os = linux-gnu$/;"	m
host_os	./zeromq/builds/msvc/Makefile	/^host_os = linux-gnu$/;"	m
host_os	./zeromq/doc/Makefile	/^host_os = linux-gnu$/;"	m
host_os	./zeromq/foreign/openpgm/Makefile	/^host_os = linux-gnu$/;"	m
host_os	./zeromq/perf/Makefile	/^host_os = linux-gnu$/;"	m
host_os	./zeromq/src/Makefile	/^host_os = linux-gnu$/;"	m
host_os	./zeromq/tests/Makefile	/^host_os = linux-gnu$/;"	m
host_triplet	./zeromq/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	./zeromq/builds/msvc/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	./zeromq/doc/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	./zeromq/foreign/openpgm/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	./zeromq/perf/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	./zeromq/src/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	./zeromq/tests/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_vendor	./zeromq/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	./zeromq/builds/msvc/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	./zeromq/doc/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	./zeromq/foreign/openpgm/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	./zeromq/perf/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	./zeromq/src/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	./zeromq/tests/Makefile	/^host_vendor = unknown$/;"	m
htmldir	./zeromq/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	./zeromq/builds/msvc/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	./zeromq/doc/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	./zeromq/foreign/openpgm/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	./zeromq/perf/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	./zeromq/src/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	./zeromq/tests/Makefile	/^htmldir = ${docdir}$/;"	m
hwm	./zeromq/src/pipe.hpp	/^        int hwm;$/;"	m	class:zmq::pipe_t
i_decoder	./zeromq/src/i_decoder.hpp	/^    struct i_decoder$/;"	s	namespace:zmq
i_encoder	./zeromq/src/i_encoder.hpp	/^    struct i_encoder$/;"	s	namespace:zmq
i_engine	./zeromq/src/i_engine.hpp	/^    struct i_engine$/;"	s	namespace:zmq
i_msg_sink	./zeromq/src/i_msg_sink.hpp	/^    class i_msg_sink$/;"	c	namespace:zmq
i_msg_source	./zeromq/src/i_msg_source.hpp	/^    class i_msg_source$/;"	c	namespace:zmq
i_pipe_events	./zeromq/src/pipe.hpp	/^    struct i_pipe_events$/;"	s	namespace:zmq
i_poll_events	./zeromq/src/i_poll_events.hpp	/^    struct i_poll_events$/;"	s	namespace:zmq
id	./zeromq/src/poller_base.hpp	/^            int id;$/;"	m	struct:zmq::poller_base_t::timer_info_t
identify_peer	./zeromq/src/router.cpp	/^bool zmq::router_t::identify_peer (pipe_t *pipe_)$/;"	f	class:zmq::router_t
identity	./zeromq/src/msg.hpp	/^            identity = 64,$/;"	e	enum:zmq::msg_t::__anon13
identity	./zeromq/src/options.hpp	/^        unsigned char identity [256];$/;"	m	struct:zmq::options_t
identity	./zeromq/src/pipe.hpp	/^        blob_t identity;$/;"	m	class:zmq::pipe_t
identity	./zeromq/src/req.hpp	/^            identity,$/;"	e	enum:zmq::req_session_t::__anon11
identity_received	./zeromq/src/session_base.hpp	/^        bool identity_received;$/;"	m	class:zmq::session_base_t
identity_sent	./zeromq/src/router.hpp	/^        bool identity_sent;$/;"	m	class:zmq::router_t
identity_sent	./zeromq/src/session_base.hpp	/^        bool identity_sent;$/;"	m	class:zmq::session_base_t
identity_size	./zeromq/src/options.hpp	/^        unsigned char identity_size;$/;"	m	struct:zmq::options_t
in_active	./zeromq/src/pipe.hpp	/^        bool in_active;$/;"	m	class:zmq::pipe_t
in_batch_size	./zeromq/src/config.hpp	/^        in_batch_size = 8192,$/;"	e	enum:zmq::__anon7
in_event	./zeromq/src/io_object.cpp	/^void zmq::io_object_t::in_event ()$/;"	f	class:zmq::io_object_t
in_event	./zeromq/src/io_thread.cpp	/^void zmq::io_thread_t::in_event ()$/;"	f	class:zmq::io_thread_t
in_event	./zeromq/src/ipc_connecter.cpp	/^void zmq::ipc_connecter_t::in_event ()$/;"	f	class:zmq::ipc_connecter_t
in_event	./zeromq/src/ipc_listener.cpp	/^void zmq::ipc_listener_t::in_event ()$/;"	f	class:zmq::ipc_listener_t
in_event	./zeromq/src/pgm_receiver.cpp	/^void zmq::pgm_receiver_t::in_event ()$/;"	f	class:zmq::pgm_receiver_t
in_event	./zeromq/src/pgm_sender.cpp	/^void zmq::pgm_sender_t::in_event ()$/;"	f	class:zmq::pgm_sender_t
in_event	./zeromq/src/reaper.cpp	/^void zmq::reaper_t::in_event ()$/;"	f	class:zmq::reaper_t
in_event	./zeromq/src/socket_base.cpp	/^void zmq::socket_base_t::in_event ()$/;"	f	class:zmq::socket_base_t
in_event	./zeromq/src/stream_engine.cpp	/^void zmq::stream_engine_t::in_event ()$/;"	f	class:zmq::stream_engine_t
in_event	./zeromq/src/tcp_connecter.cpp	/^void zmq::tcp_connecter_t::in_event ()$/;"	f	class:zmq::tcp_connecter_t
in_event	./zeromq/src/tcp_listener.cpp	/^void zmq::tcp_listener_t::in_event ()$/;"	f	class:zmq::tcp_listener_t
in_progress	./zeromq/src/decoder.hpp	/^        msg_t in_progress;$/;"	m	class:zmq::decoder_t
in_progress	./zeromq/src/encoder.hpp	/^        msg_t in_progress;$/;"	m	class:zmq::encoder_t
in_progress	./zeromq/src/v1_decoder.hpp	/^        msg_t in_progress;$/;"	m	class:zmq::v1_decoder_t
in_progress	./zeromq/src/v1_encoder.hpp	/^        msg_t in_progress;$/;"	m	class:zmq::v1_encoder_t
inbound_poll_rate	./zeromq/src/config.hpp	/^        inbound_poll_rate = 100,$/;"	e	enum:zmq::__anon7
inc_seqnum	./zeromq/src/own.cpp	/^void zmq::own_t::inc_seqnum ()$/;"	f	class:zmq::own_t
include_HEADERS	./zeromq/src/Makefile	/^include_HEADERS = ..\/include\/zmq.h ..\/include\/zmq_utils.h$/;"	m
includedir	./zeromq/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	./zeromq/builds/msvc/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	./zeromq/doc/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	./zeromq/foreign/openpgm/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	./zeromq/perf/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	./zeromq/src/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	./zeromq/tests/Makefile	/^includedir = ${prefix}\/include$/;"	m
incomplete_in	./zeromq/src/session_base.hpp	/^        bool incomplete_in;$/;"	m	class:zmq::session_base_t
index	./zeromq/src/array.hpp	/^        inline size_type index (T *item_)$/;"	f	class:zmq::array_t
index	./zeromq/src/poll.hpp	/^            fd_t index;$/;"	m	struct:zmq::poll_t::fd_entry_t
info_arch	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_compiler	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_cray	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_cray	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_language_dialect_default	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_dialect_default =$/;"	v
info_language_dialect_default	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v
info_platform	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_simulate	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate_version	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v
info_version	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
infodir	./zeromq/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	./zeromq/builds/msvc/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	./zeromq/doc/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	./zeromq/foreign/openpgm/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	./zeromq/perf/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	./zeromq/src/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	./zeromq/tests/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
init	./zeromq/src/msg.cpp	/^int zmq::msg_t::init ()$/;"	f	class:zmq::msg_t
init	./zeromq/src/pgm_receiver.cpp	/^int zmq::pgm_receiver_t::init (bool udp_encapsulation_, const char *network_)$/;"	f	class:zmq::pgm_receiver_t
init	./zeromq/src/pgm_sender.cpp	/^int zmq::pgm_sender_t::init (bool udp_encapsulation_, const char *network_)$/;"	f	class:zmq::pgm_sender_t
init	./zeromq/src/pgm_socket.cpp	/^int zmq::pgm_socket_t::init (bool udp_encapsulation_, const char *network_)$/;"	f	class:zmq::pgm_socket_t
init_address	./zeromq/src/pgm_socket.cpp	/^int zmq::pgm_socket_t::init_address (const char *network_,$/;"	f	class:zmq::pgm_socket_t
init_data	./zeromq/src/msg.cpp	/^int zmq::msg_t::init_data (void *data_, size_t size_, msg_free_fn *ffn_,$/;"	f	class:zmq::msg_t
init_delimiter	./zeromq/src/msg.cpp	/^int zmq::msg_t::init_delimiter ()$/;"	f	class:zmq::msg_t
init_size	./zeromq/src/msg.cpp	/^int zmq::msg_t::init_size (size_t size_)$/;"	f	class:zmq::msg_t
inpipe	./zeromq/src/pipe.hpp	/^        upipe_t *inpipe;$/;"	m	class:zmq::pipe_t
inpos	./zeromq/src/stream_engine.hpp	/^        unsigned char *inpos;$/;"	m	class:zmq::stream_engine_t
inproc_lat_DEPENDENCIES	./zeromq/perf/Makefile	/^inproc_lat_DEPENDENCIES = $(top_builddir)\/src\/libzmq.la$/;"	m
inproc_lat_LDADD	./zeromq/perf/Makefile	/^inproc_lat_LDADD = $(top_builddir)\/src\/libzmq.la$/;"	m
inproc_lat_OBJECTS	./zeromq/perf/Makefile	/^inproc_lat_OBJECTS = $(am_inproc_lat_OBJECTS)$/;"	m
inproc_lat_SOURCES	./zeromq/perf/Makefile	/^inproc_lat_SOURCES = inproc_lat.cpp$/;"	m
inproc_thr_DEPENDENCIES	./zeromq/perf/Makefile	/^inproc_thr_DEPENDENCIES = $(top_builddir)\/src\/libzmq.la$/;"	m
inproc_thr_LDADD	./zeromq/perf/Makefile	/^inproc_thr_LDADD = $(top_builddir)\/src\/libzmq.la$/;"	m
inproc_thr_OBJECTS	./zeromq/perf/Makefile	/^inproc_thr_OBJECTS = $(am_inproc_thr_OBJECTS)$/;"	m
inproc_thr_SOURCES	./zeromq/perf/Makefile	/^inproc_thr_SOURCES = inproc_thr.cpp$/;"	m
input_error	./zeromq/src/stream_engine.hpp	/^        bool input_error;$/;"	m	class:zmq::stream_engine_t
insize	./zeromq/src/stream_engine.hpp	/^        size_t insize;$/;"	m	class:zmq::stream_engine_t
install_sh	./zeromq/Makefile	/^install_sh = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/install-sh$/;"	m
install_sh	./zeromq/builds/msvc/Makefile	/^install_sh = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/install-sh$/;"	m
install_sh	./zeromq/doc/Makefile	/^install_sh = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/install-sh$/;"	m
install_sh	./zeromq/foreign/openpgm/Makefile	/^install_sh = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/install-sh$/;"	m
install_sh	./zeromq/perf/Makefile	/^install_sh = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/install-sh$/;"	m
install_sh	./zeromq/src/Makefile	/^install_sh = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/install-sh$/;"	m
install_sh	./zeromq/tests/Makefile	/^install_sh = ${SHELL} \/home\/ntauthority\/Desktop\/CERN-HSF\/yampl\/zeromq\/config\/install-sh$/;"	m
install_sh_DATA	./zeromq/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	./zeromq/builds/msvc/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	./zeromq/doc/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	./zeromq/foreign/openpgm/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	./zeromq/perf/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	./zeromq/src/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	./zeromq/tests/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	./zeromq/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	./zeromq/builds/msvc/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	./zeromq/doc/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	./zeromq/foreign/openpgm/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	./zeromq/perf/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	./zeromq/src/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	./zeromq/tests/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	./zeromq/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	./zeromq/builds/msvc/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	./zeromq/doc/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	./zeromq/foreign/openpgm/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	./zeromq/perf/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	./zeromq/src/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	./zeromq/tests/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
int16_t	./zeromq/src/stdint.hpp	/^typedef __int16 int16_t;$/;"	t
int32_t	./zeromq/src/stdint.hpp	/^typedef __int32 int32_t;$/;"	t
int64_t	./zeromq/src/stdint.hpp	/^typedef __int64 int64_t;$/;"	t
int8_t	./zeromq/src/stdint.hpp	/^typedef __int8 int8_t;$/;"	t
int_type	./zeromq/src/blob.hpp	/^      typedef unsigned long  	int_type;$/;"	t	struct:std::char_traits
integer_t	./zeromq/src/atomic_counter.hpp	/^        typedef uint32_t integer_t;$/;"	t	class:zmq::atomic_counter_t
interval	./zeromq/include/zmq.h	/^        int interval;$/;"	m	struct:__anon40::__anon41::__anon44
io_object_t	./zeromq/src/io_object.cpp	/^zmq::io_object_t::io_object_t (io_thread_t *io_thread_) :$/;"	f	class:zmq::io_object_t
io_object_t	./zeromq/src/io_object.hpp	/^    class io_object_t : public i_poll_events$/;"	c	namespace:zmq
io_thread	./zeromq/src/session_base.hpp	/^        zmq::io_thread_t *io_thread;$/;"	m	class:zmq::session_base_t
io_thread_count	./zeromq/src/ctx.hpp	/^        int io_thread_count;$/;"	m	class:zmq::ctx_t
io_thread_t	./zeromq/src/io_thread.cpp	/^zmq::io_thread_t::io_thread_t (ctx_t *ctx_, uint32_t tid_) :$/;"	f	class:zmq::io_thread_t
io_thread_t	./zeromq/src/io_thread.hpp	/^    class io_thread_t : public object_t, public i_poll_events$/;"	c	namespace:zmq
io_threads	./zeromq/src/ctx.hpp	/^        io_threads_t io_threads;$/;"	m	class:zmq::ctx_t
io_threads_t	./zeromq/src/ctx.hpp	/^        typedef std::vector <zmq::io_thread_t*> io_threads_t;$/;"	t	class:zmq::ctx_t
iov_base	./zeromq/src/zmq.cpp	/^    void *iov_base;$/;"	m	struct:iovec	file:
iov_len	./zeromq/src/zmq.cpp	/^    size_t iov_len;$/;"	m	struct:iovec	file:
iovec	./zeromq/src/zmq.cpp	/^struct iovec {$/;"	s	file:
ipc_addr	./zeromq/src/address.hpp	/^            ipc_address_t *ipc_addr;$/;"	m	union:zmq::address_t::__anon3
ipc_address_t	./zeromq/src/ipc_address.cpp	/^zmq::ipc_address_t::ipc_address_t ()$/;"	f	class:zmq::ipc_address_t
ipc_address_t	./zeromq/src/ipc_address.cpp	/^zmq::ipc_address_t::ipc_address_t (const sockaddr *sa, socklen_t sa_len)$/;"	f	class:zmq::ipc_address_t
ipc_address_t	./zeromq/src/ipc_address.hpp	/^    class ipc_address_t$/;"	c	namespace:zmq
ipc_connecter_t	./zeromq/src/ipc_connecter.cpp	/^zmq::ipc_connecter_t::ipc_connecter_t (class io_thread_t *io_thread_,$/;"	f	class:zmq::ipc_connecter_t
ipc_connecter_t	./zeromq/src/ipc_connecter.hpp	/^    class ipc_connecter_t : public own_t, public io_object_t$/;"	c	namespace:zmq
ipc_listener_t	./zeromq/src/ipc_listener.cpp	/^zmq::ipc_listener_t::ipc_listener_t (io_thread_t *io_thread_,$/;"	f	class:zmq::ipc_listener_t
ipc_listener_t	./zeromq/src/ipc_listener.hpp	/^    class ipc_listener_t : public own_t, public io_object_t$/;"	c	namespace:zmq
ipv4	./zeromq/src/tcp_address.hpp	/^            sockaddr_in ipv4;$/;"	m	union:zmq::tcp_address_t::__anon5
ipv4only	./zeromq/src/options.hpp	/^        int ipv4only;$/;"	m	struct:zmq::options_t
ipv6	./zeromq/src/tcp_address.hpp	/^            sockaddr_in6 ipv6;$/;"	m	union:zmq::tcp_address_t::__anon5
is_delimiter	./zeromq/src/msg.cpp	/^bool zmq::msg_t::is_delimiter ()$/;"	f	class:zmq::msg_t
is_delimiter	./zeromq/src/pipe.cpp	/^bool zmq::pipe_t::is_delimiter (msg_t &msg_)$/;"	f	class:zmq::pipe_t
is_identity	./zeromq/src/msg.cpp	/^bool zmq::msg_t::is_identity () const$/;"	f	class:zmq::msg_t
is_redundant	./zeromq/src/mtrie.cpp	/^bool zmq::mtrie_t::is_redundant () const$/;"	f	class:zmq::mtrie_t
is_redundant	./zeromq/src/trie.cpp	/^bool zmq::trie_t::is_redundant () const$/;"	f	class:zmq::trie_t
is_retired_fd	./zeromq/src/select.cpp	/^bool zmq::select_t::is_retired_fd (const fd_entry_t &entry)$/;"	f	class:zmq::select_t
is_terminating	./zeromq/src/own.cpp	/^bool zmq::own_t::is_terminating ()$/;"	f	class:zmq::own_t
is_vsm	./zeromq/src/msg.cpp	/^bool zmq::msg_t::is_vsm ()$/;"	f	class:zmq::msg_t
item_t	./zeromq/src/array.hpp	/^        typedef array_item_t <ID> item_t;$/;"	t	class:zmq::array_t
items	./zeromq/src/array.hpp	/^        items_t items;$/;"	m	class:zmq::array_t
items_t	./zeromq/src/array.hpp	/^        typedef std::vector <T*> items_t;$/;"	t	class:zmq::array_t
join	./include/yampl/utils/Thread.h	/^inline void Thread::join(){$/;"	f	class:yampl::Thread
joined	./zeromq/src/pgm_receiver.hpp	/^            bool joined;$/;"	m	struct:zmq::pgm_receiver_t::peer_info_t
kevent_add	./zeromq/src/kqueue.cpp	/^void zmq::kqueue_t::kevent_add (fd_t fd_, short filter_, void *udata_)$/;"	f	class:zmq::kqueue_t
kevent_delete	./zeromq/src/kqueue.cpp	/^void zmq::kqueue_t::kevent_delete (fd_t fd_, short filter_)$/;"	f	class:zmq::kqueue_t
kevent_udata_t	./zeromq/src/kqueue.cpp	42;"	d	file:
kevent_udata_t	./zeromq/src/kqueue.cpp	44;"	d	file:
kqueue	./zeromq/configure	/^kqueue();$/;"	f
kqueue_fd	./zeromq/src/kqueue.hpp	/^        fd_t kqueue_fd;$/;"	m	class:zmq::kqueue_t
kqueue_t	./zeromq/src/kqueue.cpp	/^zmq::kqueue_t::kqueue_t () :$/;"	f	class:zmq::kqueue_t
kqueue_t	./zeromq/src/kqueue.hpp	/^    class kqueue_t : public poller_base_t$/;"	c	namespace:zmq
large_flag	./zeromq/src/v1_protocol.hpp	/^            large_flag = 2$/;"	e	enum:zmq::v1_protocol_t::__anon4
last_endpoint	./zeromq/src/options.hpp	/^        std::string last_endpoint;$/;"	m	struct:zmq::options_t
last_rx_status	./zeromq/src/pgm_socket.hpp	/^        int last_rx_status, last_tx_status;$/;"	m	class:zmq::pgm_socket_t
last_time	./zeromq/src/clock.hpp	/^        uint64_t last_time;$/;"	m	class:zmq::clock_t
last_tsc	./zeromq/src/clock.hpp	/^        uint64_t last_tsc;$/;"	m	class:zmq::clock_t
last_tsc	./zeromq/src/socket_base.hpp	/^        uint64_t last_tsc;$/;"	m	class:zmq::socket_base_t
last_tx_status	./zeromq/src/pgm_socket.hpp	/^        int last_rx_status, last_tx_status;$/;"	m	class:zmq::pgm_socket_t
launch_child	./zeromq/src/own.cpp	/^void zmq::own_t::launch_child (own_t *object_)$/;"	f	class:zmq::own_t
lb	./zeromq/src/dealer.hpp	/^        lb_t lb;$/;"	m	class:zmq::dealer_t
lb	./zeromq/src/push.hpp	/^        lb_t lb;$/;"	m	class:zmq::push_t
lb_t	./zeromq/src/lb.cpp	/^zmq::lb_t::lb_t () :$/;"	f	class:zmq::lb_t
lb_t	./zeromq/src/lb.hpp	/^    class lb_t$/;"	c	namespace:zmq
length	./zeromq/src/blob.hpp	/^      length(const char_type* __s)$/;"	f	struct:std::char_traits
lib_LTLIBRARIES	./zeromq/src/Makefile	/^lib_LTLIBRARIES = libzmq.la$/;"	m
libdir	./zeromq/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	./zeromq/builds/msvc/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	./zeromq/doc/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	./zeromq/foreign/openpgm/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	./zeromq/perf/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	./zeromq/src/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	./zeromq/tests/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libexecdir	./zeromq/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	./zeromq/builds/msvc/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	./zeromq/doc/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	./zeromq/foreign/openpgm/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	./zeromq/perf/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	./zeromq/src/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	./zeromq/tests/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libzmq_have_asciidoc	./zeromq/Makefile	/^libzmq_have_asciidoc = no$/;"	m
libzmq_have_asciidoc	./zeromq/builds/msvc/Makefile	/^libzmq_have_asciidoc = no$/;"	m
libzmq_have_asciidoc	./zeromq/doc/Makefile	/^libzmq_have_asciidoc = no$/;"	m
libzmq_have_asciidoc	./zeromq/foreign/openpgm/Makefile	/^libzmq_have_asciidoc = no$/;"	m
libzmq_have_asciidoc	./zeromq/perf/Makefile	/^libzmq_have_asciidoc = no$/;"	m
libzmq_have_asciidoc	./zeromq/src/Makefile	/^libzmq_have_asciidoc = no$/;"	m
libzmq_have_asciidoc	./zeromq/tests/Makefile	/^libzmq_have_asciidoc = no$/;"	m
libzmq_have_xmlto	./zeromq/Makefile	/^libzmq_have_xmlto = no$/;"	m
libzmq_have_xmlto	./zeromq/builds/msvc/Makefile	/^libzmq_have_xmlto = no$/;"	m
libzmq_have_xmlto	./zeromq/doc/Makefile	/^libzmq_have_xmlto = no$/;"	m
libzmq_have_xmlto	./zeromq/foreign/openpgm/Makefile	/^libzmq_have_xmlto = no$/;"	m
libzmq_have_xmlto	./zeromq/perf/Makefile	/^libzmq_have_xmlto = no$/;"	m
libzmq_have_xmlto	./zeromq/src/Makefile	/^libzmq_have_xmlto = no$/;"	m
libzmq_have_xmlto	./zeromq/tests/Makefile	/^libzmq_have_xmlto = no$/;"	m
libzmq_la_CXXFLAGS	./zeromq/src/Makefile	/^libzmq_la_CXXFLAGS = -fvisibility=hidden $/;"	m
libzmq_la_LDFLAGS	./zeromq/src/Makefile	/^libzmq_la_LDFLAGS = -version-info 3:0:0 $/;"	m
libzmq_la_LINK	./zeromq/src/Makefile	/^libzmq_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
libzmq_la_OBJECTS	./zeromq/src/Makefile	/^libzmq_la_OBJECTS = $(am_libzmq_la_OBJECTS)$/;"	m
libzmq_la_SOURCES	./zeromq/src/Makefile	/^libzmq_la_SOURCES = \\$/;"	m
likely	./zeromq/src/likely.hpp	25;"	d
likely	./zeromq/src/likely.hpp	28;"	d
linger	./zeromq/src/command.hpp	/^                int linger;$/;"	m	struct:zmq::command_t::__anon20::__anon32
linger	./zeromq/src/options.hpp	/^        int linger;$/;"	m	struct:zmq::options_t
linger_timer_id	./zeromq/src/session_base.hpp	/^        enum {linger_timer_id = 0x20};$/;"	e	enum:zmq::session_base_t::__anon2
listenerThreadFun	./include/yampl/generic/ServerSocketBase.h	/^void ServerSocketBase<T>::listenerThreadFun(const Channel &channel, Semantics semantics, void (*deallocator)(void *, void *)){$/;"	f	class:yampl::ServerSocketBase
listening	./zeromq/include/zmq.h	/^    } listening;$/;"	m	union:__anon40::__anon41	typeref:struct:__anon40::__anon41::__anon45
live_nodes	./zeromq/src/mtrie.hpp	/^        unsigned short live_nodes;$/;"	m	class:zmq::mtrie_t
live_nodes	./zeromq/src/trie.hpp	/^        unsigned short live_nodes;$/;"	m	class:zmq::trie_t
lmsg	./zeromq/src/msg.hpp	/^            } lmsg;$/;"	m	union:zmq::msg_t::__anon15	typeref:struct:zmq::msg_t::__anon15::__anon18
load	./zeromq/src/poller_base.hpp	/^        atomic_counter_t load;$/;"	m	class:zmq::poller_base_t
local_lat_DEPENDENCIES	./zeromq/perf/Makefile	/^local_lat_DEPENDENCIES = $(top_builddir)\/src\/libzmq.la$/;"	m
local_lat_LDADD	./zeromq/perf/Makefile	/^local_lat_LDADD = $(top_builddir)\/src\/libzmq.la$/;"	m
local_lat_OBJECTS	./zeromq/perf/Makefile	/^local_lat_OBJECTS = $(am_local_lat_OBJECTS)$/;"	m
local_lat_SOURCES	./zeromq/perf/Makefile	/^local_lat_SOURCES = local_lat.cpp$/;"	m
local_thr_DEPENDENCIES	./zeromq/perf/Makefile	/^local_thr_DEPENDENCIES = $(top_builddir)\/src\/libzmq.la$/;"	m
local_thr_LDADD	./zeromq/perf/Makefile	/^local_thr_LDADD = $(top_builddir)\/src\/libzmq.la$/;"	m
local_thr_OBJECTS	./zeromq/perf/Makefile	/^local_thr_OBJECTS = $(am_local_thr_OBJECTS)$/;"	m
local_thr_SOURCES	./zeromq/perf/Makefile	/^local_thr_SOURCES = local_thr.cpp$/;"	m
localedir	./zeromq/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	./zeromq/builds/msvc/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	./zeromq/doc/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	./zeromq/foreign/openpgm/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	./zeromq/perf/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	./zeromq/src/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	./zeromq/tests/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localstatedir	./zeromq/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	./zeromq/builds/msvc/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	./zeromq/doc/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	./zeromq/foreign/openpgm/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	./zeromq/perf/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	./zeromq/src/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	./zeromq/tests/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
lock	./include/yampl/utils/SpinLock.h	/^inline void SpinLock::lock(){$/;"	f	class:yampl::SpinLock
lock	./zeromq/src/mutex.hpp	/^        inline void lock ()$/;"	f	class:zmq::mutex_t
loop	./zeromq/src/devpoll.cpp	/^void zmq::devpoll_t::loop ()$/;"	f	class:zmq::devpoll_t
loop	./zeromq/src/epoll.cpp	/^void zmq::epoll_t::loop ()$/;"	f	class:zmq::epoll_t
loop	./zeromq/src/kqueue.cpp	/^void zmq::kqueue_t::loop ()$/;"	f	class:zmq::kqueue_t
loop	./zeromq/src/poll.cpp	/^void zmq::poll_t::loop ()$/;"	f	class:zmq::poll_t
loop	./zeromq/src/select.cpp	/^void zmq::select_t::loop ()$/;"	f	class:zmq::select_t
lt	./zeromq/src/blob.hpp	/^      lt(const char_type& __c1, const char_type& __c2)$/;"	f	struct:std::char_traits
lwm	./zeromq/src/pipe.hpp	/^        int lwm;$/;"	m	class:zmq::pipe_t
m_accept	./include/yampl/generic/ServerSocketBase.h	/^    std::tr1::function<void(T*)> m_accept; \/\/ needed because we can't call a virtual function in the constructor$/;"	m	class:yampl::ServerSocketBase
m_addr	./include/yampl/utils/Futex.h	/^    int *m_addr;$/;"	m	class:yampl::Futex
m_announce	./include/yampl/generic/ClientSocket.h	/^    RawPipe m_announce;$/;"	m	class:yampl::ClientSocket
m_buffer	./include/yampl/utils/RingBuffer.h	/^    char *m_buffer;$/;"	m	class:yampl::RingBuffer
m_buffer	./include/yampl/utils/SharedMemory.h	/^    void *m_buffer;$/;"	m	class:yampl::SharedMemory
m_channel	./include/yampl/zeromq/SocketBase.h	/^    Channel m_channel;$/;"	m	class:yampl::zeromq::SocketBase
m_consumerSocket	./include/yampl/generic/ServiceSocketBase.h	/^    C *m_consumerSocket;$/;"	m	class:yampl::ServiceSocketBase
m_context	./include/yampl/zeromq/SocketFactory.h	/^    zmq::context_t *m_context;$/;"	m	class:yampl::zeromq::SocketFactory
m_ctlPipe	./include/yampl/pipe/PipeSocketBase.h	/^    std::tr1::shared_ptr<RawPipe> m_ctlPipe;$/;"	m	class:yampl::pipe::PipeSocketBase
m_ctlThread	./include/yampl/pipe/PipeSocketBase.h	/^    std::tr1::shared_ptr<Thread> m_ctlThread;$/;"	m	class:yampl::pipe::PipeSocketBase
m_currentPeer	./include/yampl/generic/ServerSocketBase.h	/^    std::tr1::shared_ptr<T> m_currentPeer;$/;"	m	class:yampl::ServerSocketBase
m_deallocator	./include/yampl/shm/PipeSocketBase.h	/^    void (*m_deallocator)(void *, void *);$/;"	m	class:yampl::shm::PipeSocketBase
m_deallocator	./include/yampl/zeromq/SocketBase.h	/^    void (*m_deallocator)(void *, void *);$/;"	m	class:yampl::zeromq::SocketBase
m_doUnlink	./include/yampl/utils/RawPipe.h	/^    bool m_doUnlink;$/;"	m	class:yampl::RawPipe
m_emptyCount	./include/yampl/utils/RingBuffer.h	/^    std::tr1::shared_ptr<Semaphore> m_emptyCount;$/;"	m	class:yampl::RingBuffer
m_errno	./include/yampl/Exceptions.h	/^    int m_errno;$/;"	m	class:yampl::ErrnoException
m_errnoMsg	./include/yampl/Exceptions.h	/^    mutable char m_errnoMsg[s_maxMsgSize];$/;"	m	class:yampl::ErrnoException
m_fd	./include/yampl/utils/SharedMemory.h	/^    int m_fd;$/;"	m	class:yampl::SharedMemory
m_fillCount	./include/yampl/utils/RingBuffer.h	/^    std::tr1::shared_ptr<Semaphore> m_fillCount;$/;"	m	class:yampl::RingBuffer
m_flag	./include/yampl/utils/SpinLock.h	/^    volatile bool m_flag;$/;"	m	class:yampl::SpinLock
m_fun	./include/yampl/utils/Thread.h	/^    std::tr1::function<void()> *m_fun;$/;"	m	class:yampl::Thread
m_futex	./include/yampl/utils/Semaphore.h	/^    Futex m_futex;$/;"	m	class:yampl::Semaphore
m_head	./include/yampl/utils/RingBuffer.h	/^    size_t m_head;$/;"	m	class:yampl::RingBuffer
m_id	./include/yampl/utils/UUID.h	/^    std::string m_id;$/;"	m	class:yampl::UUID
m_idToPeer	./include/yampl/generic/ServerSocketBase.h	/^    IdToPeerMap m_idToPeer;$/;"	m	class:yampl::ServerSocketBase
m_initialized	./include/yampl/utils/RingBuffer.h	/^    bool m_initialized;$/;"	m	class:yampl::RingBuffer
m_isConnected	./include/yampl/zeromq/ClientSocket.h	/^    bool m_isConnected;$/;"	m	class:yampl::zeromq::ClientSocket
m_isDestroyable	./include/yampl/utils/Thread.h	/^    bool m_isDestroyable;$/;"	m	class:yampl::Thread
m_isRecvPending	./include/yampl/pipe/PipeSocketBase.h	/^    bool m_isRecvPending;$/;"	m	class:yampl::pipe::PipeSocketBase
m_isRecvPending	./include/yampl/shm/PipeSocketBase.h	/^    bool m_isRecvPending;$/;"	m	class:yampl::shm::PipeSocketBase
m_isRecvPending	./include/yampl/shm/ServerSocket.h	/^    bool m_isRecvPending;$/;"	m	class:yampl::shm::ServerSocket
m_isRecvPending	./include/yampl/zeromq/SocketBase.h	/^    bool m_isRecvPending;$/;"	m	class:yampl::zeromq::SocketBase
m_lastAddress	./include/yampl/zeromq/ServerSocket.h	/^    zmq::message_t *m_lastAddress;$/;"	m	class:yampl::zeromq::ServerSocket
m_listener	./include/yampl/generic/ServerSocketBase.h	/^    std::tr1::shared_ptr<Thread> m_listener;$/;"	m	class:yampl::ServerSocketBase
m_lock	./include/yampl/generic/ServerSocketBase.h	/^    SpinLock m_lock;$/;"	m	class:yampl::ServerSocketBase
m_lock	./include/yampl/pipe/PipeSocketBase.h	/^    SpinLock m_lock;$/;"	m	class:yampl::pipe::PipeSocketBase
m_memory	./include/yampl/shm/ClientSocket.h	/^    std::tr1::shared_ptr<SharedMemory> m_memory;$/;"	m	class:yampl::shm::ClientSocket
m_memory	./include/yampl/shm/PipeSocketBase.h	/^    std::tr1::shared_ptr<SharedMemory> m_memory;$/;"	m	class:yampl::shm::PipeSocketBase
m_memory	./include/yampl/shm/ServerSocket.h	/^    std::tr1::shared_ptr<SharedMemory> m_memory;$/;"	m	class:yampl::shm::ServerSocket
m_message	./include/yampl/zeromq/SocketBase.h	/^    zmq::message_t *m_message;$/;"	m	class:yampl::zeromq::SocketBase
m_mode	./include/yampl/pipe/PipeSocketBase.h	/^    Mode m_mode;$/;"	m	class:yampl::pipe::PipeSocketBase
m_msg	./include/yampl/Exceptions.h	/^    const char * m_msg;$/;"	m	class:yampl::Exception
m_name	./include/yampl/shm/PipeSocketBase.h	/^    std::string m_name;$/;"	m	class:yampl::shm::PipeSocketBase
m_name	./include/yampl/utils/RawPipe.h	/^    std::string m_name;$/;"	m	class:yampl::RawPipe
m_name	./include/yampl/utils/SharedMemory.h	/^    std::string m_name;$/;"	m	class:yampl::SharedMemory
m_nextPeerToVisit	./include/yampl/shm/ServerSocket.h	/^    PeerList::iterator m_nextPeerToVisit;$/;"	m	class:yampl::shm::ServerSocket
m_peerPoll	./include/yampl/pipe/ServerSocket.h	/^    Poller m_peerPoll;$/;"	m	class:yampl::pipe::ServerSocket
m_peerToId	./include/yampl/generic/ServerSocketBase.h	/^    PeerToIdMap m_peerToId;$/;"	m	class:yampl::ServerSocketBase
m_peers	./include/yampl/generic/ServerSocketBase.h	/^    PeerList m_peers;$/;"	m	class:yampl::ServerSocketBase
m_pendingBuffers	./include/yampl/pipe/PipeSocketBase.h	/^    std::deque<std::pair<void *, void *> > m_pendingBuffers;$/;"	m	class:yampl::pipe::PipeSocketBase
m_pipeFactory	./include/yampl/SocketFactory.h	/^    ISocketFactory *m_pipeFactory;$/;"	m	class:yampl::SocketFactory
m_poll	./include/yampl/utils/Poller.h	/^    int m_poll;$/;"	m	class:yampl::Poller
m_private	./include/yampl/generic/ClientSocket.h	/^    ISocket *m_private;$/;"	m	class:yampl::ClientSocket
m_producerSocket	./include/yampl/generic/ServiceSocketBase.h	/^    P *m_producerSocket;$/;"	m	class:yampl::ServiceSocketBase
m_queue	./include/yampl/shm/PipeSocketBase.h	/^    std::tr1::shared_ptr<RingBuffer> m_queue;$/;"	m	class:yampl::shm::PipeSocketBase
m_rawToPeer	./include/yampl/generic/ServerSocketBase.h	/^    RawToPeerMap m_rawToPeer;$/;"	m	class:yampl::ServerSocketBase
m_receiveBuffer	./include/yampl/pipe/PipeSocketBase.h	/^    void *m_receiveBuffer;$/;"	m	class:yampl::pipe::PipeSocketBase
m_receiveBuffer	./include/yampl/shm/PipeSocketBase.h	/^    void *m_receiveBuffer;$/;"	m	class:yampl::shm::PipeSocketBase
m_receiveSize	./include/yampl/pipe/PipeSocketBase.h	/^    size_t m_receiveSize;$/;"	m	class:yampl::pipe::PipeSocketBase
m_receiveSize	./include/yampl/shm/PipeSocketBase.h	/^    size_t m_receiveSize;$/;"	m	class:yampl::shm::PipeSocketBase
m_repChannel	./include/yampl/generic/ServiceSocketBase.h	/^    Channel m_repChannel;$/;"	m	class:yampl::ServiceSocketBase
m_reqChannel	./include/yampl/generic/ServiceSocketBase.h	/^    Channel m_reqChannel;$/;"	m	class:yampl::ServiceSocketBase
m_sem	./include/yampl/utils/Semaphore.h	/^    volatile int *m_sem;$/;"	m	class:yampl::Semaphore
m_semantics	./include/yampl/pipe/PipeSocketBase.h	/^    Semantics m_semantics;$/;"	m	class:yampl::pipe::PipeSocketBase
m_semantics	./include/yampl/shm/PipeSocketBase.h	/^    Semantics m_semantics;$/;"	m	class:yampl::shm::PipeSocketBase
m_semantics	./include/yampl/zeromq/SocketBase.h	/^    Semantics m_semantics;$/;"	m	class:yampl::zeromq::SocketBase
m_semaphore	./include/yampl/shm/ClientSocket.h	/^    std::tr1::shared_ptr<Semaphore> m_semaphore;$/;"	m	class:yampl::shm::ClientSocket
m_semaphore	./include/yampl/shm/ServerSocket.h	/^    std::tr1::shared_ptr<Semaphore> m_semaphore;$/;"	m	class:yampl::shm::ServerSocket
m_shmFactory	./include/yampl/SocketFactory.h	/^    ISocketFactory *m_shmFactory;$/;"	m	class:yampl::SocketFactory
m_size	./include/yampl/shm/PipeSocketBase.h	/^    size_t m_size;$/;"	m	class:yampl::shm::PipeSocketBase
m_size	./include/yampl/utils/RingBuffer.h	/^    size_t m_size;$/;"	m	class:yampl::RingBuffer
m_size	./include/yampl/utils/SharedMemory.h	/^    size_t m_size;$/;"	m	class:yampl::SharedMemory
m_socket	./include/yampl/zeromq/SocketBase.h	/^    zmq::socket_t *m_socket;$/;"	m	class:yampl::zeromq::SocketBase
m_tail	./include/yampl/utils/RingBuffer.h	/^    size_t m_tail;$/;"	m	class:yampl::RingBuffer
m_thread	./include/yampl/utils/Thread.h	/^    pthread_t m_thread;$/;"	m	class:yampl::Thread
m_transferPipe	./include/yampl/pipe/PipeSocketBase.h	/^    std::tr1::shared_ptr<RawPipe> m_transferPipe;$/;"	m	class:yampl::pipe::PipeSocketBase
m_uuid	./include/yampl/generic/ClientSocket.h	/^    UUID m_uuid;$/;"	m	class:yampl::ClientSocket
m_zmqFactory	./include/yampl/SocketFactory.h	/^    ISocketFactory *m_zmqFactory;$/;"	m	class:yampl::SocketFactory
mailbox	./zeromq/src/io_thread.hpp	/^        mailbox_t mailbox;$/;"	m	class:zmq::io_thread_t
mailbox	./zeromq/src/reaper.hpp	/^        mailbox_t mailbox;$/;"	m	class:zmq::reaper_t
mailbox	./zeromq/src/socket_base.hpp	/^        mailbox_t mailbox;$/;"	m	class:zmq::socket_base_t
mailbox_handle	./zeromq/src/io_thread.hpp	/^        poller_t::handle_t mailbox_handle;$/;"	m	class:zmq::io_thread_t
mailbox_handle	./zeromq/src/reaper.hpp	/^        poller_t::handle_t mailbox_handle;$/;"	m	class:zmq::reaper_t
mailbox_t	./zeromq/src/mailbox.cpp	/^zmq::mailbox_t::mailbox_t ()$/;"	f	class:zmq::mailbox_t
mailbox_t	./zeromq/src/mailbox.hpp	/^    class mailbox_t$/;"	c	namespace:zmq
main	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	/^int main(argc, argv) int argc; char *argv[];$/;"	f
main	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	./cmake-build-debug/CMakeFiles/feature_tests.c	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f
main	./cmake-build-debug/CMakeFiles/feature_tests.cxx	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f
main	./examples/benchmarks/benchmark.cpp	/^int main(int argc, char *argv[]){$/;"	f
main	./examples/client_server/client.cpp	/^int main(int argc, char *argv[]){$/;"	f
main	./examples/client_server/server.cpp	/^int main(int argc, char *argv[]){$/;"	f
main	./examples/multithreaded/multithread.cpp	/^int main(int argc, char *argv[]){$/;"	f
main	./examples/producer_consumer/consumer.cpp	/^int main(int argc, char *argv[]){$/;"	f
main	./examples/producer_consumer/producer.cpp	/^int main(int argc, char *argv[]){$/;"	f
main	./tests/calls.cpp	/^int main()$/;"	f
main	./tests/dest.cpp	/^int main(int argc, char *argv[])$/;"	f
main	./tests/size.cpp	/^int main(int argc, char *argv[])$/;"	f
main	./zeromq/config/config.guess	/^		main()$/;"	f
main	./zeromq/config/config.guess	/^	main ()$/;"	f
main	./zeromq/config/config.guess	/^main ()$/;"	f
main	./zeromq/perf/inproc_lat.cpp	/^int main (int argc, char *argv [])$/;"	f
main	./zeromq/perf/inproc_thr.cpp	/^int main (int argc, char *argv [])$/;"	f
main	./zeromq/perf/local_lat.cpp	/^int main (int argc, char *argv [])$/;"	f
main	./zeromq/perf/local_thr.cpp	/^int main (int argc, char *argv [])$/;"	f
main	./zeromq/perf/remote_lat.cpp	/^int main (int argc, char *argv [])$/;"	f
main	./zeromq/perf/remote_thr.cpp	/^int main (int argc, char *argv [])$/;"	f
main	./zeromq/tests/test_connect_delay.cpp	/^int main (void)$/;"	f
main	./zeromq/tests/test_connect_resolve.cpp	/^int main (void)$/;"	f
main	./zeromq/tests/test_hwm.cpp	/^int main (void)$/;"	f
main	./zeromq/tests/test_invalid_rep.cpp	/^int main (void)$/;"	f
main	./zeromq/tests/test_last_endpoint.cpp	/^int main (void)$/;"	f
main	./zeromq/tests/test_monitor.cpp	/^int main (void)$/;"	f
main	./zeromq/tests/test_msg_flags.cpp	/^int main (void)$/;"	f
main	./zeromq/tests/test_pair_inproc.cpp	/^int main (void)$/;"	f
main	./zeromq/tests/test_pair_ipc.cpp	/^int main (void)$/;"	f
main	./zeromq/tests/test_pair_tcp.cpp	/^int main (void)$/;"	f
main	./zeromq/tests/test_reqrep_device.cpp	/^int main (void)$/;"	f
main	./zeromq/tests/test_reqrep_inproc.cpp	/^int main (void)$/;"	f
main	./zeromq/tests/test_reqrep_ipc.cpp	/^int main (void)$/;"	f
main	./zeromq/tests/test_reqrep_tcp.cpp	/^int main (void)$/;"	f
main	./zeromq/tests/test_router_mandatory.cpp	/^int main (void)$/;"	f
main	./zeromq/tests/test_shutdown_stress.cpp	/^int main (void)$/;"	f
main	./zeromq/tests/test_sub_forward.cpp	/^int main (void)$/;"	f
main	./zeromq/tests/test_term_endpoint.cpp	/^int main (void)$/;"	f
main	./zeromq/tests/test_timeo.cpp	/^int main (void)$/;"	f
make_fdpair	./zeromq/src/signaler.cpp	/^int zmq::signaler_t::make_fdpair (fd_t *r_, fd_t *w_)$/;"	f	class:zmq::signaler_t
man3dir	./zeromq/doc/Makefile	/^man3dir = $(mandir)\/man3$/;"	m
man7dir	./zeromq/doc/Makefile	/^man7dir = $(mandir)\/man7$/;"	m
mandatory	./zeromq/src/router.hpp	/^        bool mandatory;$/;"	m	class:zmq::router_t
mandir	./zeromq/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	./zeromq/builds/msvc/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	./zeromq/doc/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	./zeromq/foreign/openpgm/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	./zeromq/perf/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	./zeromq/src/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	./zeromq/tests/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mark_as_matching	./zeromq/src/xpub.cpp	/^void zmq::xpub_t::mark_as_matching (pipe_t *pipe_, void *arg_)$/;"	f	class:zmq::xpub_t
mask	./zeromq/src/tcp_address.cpp	/^int zmq::tcp_address_mask_t::mask () const$/;"	f	class:zmq::tcp_address_mask_t
match	./zeromq/src/dist.cpp	/^void zmq::dist_t::match (pipe_t *pipe_)$/;"	f	class:zmq::dist_t
match	./zeromq/src/mtrie.cpp	/^void zmq::mtrie_t::match (unsigned char *data_, size_t size_,$/;"	f	class:zmq::mtrie_t
match	./zeromq/src/xsub.cpp	/^bool zmq::xsub_t::match (msg_t *msg_)$/;"	f	class:zmq::xsub_t
match_address	./zeromq/src/tcp_address.cpp	/^bool zmq::tcp_address_mask_t::match_address (const struct sockaddr *ss, const socklen_t ss_len) const$/;"	f	class:zmq::tcp_address_mask_t
matching	./zeromq/src/dist.hpp	/^        pipes_t::size_type matching;$/;"	m	class:zmq::dist_t
max_command_delay	./zeromq/src/config.hpp	/^        max_command_delay = 3000000,$/;"	e	enum:zmq::__anon7
max_io_events	./zeromq/src/config.hpp	/^        max_io_events = 256,$/;"	e	enum:zmq::__anon7
max_socket_id	./zeromq/src/ctx.cpp	/^zmq::atomic_counter_t zmq::ctx_t::max_socket_id;$/;"	m	class:zmq::ctx_t	file:
max_socket_id	./zeromq/src/ctx.hpp	/^        static atomic_counter_t max_socket_id;$/;"	m	class:zmq::ctx_t
max_sockets	./zeromq/src/ctx.hpp	/^        int max_sockets;$/;"	m	class:zmq::ctx_t
max_vsm_size	./zeromq/src/msg.hpp	/^        enum {max_vsm_size = 29};$/;"	e	enum:zmq::msg_t::__anon14
max_wm_delta	./zeromq/src/config.hpp	/^        max_wm_delta = 1024,$/;"	e	enum:zmq::__anon7
maxfd	./zeromq/src/select.hpp	/^        fd_t maxfd;$/;"	m	class:zmq::select_t
maxmsgsize	./zeromq/src/decoder.hpp	/^        int64_t maxmsgsize;$/;"	m	class:zmq::decoder_t
maxmsgsize	./zeromq/src/options.hpp	/^        int64_t maxmsgsize;$/;"	m	struct:zmq::options_t
maxmsgsize	./zeromq/src/v1_decoder.hpp	/^        const int64_t maxmsgsize;$/;"	m	class:zmq::v1_decoder_t
message	./tests/size.cpp	/^const char message[] = "Hello World!";$/;"	v
message	./zeromq/src/xsub.hpp	/^        msg_t message;$/;"	m	class:zmq::xsub_t
message_begins	./zeromq/src/req.hpp	/^        bool message_begins;$/;"	m	class:zmq::req_t
message_count	./zeromq/perf/inproc_thr.cpp	/^static int message_count;$/;"	v	file:
message_pipe_granularity	./zeromq/src/config.hpp	/^        message_pipe_granularity = 256,$/;"	e	enum:zmq::__anon7
message_ready	./zeromq/src/decoder.cpp	/^bool zmq::decoder_t::message_ready ()$/;"	f	class:zmq::decoder_t
message_ready	./zeromq/src/encoder.cpp	/^bool zmq::encoder_t::message_ready ()$/;"	f	class:zmq::encoder_t
message_ready	./zeromq/src/v1_decoder.cpp	/^bool zmq::v1_decoder_t::message_ready ()$/;"	f	class:zmq::v1_decoder_t
message_ready	./zeromq/src/v1_encoder.cpp	/^bool zmq::v1_encoder_t::message_ready ()$/;"	f	class:zmq::v1_encoder_t
message_size	./zeromq/perf/inproc_lat.cpp	/^static size_t message_size;$/;"	v	file:
message_size	./zeromq/perf/inproc_thr.cpp	/^static size_t message_size;$/;"	v	file:
message_t	./zeromq/include/zmq.hpp	/^        inline message_t ()$/;"	f	class:zmq::message_t
message_t	./zeromq/include/zmq.hpp	/^        inline message_t (message_t &&rhs) : msg (rhs.msg)$/;"	f	class:zmq::message_t
message_t	./zeromq/include/zmq.hpp	/^        inline message_t (size_t size_)$/;"	f	class:zmq::message_t
message_t	./zeromq/include/zmq.hpp	/^        inline message_t (void *data_, size_t size_, free_fn *ffn_,$/;"	f	class:zmq::message_t
message_t	./zeromq/include/zmq.hpp	/^    class message_t$/;"	c	namespace:zmq
min	./zeromq/src/mtrie.hpp	/^        unsigned char min;$/;"	m	class:zmq::mtrie_t
min	./zeromq/src/trie.hpp	/^        unsigned char min;$/;"	m	class:zmq::trie_t
mkdir_p	./zeromq/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	./zeromq/builds/msvc/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	./zeromq/doc/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	./zeromq/foreign/openpgm/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	./zeromq/perf/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	./zeromq/src/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	./zeromq/tests/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkinstalldirs	./zeromq/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	./zeromq/builds/msvc/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	./zeromq/doc/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	./zeromq/foreign/openpgm/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	./zeromq/perf/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	./zeromq/src/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	./zeromq/tests/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
monitor	./zeromq/src/socket_base.cpp	/^int zmq::socket_base_t::monitor (const char *addr_, int events_)$/;"	f	class:zmq::socket_base_t
monitor_event	./zeromq/src/socket_base.cpp	/^void zmq::socket_base_t::monitor_event (zmq_event_t event_)$/;"	f	class:zmq::socket_base_t
monitor_events	./zeromq/src/socket_base.hpp	/^        int monitor_events;$/;"	m	class:zmq::socket_base_t
monitor_socket	./zeromq/src/socket_base.hpp	/^        void *monitor_socket;$/;"	m	class:zmq::socket_base_t
more	./zeromq/src/dist.hpp	/^        bool more;$/;"	m	class:zmq::dist_t
more	./zeromq/src/fq.hpp	/^        bool more;$/;"	m	class:zmq::fq_t
more	./zeromq/src/lb.hpp	/^        bool more;$/;"	m	class:zmq::lb_t
more	./zeromq/src/msg.hpp	/^            more = 1,$/;"	e	enum:zmq::msg_t::__anon13
more	./zeromq/src/xpub.hpp	/^        bool more;$/;"	m	class:zmq::xpub_t
more	./zeromq/src/xsub.hpp	/^        bool more;$/;"	m	class:zmq::xsub_t
more_flag	./zeromq/src/v1_protocol.hpp	/^            more_flag = 1,$/;"	e	enum:zmq::v1_protocol_t::__anon4
more_in	./zeromq/src/router.hpp	/^        bool more_in;$/;"	m	class:zmq::router_t
more_out	./zeromq/src/router.hpp	/^        bool more_out;$/;"	m	class:zmq::router_t
move	./zeromq/include/zmq.hpp	/^        inline void move (message_t *msg_)$/;"	f	class:zmq::message_t
move	./zeromq/src/blob.hpp	/^      move(char_type* __s1, const char_type* __s2, size_t __n)$/;"	f	struct:std::char_traits
move	./zeromq/src/msg.cpp	/^int zmq::msg_t::move (msg_t &src_)$/;"	f	class:zmq::msg_t
mru_decoder	./zeromq/src/pgm_receiver.hpp	/^        decoder_t *mru_decoder;$/;"	m	class:zmq::pgm_receiver_t
msg	./zeromq/include/zmq.hpp	/^        zmq_msg_t msg;$/;"	m	class:zmq::message_t
msg_flags	./zeromq/src/v1_decoder.hpp	/^        unsigned char msg_flags;$/;"	m	class:zmq::v1_decoder_t
msg_free_fn	./zeromq/src/msg.hpp	/^    typedef void (msg_free_fn) (void *data, void *hint);$/;"	t
msg_sink	./zeromq/src/decoder.hpp	/^        i_msg_sink *msg_sink;$/;"	m	class:zmq::decoder_t
msg_sink	./zeromq/src/v1_decoder.hpp	/^        i_msg_sink *msg_sink;$/;"	m	class:zmq::v1_decoder_t
msg_source	./zeromq/src/encoder.hpp	/^        i_msg_source *msg_source;$/;"	m	class:zmq::encoder_t
msg_source	./zeromq/src/v1_encoder.hpp	/^        i_msg_source *msg_source;$/;"	m	class:zmq::v1_encoder_t
msg_t	./zeromq/src/msg.hpp	/^    class msg_t$/;"	c	namespace:zmq
msgs_read	./zeromq/src/command.hpp	/^                uint64_t msgs_read;$/;"	m	struct:zmq::command_t::__anon20::__anon27
msgs_read	./zeromq/src/pipe.hpp	/^        uint64_t msgs_read;$/;"	m	class:zmq::pipe_t
msgs_written	./zeromq/src/pipe.hpp	/^        uint64_t msgs_written;$/;"	m	class:zmq::pipe_t
mtrie_t	./zeromq/src/mtrie.cpp	/^zmq::mtrie_t::mtrie_t () :$/;"	f	class:zmq::mtrie_t
mtrie_t	./zeromq/src/mtrie.hpp	/^    class mtrie_t$/;"	c	namespace:zmq
multicast_hops	./zeromq/src/options.hpp	/^        int multicast_hops;$/;"	m	struct:zmq::options_t
mutex_t	./zeromq/src/mutex.hpp	/^        inline mutex_t ()$/;"	f	class:zmq::mutex_t
mutex_t	./zeromq/src/mutex.hpp	/^    class mutex_t$/;"	c	namespace:zmq
name	./include/yampl/Channel.h	/^    std::string name;$/;"	m	struct:yampl::Channel
nbytes_processed	./zeromq/src/pgm_socket.hpp	/^        size_t nbytes_processed;$/;"	m	class:zmq::pgm_socket_t
nbytes_rec	./zeromq/src/pgm_socket.hpp	/^        size_t nbytes_rec;$/;"	m	class:zmq::pgm_socket_t
next	./zeromq/src/decoder.hpp	/^        step_t next;$/;"	m	class:zmq::decoder_base_t
next	./zeromq/src/encoder.hpp	/^        step_t next;$/;"	m	class:zmq::encoder_base_t
next	./zeromq/src/mtrie.hpp	/^        } next;$/;"	m	class:zmq::mtrie_t	typeref:union:zmq::mtrie_t::__anon37
next	./zeromq/src/trie.hpp	/^        } next;$/;"	m	class:zmq::trie_t	typeref:union:zmq::trie_t::__anon9
next	./zeromq/src/yqueue.hpp	/^             chunk_t *next;$/;"	m	struct:zmq::yqueue_t::chunk_t
next_peer_id	./zeromq/src/router.hpp	/^        uint32_t next_peer_id;$/;"	m	class:zmq::router_t
next_step	./zeromq/src/decoder.hpp	/^        inline void next_step (void *read_pos_, size_t to_read_,$/;"	f	class:zmq::decoder_base_t
next_step	./zeromq/src/encoder.hpp	/^        inline void next_step (void *write_pos_, size_t to_write_,$/;"	f	class:zmq::encoder_base_t
node	./zeromq/src/mtrie.hpp	/^            class mtrie_t *node;$/;"	m	union:zmq::mtrie_t::__anon37	typeref:class:zmq::mtrie_t::__anon37::mtrie_t
node	./zeromq/src/trie.hpp	/^            class trie_t *node;$/;"	m	union:zmq::trie_t::__anon9	typeref:class:zmq::trie_t::__anon9::trie_t
noinst_PROGRAMS	./zeromq/perf/Makefile	/^noinst_PROGRAMS = local_lat$(EXEEXT) remote_lat$(EXEEXT) \\$/;"	m
noinst_PROGRAMS	./zeromq/tests/Makefile	/^noinst_PROGRAMS = test_pair_inproc$(EXEEXT) test_pair_tcp$(EXEEXT) \\$/;"	m
not_eof	./zeromq/src/blob.hpp	/^      not_eof(const int_type& __c)$/;"	f	struct:std::char_traits
notifyPeerDisconnection	./include/yampl/generic/ServerSocketBase.h	/^void ServerSocketBase<T>::notifyPeerDisconnection(typename PeerList::iterator it){$/;"	f	class:yampl::ServerSocketBase
notifyPeerDisconnection	./src/shm/ServerSocket.cpp	/^void ServerSocket::notifyPeerDisconnection(PeerList::iterator it){$/;"	f	class:yampl::shm::ServerSocket
now_ms	./zeromq/src/clock.cpp	/^uint64_t zmq::clock_t::now_ms ()$/;"	f	class:zmq::clock_t
now_us	./zeromq/src/clock.cpp	/^uint64_t zmq::clock_t::now_us ()$/;"	f	class:zmq::clock_t
num	./zeromq/include/zmq.hpp	/^        int num () const$/;"	f	class:zmq::error_t
object	./zeromq/src/command.hpp	/^                zmq::own_t *object;$/;"	m	struct:zmq::command_t::__anon20::__anon23
object	./zeromq/src/command.hpp	/^                zmq::own_t *object;$/;"	m	struct:zmq::command_t::__anon20::__anon31
object_t	./zeromq/src/object.cpp	/^zmq::object_t::object_t (ctx_t *ctx_, uint32_t tid_) :$/;"	f	class:zmq::object_t
object_t	./zeromq/src/object.cpp	/^zmq::object_t::object_t (object_t *parent_) :$/;"	f	class:zmq::object_t
object_t	./zeromq/src/object.hpp	/^    class object_t$/;"	c	namespace:zmq
off_type	./zeromq/src/blob.hpp	/^      typedef streamoff 	off_type;$/;"	t	struct:std::char_traits
oldincludedir	./zeromq/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	./zeromq/builds/msvc/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	./zeromq/doc/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	./zeromq/foreign/openpgm/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	./zeromq/perf/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	./zeromq/src/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	./zeromq/tests/Makefile	/^oldincludedir = \/usr\/include$/;"	m
one_byte_size_ready	./zeromq/src/decoder.cpp	/^bool zmq::decoder_t::one_byte_size_ready ()$/;"	f	class:zmq::decoder_t
one_byte_size_ready	./zeromq/src/v1_decoder.cpp	/^bool zmq::v1_decoder_t::one_byte_size_ready ()$/;"	f	class:zmq::v1_decoder_t
open	./zeromq/src/ipc_connecter.cpp	/^int zmq::ipc_connecter_t::open ()$/;"	f	class:zmq::ipc_connecter_t
open	./zeromq/src/tcp_connecter.cpp	/^int zmq::tcp_connecter_t::open ()$/;"	f	class:zmq::tcp_connecter_t
openConnection	./include/yampl/generic/ServerSocketBase.h	/^void ServerSocketBase<T>::openConnection(const Channel &channel, Semantics semantics, void (*deallocator)(void *, void *), const UUID &uuid){$/;"	f	class:yampl::ServerSocketBase
openSocket	./src/shm/SHMSocketBase.cpp	/^void PipeSocketBase::openSocket(bool isProducer){$/;"	f	class:yampl::shm::PipeSocketBase
open_socket	./zeromq/src/ip.cpp	/^zmq::fd_t zmq::open_socket (int domain_, int type_, int protocol_)$/;"	f	class:zmq
operator ()	./zeromq/src/pgm_receiver.hpp	/^            bool operator () (const pgm_tsi_t &ltsi,$/;"	f	struct:zmq::pgm_receiver_t::tsi_comp
operator <<	./include/yampl/utils/UUID.h	/^inline std::ostream & operator<<(std::ostream &stream, const UUID &uuid){$/;"	f	namespace:yampl
operator =	./zeromq/include/zmq.hpp	/^        inline context_t &operator = (context_t &&rhs)$/;"	f	class:zmq::context_t
operator =	./zeromq/include/zmq.hpp	/^        inline message_t &operator = (message_t &&rhs)$/;"	f	class:zmq::message_t
operator =	./zeromq/include/zmq.hpp	/^        inline socket_t& operator=(socket_t&& rhs)$/;"	f	class:zmq::socket_t
operator []	./zeromq/src/array.hpp	/^        inline T *&operator [] (size_type index_)$/;"	f	class:zmq::array_t
operator std::string	./include/yampl/utils/UUID.h	/^inline UUID::operator std::string() const{$/;"	f	class:yampl::UUID
operator void*	./zeromq/include/zmq.hpp	/^        inline operator void* ()$/;"	f	class:zmq::context_t
operator void*	./zeromq/include/zmq.hpp	/^        inline operator void* ()$/;"	f	class:zmq::socket_t
opt_sync	./zeromq/src/ctx.hpp	/^        mutex_t opt_sync;$/;"	m	class:zmq::ctx_t
options	./zeromq/src/ctx.hpp	/^        options_t options;$/;"	m	struct:zmq::endpoint_t
options	./zeromq/src/own.hpp	/^        options_t options;$/;"	m	class:zmq::own_t
options	./zeromq/src/pgm_receiver.hpp	/^        options_t options;$/;"	m	class:zmq::pgm_receiver_t
options	./zeromq/src/pgm_sender.hpp	/^        options_t options;$/;"	m	class:zmq::pgm_sender_t
options	./zeromq/src/pgm_socket.hpp	/^        options_t options;$/;"	m	class:zmq::pgm_socket_t
options	./zeromq/src/stream_engine.hpp	/^        options_t options;$/;"	m	class:zmq::stream_engine_t
options_t	./zeromq/src/options.cpp	/^zmq::options_t::options_t () :$/;"	f	class:zmq::options_t
options_t	./zeromq/src/options.hpp	/^    struct options_t$/;"	s	namespace:zmq
out_active	./zeromq/src/pipe.hpp	/^        bool out_active;$/;"	m	class:zmq::pipe_t
out_batch_size	./zeromq/src/config.hpp	/^        out_batch_size = 8192,$/;"	e	enum:zmq::__anon7
out_buffer	./zeromq/src/pgm_sender.hpp	/^        unsigned char *out_buffer;$/;"	m	class:zmq::pgm_sender_t
out_buffer_size	./zeromq/src/pgm_sender.hpp	/^        size_t out_buffer_size;$/;"	m	class:zmq::pgm_sender_t
out_event	./zeromq/src/io_object.cpp	/^void zmq::io_object_t::out_event ()$/;"	f	class:zmq::io_object_t
out_event	./zeromq/src/io_thread.cpp	/^void zmq::io_thread_t::out_event ()$/;"	f	class:zmq::io_thread_t
out_event	./zeromq/src/ipc_connecter.cpp	/^void zmq::ipc_connecter_t::out_event ()$/;"	f	class:zmq::ipc_connecter_t
out_event	./zeromq/src/pgm_sender.cpp	/^void zmq::pgm_sender_t::out_event ()$/;"	f	class:zmq::pgm_sender_t
out_event	./zeromq/src/reaper.cpp	/^void zmq::reaper_t::out_event ()$/;"	f	class:zmq::reaper_t
out_event	./zeromq/src/socket_base.cpp	/^void zmq::socket_base_t::out_event ()$/;"	f	class:zmq::socket_base_t
out_event	./zeromq/src/stream_engine.cpp	/^void zmq::stream_engine_t::out_event ()$/;"	f	class:zmq::stream_engine_t
out_event	./zeromq/src/tcp_connecter.cpp	/^void zmq::tcp_connecter_t::out_event ()$/;"	f	class:zmq::tcp_connecter_t
outpipe	./zeromq/src/pipe.hpp	/^        upipe_t *outpipe;$/;"	m	class:zmq::pipe_t
outpipe_t	./zeromq/src/router.hpp	/^        struct outpipe_t$/;"	s	class:zmq::router_t
outpipes	./zeromq/src/router.hpp	/^        outpipes_t outpipes;$/;"	m	class:zmq::router_t
outpipes_t	./zeromq/src/router.hpp	/^        typedef std::map <blob_t, outpipe_t> outpipes_t;$/;"	t	class:zmq::router_t
outpos	./zeromq/src/stream_engine.hpp	/^        unsigned char *outpos;$/;"	m	class:zmq::stream_engine_t
outsize	./zeromq/src/stream_engine.hpp	/^        size_t outsize;$/;"	m	class:zmq::stream_engine_t
own	./zeromq/src/command.hpp	/^            own,$/;"	e	enum:zmq::command_t::type_t
own	./zeromq/src/command.hpp	/^            } own;$/;"	m	union:zmq::command_t::__anon20	typeref:struct:zmq::command_t::__anon20::__anon23
own_t	./zeromq/src/own.cpp	/^zmq::own_t::own_t (class ctx_t *parent_, uint32_t tid_) :$/;"	f	class:zmq::own_t
own_t	./zeromq/src/own.cpp	/^zmq::own_t::own_t (io_thread_t *io_thread_, const options_t &options_) :$/;"	f	class:zmq::own_t
own_t	./zeromq/src/own.hpp	/^    class own_t : public object_t$/;"	c	namespace:zmq
owned	./zeromq/src/own.hpp	/^        owned_t owned;$/;"	m	class:zmq::own_t
owned_t	./zeromq/src/own.hpp	/^        typedef std::set <own_t*> owned_t;$/;"	t	class:zmq::own_t
owner	./zeromq/src/own.hpp	/^        own_t *owner;$/;"	m	class:zmq::own_t
pair_session_t	./zeromq/src/pair.cpp	/^zmq::pair_session_t::pair_session_t (io_thread_t *io_thread_, bool connect_,$/;"	f	class:zmq::pair_session_t
pair_session_t	./zeromq/src/pair.hpp	/^    class pair_session_t : public session_base_t$/;"	c	namespace:zmq
pair_t	./zeromq/src/pair.cpp	/^zmq::pair_t::pair_t (class ctx_t *parent_, uint32_t tid_, int sid_) :$/;"	f	class:zmq::pair_t
pair_t	./zeromq/src/pair.hpp	/^    class pair_t :$/;"	c	namespace:zmq
parseContext	./examples/benchmarks/benchmark.cpp	/^Context parseContext(const char *c, string &channelName){$/;"	f
parseFactory	./examples/benchmarks/benchmark.cpp	/^ISocketFactory *parseFactory(const char *impl){$/;"	f
parse_uri	./zeromq/src/socket_base.cpp	/^int zmq::socket_base_t::parse_uri (const char *uri_,$/;"	f	class:zmq::socket_base_t
pdfdir	./zeromq/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	./zeromq/builds/msvc/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	./zeromq/doc/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	./zeromq/foreign/openpgm/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	./zeromq/perf/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	./zeromq/src/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	./zeromq/tests/Makefile	/^pdfdir = ${docdir}$/;"	m
peer	./zeromq/src/pipe.hpp	/^        pipe_t *peer;$/;"	m	class:zmq::pipe_t
peerId	./include/yampl/ISocket.h	/^	const std::string *peerId;$/;"	m	struct:yampl::ISocket::RecvArgs
peerIdOut	./include/yampl/ISocket.h	/^	std::string *peerIdOut;$/;"	m	struct:yampl::ISocket::RecvArgs
peer_info_t	./zeromq/src/pgm_receiver.hpp	/^        struct peer_info_t$/;"	s	class:zmq::pgm_receiver_t
peers	./zeromq/src/pgm_receiver.hpp	/^        peers_t peers;$/;"	m	class:zmq::pgm_receiver_t
peers_msgs_read	./zeromq/src/pipe.hpp	/^        uint64_t peers_msgs_read;$/;"	m	class:zmq::pipe_t
peers_t	./zeromq/src/pgm_receiver.hpp	/^        typedef std::map <pgm_tsi_t, peer_info_t, tsi_comp> peers_t;$/;"	t	class:zmq::pgm_receiver_t
pending	./zeromq/src/pipe.hpp	/^            pending,$/;"	e	enum:zmq::pipe_t::__anon12
pending	./zeromq/src/session_base.hpp	/^        bool pending;$/;"	m	class:zmq::session_base_t
pending	./zeromq/src/xpub.hpp	/^        pending_t pending;$/;"	m	class:zmq::xpub_t
pending_bytes	./zeromq/src/pgm_receiver.hpp	/^        size_t pending_bytes;$/;"	m	class:zmq::pgm_receiver_t
pending_list	./zeromq/src/devpoll.hpp	/^        pending_list_t pending_list;$/;"	m	class:zmq::devpoll_t
pending_list_t	./zeromq/src/devpoll.hpp	/^        typedef std::vector <fd_t> pending_list_t;$/;"	t	class:zmq::devpoll_t
pending_notify_handle	./zeromq/src/pgm_sender.hpp	/^        handle_t pending_notify_handle;$/;"	m	class:zmq::pgm_sender_t
pending_ptr	./zeromq/src/pgm_receiver.hpp	/^        unsigned char *pending_ptr;$/;"	m	class:zmq::pgm_receiver_t
pending_t	./zeromq/src/xpub.hpp	/^        typedef std::deque <blob_t> pending_t;$/;"	t	class:zmq::xpub_t
pgm_basename	./zeromq/Makefile	/^pgm_basename = libpgm-5.1.118~dfsg$/;"	m
pgm_basename	./zeromq/builds/msvc/Makefile	/^pgm_basename = libpgm-5.1.118~dfsg$/;"	m
pgm_basename	./zeromq/doc/Makefile	/^pgm_basename = libpgm-5.1.118~dfsg$/;"	m
pgm_basename	./zeromq/foreign/openpgm/Makefile	/^pgm_basename = libpgm-5.1.118~dfsg$/;"	m
pgm_basename	./zeromq/perf/Makefile	/^pgm_basename = libpgm-5.1.118~dfsg$/;"	m
pgm_basename	./zeromq/src/Makefile	/^pgm_basename = libpgm-5.1.118~dfsg$/;"	m
pgm_basename	./zeromq/tests/Makefile	/^pgm_basename = libpgm-5.1.118~dfsg$/;"	m
pgm_max_tpdu	./zeromq/src/config.hpp	/^        pgm_max_tpdu = 1500,$/;"	e	enum:zmq::__anon7
pgm_msgv	./zeromq/src/pgm_socket.hpp	/^        pgm_msgv_t *pgm_msgv;$/;"	m	class:zmq::pgm_socket_t
pgm_msgv_len	./zeromq/src/pgm_socket.hpp	/^        size_t pgm_msgv_len;$/;"	m	class:zmq::pgm_socket_t
pgm_msgv_processed	./zeromq/src/pgm_socket.hpp	/^        size_t pgm_msgv_processed;$/;"	m	class:zmq::pgm_socket_t
pgm_receiver_t	./zeromq/src/pgm_receiver.cpp	/^zmq::pgm_receiver_t::pgm_receiver_t (class io_thread_t *parent_, $/;"	f	class:zmq::pgm_receiver_t
pgm_receiver_t	./zeromq/src/pgm_receiver.hpp	/^    class pgm_receiver_t : public io_object_t, public i_engine$/;"	c	namespace:zmq
pgm_sender_t	./zeromq/src/pgm_sender.cpp	/^zmq::pgm_sender_t::pgm_sender_t (io_thread_t *parent_, $/;"	f	class:zmq::pgm_sender_t
pgm_sender_t	./zeromq/src/pgm_sender.hpp	/^    class pgm_sender_t : public io_object_t, public i_engine$/;"	c	namespace:zmq
pgm_socket	./zeromq/src/pgm_receiver.hpp	/^        pgm_socket_t pgm_socket;$/;"	m	class:zmq::pgm_receiver_t
pgm_socket	./zeromq/src/pgm_sender.hpp	/^        pgm_socket_t pgm_socket;$/;"	m	class:zmq::pgm_sender_t
pgm_socket_t	./zeromq/src/pgm_socket.cpp	/^zmq::pgm_socket_t::pgm_socket_t (bool receiver_, const options_t &options_) :$/;"	f	class:zmq::pgm_socket_t
pgm_socket_t	./zeromq/src/pgm_socket.hpp	/^    class pgm_socket_t$/;"	c	namespace:zmq
pgm_srcdir	./zeromq/Makefile	/^pgm_srcdir = $/;"	m
pgm_srcdir	./zeromq/builds/msvc/Makefile	/^pgm_srcdir = $/;"	m
pgm_srcdir	./zeromq/doc/Makefile	/^pgm_srcdir = $/;"	m
pgm_srcdir	./zeromq/foreign/openpgm/Makefile	/^pgm_srcdir = $/;"	m
pgm_srcdir	./zeromq/perf/Makefile	/^pgm_srcdir = $/;"	m
pgm_srcdir	./zeromq/src/Makefile	/^pgm_srcdir = $/;"	m
pgm_srcdir	./zeromq/tests/Makefile	/^pgm_srcdir = $/;"	m
pgm_subdir	./zeromq/Makefile	/^pgm_subdir = $/;"	m
pgm_subdir	./zeromq/builds/msvc/Makefile	/^pgm_subdir = $/;"	m
pgm_subdir	./zeromq/doc/Makefile	/^pgm_subdir = $/;"	m
pgm_subdir	./zeromq/foreign/openpgm/Makefile	/^pgm_subdir = $/;"	m
pgm_subdir	./zeromq/perf/Makefile	/^pgm_subdir = $/;"	m
pgm_subdir	./zeromq/src/Makefile	/^pgm_subdir = $/;"	m
pgm_subdir	./zeromq/tests/Makefile	/^pgm_subdir = $/;"	m
pipe	./include/yampl/SocketFactory.h	/^namespace pipe{$/;"	n	namespace:yampl
pipe	./include/yampl/pipe/ClientSocket.h	/^namespace pipe{$/;"	n	namespace:yampl
pipe	./include/yampl/pipe/ConsumerSocket.h	/^namespace pipe{$/;"	n	namespace:yampl
pipe	./include/yampl/pipe/PipeSocketBase.h	/^namespace pipe{$/;"	n	namespace:yampl
pipe	./include/yampl/pipe/ProducerSocket.h	/^namespace pipe{$/;"	n	namespace:yampl
pipe	./include/yampl/pipe/ServerSocket.h	/^namespace pipe{$/;"	n	namespace:yampl
pipe	./include/yampl/pipe/SimpleClientSocket.h	/^namespace pipe{$/;"	n	namespace:yampl
pipe	./include/yampl/pipe/SimpleServerSocket.h	/^namespace pipe{$/;"	n	namespace:yampl
pipe	./include/yampl/pipe/SocketFactory.h	/^namespace pipe{$/;"	n	namespace:yampl
pipe	./src/pipe/PipeSocketBase.cpp	/^namespace pipe{$/;"	n	namespace:yampl	file:
pipe	./src/pipe/PipeSocketFactory.cpp	/^namespace pipe{$/;"	n	namespace:yampl	file:
pipe	./zeromq/src/command.hpp	/^                void *pipe;$/;"	m	struct:zmq::command_t::__anon20::__anon28
pipe	./zeromq/src/command.hpp	/^                zmq::pipe_t *pipe;$/;"	m	struct:zmq::command_t::__anon20::__anon25
pipe	./zeromq/src/pair.hpp	/^        zmq::pipe_t *pipe;$/;"	m	class:zmq::pair_t
pipe	./zeromq/src/router.hpp	/^            zmq::pipe_t *pipe;$/;"	m	struct:zmq::router_t::outpipe_t
pipe	./zeromq/src/session_base.hpp	/^        zmq::pipe_t *pipe;$/;"	m	class:zmq::session_base_t
pipe_handle	./zeromq/src/pgm_receiver.hpp	/^        handle_t pipe_handle;$/;"	m	class:zmq::pgm_receiver_t
pipe_t	./zeromq/src/pipe.cpp	/^zmq::pipe_t::pipe_t (object_t *parent_, upipe_t *inpipe_, upipe_t *outpipe_,$/;"	f	class:zmq::pipe_t
pipe_t	./zeromq/src/pipe.hpp	/^    class pipe_t :$/;"	c	namespace:zmq
pipe_term	./zeromq/src/command.hpp	/^            pipe_term,$/;"	e	enum:zmq::command_t::type_t
pipe_term	./zeromq/src/command.hpp	/^            } pipe_term;$/;"	m	union:zmq::command_t::__anon20	typeref:struct:zmq::command_t::__anon20::__anon29
pipe_term_ack	./zeromq/src/command.hpp	/^            pipe_term_ack,$/;"	e	enum:zmq::command_t::type_t
pipe_term_ack	./zeromq/src/command.hpp	/^            } pipe_term_ack;$/;"	m	union:zmq::command_t::__anon20	typeref:struct:zmq::command_t::__anon20::__anon30
pipepair	./zeromq/src/pipe.cpp	/^int zmq::pipepair (class object_t *parents_ [2], class pipe_t* pipes_ [2],$/;"	f	class:zmq
pipes	./zeromq/src/dist.hpp	/^        pipes_t pipes;$/;"	m	class:zmq::dist_t
pipes	./zeromq/src/fq.hpp	/^        pipes_t pipes;$/;"	m	class:zmq::fq_t
pipes	./zeromq/src/lb.hpp	/^        pipes_t pipes;$/;"	m	class:zmq::lb_t
pipes	./zeromq/src/mtrie.hpp	/^        pipes_t *pipes;$/;"	m	class:zmq::mtrie_t
pipes	./zeromq/src/socket_base.hpp	/^        pipes_t pipes;$/;"	m	class:zmq::socket_base_t
pipes_t	./zeromq/src/dist.hpp	/^        typedef array_t <zmq::pipe_t, 2> pipes_t;$/;"	t	class:zmq::dist_t
pipes_t	./zeromq/src/fq.hpp	/^        typedef array_t <pipe_t, 1> pipes_t;$/;"	t	class:zmq::fq_t
pipes_t	./zeromq/src/lb.hpp	/^        typedef array_t <pipe_t, 2> pipes_t;$/;"	t	class:zmq::lb_t
pipes_t	./zeromq/src/mtrie.hpp	/^        typedef std::set <zmq::pipe_t*> pipes_t;$/;"	t	class:zmq::mtrie_t
pipes_t	./zeromq/src/socket_base.hpp	/^        typedef array_t <pipe_t, 3> pipes_t;$/;"	t	class:zmq::socket_base_t
pkgconfig_DATA	./zeromq/src/Makefile	/^pkgconfig_DATA = libzmq.pc$/;"	m
pkgconfigdir	./zeromq/src/Makefile	/^pkgconfigdir = $(libdir)\/pkgconfig$/;"	m
pkgdatadir	./zeromq/Makefile	/^pkgdatadir = $(datadir)\/zeromq$/;"	m
pkgdatadir	./zeromq/builds/msvc/Makefile	/^pkgdatadir = $(datadir)\/zeromq$/;"	m
pkgdatadir	./zeromq/doc/Makefile	/^pkgdatadir = $(datadir)\/zeromq$/;"	m
pkgdatadir	./zeromq/foreign/openpgm/Makefile	/^pkgdatadir = $(datadir)\/zeromq$/;"	m
pkgdatadir	./zeromq/perf/Makefile	/^pkgdatadir = $(datadir)\/zeromq$/;"	m
pkgdatadir	./zeromq/src/Makefile	/^pkgdatadir = $(datadir)\/zeromq$/;"	m
pkgdatadir	./zeromq/tests/Makefile	/^pkgdatadir = $(datadir)\/zeromq$/;"	m
pkgincludedir	./zeromq/Makefile	/^pkgincludedir = $(includedir)\/zeromq$/;"	m
pkgincludedir	./zeromq/builds/msvc/Makefile	/^pkgincludedir = $(includedir)\/zeromq$/;"	m
pkgincludedir	./zeromq/doc/Makefile	/^pkgincludedir = $(includedir)\/zeromq$/;"	m
pkgincludedir	./zeromq/foreign/openpgm/Makefile	/^pkgincludedir = $(includedir)\/zeromq$/;"	m
pkgincludedir	./zeromq/perf/Makefile	/^pkgincludedir = $(includedir)\/zeromq$/;"	m
pkgincludedir	./zeromq/src/Makefile	/^pkgincludedir = $(includedir)\/zeromq$/;"	m
pkgincludedir	./zeromq/tests/Makefile	/^pkgincludedir = $(includedir)\/zeromq$/;"	m
pkglibdir	./zeromq/Makefile	/^pkglibdir = $(libdir)\/zeromq$/;"	m
pkglibdir	./zeromq/builds/msvc/Makefile	/^pkglibdir = $(libdir)\/zeromq$/;"	m
pkglibdir	./zeromq/doc/Makefile	/^pkglibdir = $(libdir)\/zeromq$/;"	m
pkglibdir	./zeromq/foreign/openpgm/Makefile	/^pkglibdir = $(libdir)\/zeromq$/;"	m
pkglibdir	./zeromq/perf/Makefile	/^pkglibdir = $(libdir)\/zeromq$/;"	m
pkglibdir	./zeromq/src/Makefile	/^pkglibdir = $(libdir)\/zeromq$/;"	m
pkglibdir	./zeromq/tests/Makefile	/^pkglibdir = $(libdir)\/zeromq$/;"	m
pkglibexecdir	./zeromq/Makefile	/^pkglibexecdir = $(libexecdir)\/zeromq$/;"	m
pkglibexecdir	./zeromq/builds/msvc/Makefile	/^pkglibexecdir = $(libexecdir)\/zeromq$/;"	m
pkglibexecdir	./zeromq/doc/Makefile	/^pkglibexecdir = $(libexecdir)\/zeromq$/;"	m
pkglibexecdir	./zeromq/foreign/openpgm/Makefile	/^pkglibexecdir = $(libexecdir)\/zeromq$/;"	m
pkglibexecdir	./zeromq/perf/Makefile	/^pkglibexecdir = $(libexecdir)\/zeromq$/;"	m
pkglibexecdir	./zeromq/src/Makefile	/^pkglibexecdir = $(libexecdir)\/zeromq$/;"	m
pkglibexecdir	./zeromq/tests/Makefile	/^pkglibexecdir = $(libexecdir)\/zeromq$/;"	m
plug	./zeromq/src/command.hpp	/^            plug,$/;"	e	enum:zmq::command_t::type_t
plug	./zeromq/src/command.hpp	/^            } plug;$/;"	m	union:zmq::command_t::__anon20	typeref:struct:zmq::command_t::__anon20::__anon22
plug	./zeromq/src/io_object.cpp	/^void zmq::io_object_t::plug (io_thread_t *io_thread_)$/;"	f	class:zmq::io_object_t
plug	./zeromq/src/pgm_receiver.cpp	/^void zmq::pgm_receiver_t::plug (io_thread_t *io_thread_,$/;"	f	class:zmq::pgm_receiver_t
plug	./zeromq/src/pgm_sender.cpp	/^void zmq::pgm_sender_t::plug (io_thread_t *io_thread_, session_base_t *session_)$/;"	f	class:zmq::pgm_sender_t
plug	./zeromq/src/stream_engine.cpp	/^void zmq::stream_engine_t::plug (io_thread_t *io_thread_,$/;"	f	class:zmq::stream_engine_t
plugged	./zeromq/src/stream_engine.hpp	/^        bool plugged;$/;"	m	class:zmq::stream_engine_t
poll	./include/yampl/utils/Poller.h	/^inline int Poller::poll(int timeout){$/;"	f	class:yampl::Poller
poll	./include/yampl/utils/Poller.h	/^inline int Poller::poll(void **data, int timeout){$/;"	f	class:yampl::Poller
poll	./zeromq/include/zmq.hpp	/^    inline int poll (zmq_pollitem_t *items_, int nitems_, long timeout_ = -1)$/;"	f	namespace:zmq
poll_entry_t	./zeromq/src/epoll.hpp	/^        struct poll_entry_t$/;"	s	class:zmq::epoll_t
poll_entry_t	./zeromq/src/kqueue.hpp	/^        struct poll_entry_t$/;"	s	class:zmq::kqueue_t
poll_t	./zeromq/src/poll.cpp	/^zmq::poll_t::poll_t () :$/;"	f	class:zmq::poll_t
poll_t	./zeromq/src/poll.hpp	/^    class poll_t : public poller_base_t$/;"	c	namespace:zmq
poller	./zeromq/src/io_object.hpp	/^        poller_t *poller;$/;"	m	class:zmq::io_object_t
poller	./zeromq/src/io_thread.hpp	/^        poller_t *poller;$/;"	m	class:zmq::io_thread_t
poller	./zeromq/src/reaper.hpp	/^        poller_t *poller;$/;"	m	class:zmq::reaper_t
poller	./zeromq/src/socket_base.hpp	/^        poller_t *poller;$/;"	m	class:zmq::socket_base_t
poller_base_t	./zeromq/src/poller_base.cpp	/^zmq::poller_base_t::poller_base_t ()$/;"	f	class:zmq::poller_base_t
poller_base_t	./zeromq/src/poller_base.hpp	/^    class poller_base_t$/;"	c	namespace:zmq
poller_t	./zeromq/src/devpoll.hpp	/^    typedef devpoll_t poller_t;$/;"	t	namespace:zmq
poller_t	./zeromq/src/epoll.hpp	/^    typedef epoll_t poller_t;$/;"	t	namespace:zmq
poller_t	./zeromq/src/kqueue.hpp	/^    typedef kqueue_t poller_t;$/;"	t	namespace:zmq
poller_t	./zeromq/src/poll.hpp	/^    typedef poll_t poller_t;$/;"	t	namespace:zmq
poller_t	./zeromq/src/select.hpp	/^    typedef select_t poller_t;$/;"	t	namespace:zmq
pollitem_t	./zeromq/include/zmq.hpp	/^    typedef zmq_pollitem_t pollitem_t;$/;"	t	namespace:zmq
pollset	./zeromq/src/poll.hpp	/^        pollset_t pollset;$/;"	m	class:zmq::poll_t
pollset_t	./zeromq/src/poll.hpp	/^        typedef std::vector <pollfd> pollset_t;$/;"	t	class:zmq::poll_t
pop	./zeromq/src/yqueue.hpp	/^        inline void pop ()$/;"	f	class:zmq::yqueue_t
pos_type	./zeromq/src/blob.hpp	/^      typedef streampos 	pos_type;$/;"	t	struct:std::char_traits
posix_assert	./zeromq/src/err.hpp	124;"	d
prefetched	./zeromq/src/dealer.hpp	/^        bool prefetched;$/;"	m	class:zmq::dealer_t
prefetched	./zeromq/src/router.hpp	/^        bool prefetched;$/;"	m	class:zmq::router_t
prefetched_id	./zeromq/src/router.hpp	/^        msg_t prefetched_id;$/;"	m	class:zmq::router_t
prefetched_msg	./zeromq/src/dealer.hpp	/^        msg_t prefetched_msg;$/;"	m	class:zmq::dealer_t
prefetched_msg	./zeromq/src/router.hpp	/^        msg_t prefetched_msg;$/;"	m	class:zmq::router_t
prefix	./zeromq/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	./zeromq/builds/msvc/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	./zeromq/doc/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	./zeromq/foreign/openpgm/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	./zeromq/perf/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	./zeromq/src/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	./zeromq/tests/Makefile	/^prefix = \/usr\/local$/;"	m
prev	./zeromq/src/yqueue.hpp	/^             chunk_t *prev;$/;"	m	struct:zmq::yqueue_t::chunk_t
probe	./zeromq/src/ypipe.hpp	/^        inline bool probe (bool (*fn)(T &))$/;"	f	class:zmq::ypipe_t
proceed_with_term	./zeromq/src/session_base.cpp	/^void zmq::session_base_t::proceed_with_term ()$/;"	f	class:zmq::session_base_t
process_activate_read	./zeromq/src/object.cpp	/^void zmq::object_t::process_activate_read ()$/;"	f	class:zmq::object_t
process_activate_read	./zeromq/src/pipe.cpp	/^void zmq::pipe_t::process_activate_read ()$/;"	f	class:zmq::pipe_t
process_activate_write	./zeromq/src/object.cpp	/^void zmq::object_t::process_activate_write (uint64_t)$/;"	f	class:zmq::object_t
process_activate_write	./zeromq/src/pipe.cpp	/^void zmq::pipe_t::process_activate_write (uint64_t msgs_read_)$/;"	f	class:zmq::pipe_t
process_attach	./zeromq/src/object.cpp	/^void zmq::object_t::process_attach (i_engine *)$/;"	f	class:zmq::object_t
process_attach	./zeromq/src/session_base.cpp	/^void zmq::session_base_t::process_attach (i_engine *engine_)$/;"	f	class:zmq::session_base_t
process_bind	./zeromq/src/object.cpp	/^void zmq::object_t::process_bind (pipe_t *)$/;"	f	class:zmq::object_t
process_bind	./zeromq/src/socket_base.cpp	/^void zmq::socket_base_t::process_bind (pipe_t *pipe_)$/;"	f	class:zmq::socket_base_t
process_buffer	./zeromq/src/decoder.hpp	/^        inline size_t process_buffer (unsigned char *data_, size_t size_)$/;"	f	class:zmq::decoder_base_t
process_command	./zeromq/src/object.cpp	/^void zmq::object_t::process_command (command_t &cmd_)$/;"	f	class:zmq::object_t
process_commands	./zeromq/src/socket_base.cpp	/^int zmq::socket_base_t::process_commands (int timeout_, bool throttle_)$/;"	f	class:zmq::socket_base_t
process_destroy	./zeromq/src/own.cpp	/^void zmq::own_t::process_destroy ()$/;"	f	class:zmq::own_t
process_destroy	./zeromq/src/socket_base.cpp	/^void zmq::socket_base_t::process_destroy ()$/;"	f	class:zmq::socket_base_t
process_hiccup	./zeromq/src/object.cpp	/^void zmq::object_t::process_hiccup (void *)$/;"	f	class:zmq::object_t
process_hiccup	./zeromq/src/pipe.cpp	/^void zmq::pipe_t::process_hiccup (void *pipe_)$/;"	f	class:zmq::pipe_t
process_own	./zeromq/src/object.cpp	/^void zmq::object_t::process_own (own_t *)$/;"	f	class:zmq::object_t
process_own	./zeromq/src/own.cpp	/^void zmq::own_t::process_own (own_t *object_)$/;"	f	class:zmq::own_t
process_pipe_term	./zeromq/src/object.cpp	/^void zmq::object_t::process_pipe_term ()$/;"	f	class:zmq::object_t
process_pipe_term	./zeromq/src/pipe.cpp	/^void zmq::pipe_t::process_pipe_term ()$/;"	f	class:zmq::pipe_t
process_pipe_term_ack	./zeromq/src/object.cpp	/^void zmq::object_t::process_pipe_term_ack ()$/;"	f	class:zmq::object_t
process_pipe_term_ack	./zeromq/src/pipe.cpp	/^void zmq::pipe_t::process_pipe_term_ack ()$/;"	f	class:zmq::pipe_t
process_plug	./zeromq/src/ipc_connecter.cpp	/^void zmq::ipc_connecter_t::process_plug ()$/;"	f	class:zmq::ipc_connecter_t
process_plug	./zeromq/src/ipc_listener.cpp	/^void zmq::ipc_listener_t::process_plug ()$/;"	f	class:zmq::ipc_listener_t
process_plug	./zeromq/src/object.cpp	/^void zmq::object_t::process_plug ()$/;"	f	class:zmq::object_t
process_plug	./zeromq/src/session_base.cpp	/^void zmq::session_base_t::process_plug ()$/;"	f	class:zmq::session_base_t
process_plug	./zeromq/src/tcp_connecter.cpp	/^void zmq::tcp_connecter_t::process_plug ()$/;"	f	class:zmq::tcp_connecter_t
process_plug	./zeromq/src/tcp_listener.cpp	/^void zmq::tcp_listener_t::process_plug ()$/;"	f	class:zmq::tcp_listener_t
process_reap	./zeromq/src/object.cpp	/^void zmq::object_t::process_reap (class socket_base_t *)$/;"	f	class:zmq::object_t
process_reap	./zeromq/src/reaper.cpp	/^void zmq::reaper_t::process_reap (socket_base_t *socket_)$/;"	f	class:zmq::reaper_t
process_reaped	./zeromq/src/object.cpp	/^void zmq::object_t::process_reaped ()$/;"	f	class:zmq::object_t
process_reaped	./zeromq/src/reaper.cpp	/^void zmq::reaper_t::process_reaped ()$/;"	f	class:zmq::reaper_t
process_seqnum	./zeromq/src/object.cpp	/^void zmq::object_t::process_seqnum ()$/;"	f	class:zmq::object_t
process_seqnum	./zeromq/src/own.cpp	/^void zmq::own_t::process_seqnum ()$/;"	f	class:zmq::own_t
process_stop	./zeromq/src/io_thread.cpp	/^void zmq::io_thread_t::process_stop ()$/;"	f	class:zmq::io_thread_t
process_stop	./zeromq/src/object.cpp	/^void zmq::object_t::process_stop ()$/;"	f	class:zmq::object_t
process_stop	./zeromq/src/reaper.cpp	/^void zmq::reaper_t::process_stop ()$/;"	f	class:zmq::reaper_t
process_stop	./zeromq/src/socket_base.cpp	/^void zmq::socket_base_t::process_stop ()$/;"	f	class:zmq::socket_base_t
process_term	./zeromq/src/ipc_connecter.cpp	/^void zmq::ipc_connecter_t::process_term (int linger_)$/;"	f	class:zmq::ipc_connecter_t
process_term	./zeromq/src/ipc_listener.cpp	/^void zmq::ipc_listener_t::process_term (int linger_)$/;"	f	class:zmq::ipc_listener_t
process_term	./zeromq/src/object.cpp	/^void zmq::object_t::process_term (int)$/;"	f	class:zmq::object_t
process_term	./zeromq/src/own.cpp	/^void zmq::own_t::process_term (int linger_)$/;"	f	class:zmq::own_t
process_term	./zeromq/src/session_base.cpp	/^void zmq::session_base_t::process_term (int linger_)$/;"	f	class:zmq::session_base_t
process_term	./zeromq/src/socket_base.cpp	/^void zmq::socket_base_t::process_term (int linger_)$/;"	f	class:zmq::socket_base_t
process_term	./zeromq/src/tcp_connecter.cpp	/^void zmq::tcp_connecter_t::process_term (int linger_)$/;"	f	class:zmq::tcp_connecter_t
process_term	./zeromq/src/tcp_listener.cpp	/^void zmq::tcp_listener_t::process_term (int linger_)$/;"	f	class:zmq::tcp_listener_t
process_term_ack	./zeromq/src/object.cpp	/^void zmq::object_t::process_term_ack ()$/;"	f	class:zmq::object_t
process_term_ack	./zeromq/src/own.cpp	/^void zmq::own_t::process_term_ack ()$/;"	f	class:zmq::own_t
process_term_req	./zeromq/src/object.cpp	/^void zmq::object_t::process_term_req (own_t *)$/;"	f	class:zmq::object_t
process_term_req	./zeromq/src/own.cpp	/^void zmq::own_t::process_term_req (own_t *object_)$/;"	f	class:zmq::own_t
process_upstream	./zeromq/src/pgm_socket.cpp	/^void zmq::pgm_socket_t::process_upstream ()$/;"	f	class:zmq::pgm_socket_t
processed_seqnum	./zeromq/src/own.hpp	/^        uint64_t processed_seqnum;$/;"	m	class:zmq::own_t
program_transform_name	./zeromq/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	./zeromq/builds/msvc/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	./zeromq/doc/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	./zeromq/foreign/openpgm/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	./zeromq/perf/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	./zeromq/src/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	./zeromq/tests/Makefile	/^program_transform_name = s,x,x,$/;"	m
protocol	./zeromq/src/address.hpp	/^        const std::string protocol;$/;"	m	struct:zmq::address_t
prototypes	./configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
prototypes	./zeromq/configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
proxy	./zeromq/src/proxy.cpp	/^int zmq::proxy ($/;"	f	class:zmq
psdir	./zeromq/Makefile	/^psdir = ${docdir}$/;"	m
psdir	./zeromq/builds/msvc/Makefile	/^psdir = ${docdir}$/;"	m
psdir	./zeromq/doc/Makefile	/^psdir = ${docdir}$/;"	m
psdir	./zeromq/foreign/openpgm/Makefile	/^psdir = ${docdir}$/;"	m
psdir	./zeromq/perf/Makefile	/^psdir = ${docdir}$/;"	m
psdir	./zeromq/src/Makefile	/^psdir = ${docdir}$/;"	m
psdir	./zeromq/tests/Makefile	/^psdir = ${docdir}$/;"	m
ptr	./zeromq/include/zmq.hpp	/^        void *ptr;$/;"	m	class:zmq::context_t
ptr	./zeromq/include/zmq.hpp	/^        void *ptr;$/;"	m	class:zmq::socket_t
ptr	./zeromq/src/atomic_ptr.hpp	/^        volatile T *ptr;$/;"	m	class:zmq::atomic_ptr_t
pub_session_t	./zeromq/src/pub.cpp	/^zmq::pub_session_t::pub_session_t (io_thread_t *io_thread_, bool connect_,$/;"	f	class:zmq::pub_session_t
pub_session_t	./zeromq/src/pub.hpp	/^    class pub_session_t : public xpub_session_t$/;"	c	namespace:zmq
pub_t	./zeromq/src/pub.cpp	/^zmq::pub_t::pub_t (class ctx_t *parent_, uint32_t tid_, int sid_) :$/;"	f	class:zmq::pub_t
pub_t	./zeromq/src/pub.hpp	/^    class pub_t : public xpub_t$/;"	c	namespace:zmq
pull_msg	./zeromq/src/session_base.cpp	/^int zmq::session_base_t::pull_msg (msg_t *msg_)$/;"	f	class:zmq::session_base_t
pull_session_t	./zeromq/src/pull.cpp	/^zmq::pull_session_t::pull_session_t (io_thread_t *io_thread_, bool connect_,$/;"	f	class:zmq::pull_session_t
pull_session_t	./zeromq/src/pull.hpp	/^    class pull_session_t : public session_base_t$/;"	c	namespace:zmq
pull_t	./zeromq/src/pull.cpp	/^zmq::pull_t::pull_t (class ctx_t *parent_, uint32_t tid_, int sid_) :$/;"	f	class:zmq::pull_t
pull_t	./zeromq/src/pull.hpp	/^    class pull_t :$/;"	c	namespace:zmq
push	./zeromq/src/yqueue.hpp	/^        inline void push ()$/;"	f	class:zmq::yqueue_t
push_back	./zeromq/src/array.hpp	/^        inline void push_back (T *item_)$/;"	f	class:zmq::array_t
push_msg	./zeromq/src/req.cpp	/^int zmq::req_session_t::push_msg (msg_t *msg_)$/;"	f	class:zmq::req_session_t
push_msg	./zeromq/src/session_base.cpp	/^int zmq::session_base_t::push_msg (msg_t *msg_)$/;"	f	class:zmq::session_base_t
push_msg	./zeromq/src/stream_engine.cpp	/^int zmq::stream_engine_t::push_msg (msg_t *msg_)$/;"	f	class:zmq::stream_engine_t
push_session_t	./zeromq/src/push.cpp	/^zmq::push_session_t::push_session_t (io_thread_t *io_thread_, bool connect_,$/;"	f	class:zmq::push_session_t
push_session_t	./zeromq/src/push.hpp	/^    class push_session_t : public session_base_t$/;"	c	namespace:zmq
push_t	./zeromq/src/push.cpp	/^zmq::push_t::push_t (class ctx_t *parent_, uint32_t tid_, int sid_) :$/;"	f	class:zmq::push_t
push_t	./zeromq/src/push.hpp	/^    class push_t :$/;"	c	namespace:zmq
put_uint16	./zeromq/src/wire.hpp	/^    inline void put_uint16 (unsigned char *buffer_, uint16_t value)$/;"	f	namespace:zmq
put_uint32	./zeromq/src/wire.hpp	/^    inline void put_uint32 (unsigned char *buffer_, uint32_t value)$/;"	f	namespace:zmq
put_uint64	./zeromq/src/wire.hpp	/^    inline void put_uint64 (unsigned char *buffer_, uint64_t value)$/;"	f	namespace:zmq
put_uint8	./zeromq/src/wire.hpp	/^    inline void put_uint8 (unsigned char *buffer_, uint8_t value)$/;"	f	namespace:zmq
qnxnto	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
queue	./zeromq/src/ypipe.hpp	/^        yqueue_t <T, N> queue;$/;"	m	class:zmq::ypipe_t
r	./zeromq/src/signaler.hpp	/^        fd_t r;$/;"	m	class:zmq::signaler_t
r	./zeromq/src/ypipe.hpp	/^        T *r;$/;"	m	class:zmq::ypipe_t
rate	./zeromq/src/options.hpp	/^        int rate;$/;"	m	struct:zmq::options_t
rcvbuf	./zeromq/src/options.hpp	/^        int rcvbuf;$/;"	m	struct:zmq::options_t
rcvhwm	./zeromq/src/options.hpp	/^        int rcvhwm;$/;"	m	struct:zmq::options_t
rcvmore	./zeromq/src/socket_base.hpp	/^        bool rcvmore;$/;"	m	class:zmq::socket_base_t
rcvtimeo	./zeromq/src/options.hpp	/^        int rcvtimeo;$/;"	m	struct:zmq::options_t
rdata_notify_handle	./zeromq/src/pgm_sender.hpp	/^        handle_t rdata_notify_handle;$/;"	m	class:zmq::pgm_sender_t
rdtsc	./zeromq/src/clock.cpp	/^uint64_t zmq::clock_t::rdtsc ()$/;"	f	class:zmq::clock_t
reactor	./zeromq/src/devpoll.hpp	/^            zmq::i_poll_events *reactor;$/;"	m	struct:zmq::devpoll_t::fd_entry_t
reactor	./zeromq/src/kqueue.hpp	/^            zmq::i_poll_events *reactor;$/;"	m	struct:zmq::kqueue_t::poll_entry_t
read	./include/yampl/utils/RawPipe.h	/^inline size_t RawPipe::read(void *buffer, size_t size){$/;"	f	class:yampl::RawPipe
read	./zeromq/src/pipe.cpp	/^bool zmq::pipe_t::read (msg_t *msg_)$/;"	f	class:zmq::pipe_t
read	./zeromq/src/stream_engine.cpp	/^int zmq::stream_engine_t::read (void *data_, size_t size_)$/;"	f	class:zmq::stream_engine_t
read	./zeromq/src/ypipe.hpp	/^        inline bool read (T *value_)$/;"	f	class:zmq::ypipe_t
readFrom	./include/yampl/utils/UUID.h	/^inline UUID UUID::readFrom(RawPipe &pipe){$/;"	f	class:yampl::UUID
read_activated	./zeromq/src/session_base.cpp	/^void zmq::session_base_t::read_activated (pipe_t *pipe_)$/;"	f	class:zmq::session_base_t
read_activated	./zeromq/src/socket_base.cpp	/^void zmq::socket_base_t::read_activated (pipe_t *pipe_)$/;"	f	class:zmq::socket_base_t
read_pos	./zeromq/src/decoder.hpp	/^        unsigned char *read_pos;$/;"	m	class:zmq::decoder_base_t
readfd	./include/yampl/utils/RawPipe.h	/^    int readfd;$/;"	m	class:yampl::RawPipe
readfds	./zeromq/src/select.hpp	/^        fd_set readfds;$/;"	m	class:zmq::select_t
reap	./zeromq/src/command.hpp	/^            reap,$/;"	e	enum:zmq::command_t::type_t
reap	./zeromq/src/command.hpp	/^            } reap;$/;"	m	union:zmq::command_t::__anon20	typeref:struct:zmq::command_t::__anon20::__anon34
reaped	./zeromq/src/command.hpp	/^            reaped,$/;"	e	enum:zmq::command_t::type_t
reaped	./zeromq/src/command.hpp	/^            } reaped;$/;"	m	union:zmq::command_t::__anon20	typeref:struct:zmq::command_t::__anon20::__anon35
reaper	./zeromq/src/ctx.hpp	/^        zmq::reaper_t *reaper;$/;"	m	class:zmq::ctx_t
reaper_t	./zeromq/src/reaper.cpp	/^zmq::reaper_t::reaper_t (class ctx_t *ctx_, uint32_t tid_) :$/;"	f	class:zmq::reaper_t
reaper_t	./zeromq/src/reaper.hpp	/^    class reaper_t : public object_t, public i_poll_events$/;"	c	namespace:zmq
reaper_tid	./zeromq/src/ctx.hpp	/^            reaper_tid = 1$/;"	e	enum:zmq::ctx_t::__anon6
rebuild	./zeromq/include/zmq.hpp	/^        inline void rebuild ()$/;"	f	class:zmq::message_t
rebuild	./zeromq/include/zmq.hpp	/^        inline void rebuild (size_t size_)$/;"	f	class:zmq::message_t
rebuild	./zeromq/include/zmq.hpp	/^        inline void rebuild (void *data_, size_t size_, free_fn *ffn_,$/;"	f	class:zmq::message_t
receive	./zeromq/src/pgm_socket.cpp	/^ssize_t zmq::pgm_socket_t::receive (void **raw_data_, const pgm_tsi_t **tsi_)$/;"	f	class:zmq::pgm_socket_t
receiver	./zeromq/src/pgm_socket.hpp	/^        bool receiver;$/;"	m	class:zmq::pgm_socket_t
receiving_reply	./zeromq/src/req.hpp	/^        bool receiving_reply;$/;"	m	class:zmq::req_t
reconnect_ivl	./zeromq/src/options.hpp	/^        int reconnect_ivl;$/;"	m	struct:zmq::options_t
reconnect_ivl_max	./zeromq/src/options.hpp	/^        int reconnect_ivl_max;$/;"	m	struct:zmq::options_t
reconnect_timer_id	./zeromq/src/ipc_connecter.hpp	/^        enum {reconnect_timer_id = 1};$/;"	e	enum:zmq::ipc_connecter_t::__anon8
reconnect_timer_id	./zeromq/src/tcp_connecter.hpp	/^        enum {reconnect_timer_id = 1};$/;"	e	enum:zmq::tcp_connecter_t::__anon38
recovery_ivl	./zeromq/src/options.hpp	/^        int recovery_ivl;$/;"	m	struct:zmq::options_t
recv	./include/yampl/ISocket.h	/^inline ssize_t ISocket::recv(void *&buffer, size_t size, std::string &peerId){$/;"	f	class:yampl::ISocket
recv	./include/yampl/ISocket.h	/^inline ssize_t ISocket::recv(void *&buffer, std::string &peerId){$/;"	f	class:yampl::ISocket
recv	./include/yampl/generic/ClientSocket.h	/^inline ssize_t ClientSocket<T>::recv(RecvArgs &args){$/;"	f	class:yampl::ClientSocket
recv	./include/yampl/generic/ServiceSocketBase.h	/^inline ssize_t ServiceSocketBase<P, C>::recv(RecvArgs &args){$/;"	f	class:yampl::ServiceSocketBase
recv	./include/yampl/pipe/ConsumerSocket.h	/^inline ssize_t ConsumerSocket::recv(RecvArgs &args){$/;"	f	class:yampl::pipe::ConsumerSocket
recv	./include/yampl/pipe/ProducerSocket.h	/^inline ssize_t ProducerSocket::recv(RecvArgs &args){$/;"	f	class:yampl::pipe::ProducerSocket
recv	./include/yampl/pipe/ServerSocket.h	/^inline ssize_t ServerSocket::recv(RecvArgs &args){$/;"	f	class:yampl::pipe::ServerSocket
recv	./include/yampl/shm/ConsumerSocket.h	/^    virtual ssize_t recv(RecvArgs &args){$/;"	f	class:yampl::shm::ConsumerSocket
recv	./include/yampl/shm/ProducerSocket.h	/^inline ssize_t ProducerSocket::recv(RecvArgs &args){$/;"	f	class:yampl::shm::ProducerSocket
recv	./src/pipe/PipeSocketBase.cpp	/^ssize_t PipeSocketBase::recv(RecvArgs &args){$/;"	f	class:yampl::pipe::PipeSocketBase
recv	./src/shm/SHMSocketBase.cpp	/^ssize_t PipeSocketBase::recv(RecvArgs &args){$/;"	f	class:yampl::shm::PipeSocketBase
recv	./src/shm/ServerSocket.cpp	/^ssize_t ServerSocket::recv(RecvArgs &args){$/;"	f	class:yampl::shm::ServerSocket
recv	./src/zeromq/ClientSocket.cpp	/^ssize_t ClientSocket::recv(RecvArgs& args){$/;"	f	class:yampl::zeromq::ClientSocket
recv	./src/zeromq/ServerSocket.cpp	/^ssize_t ServerSocket::recv(RecvArgs& args){$/;"	f	class:yampl::zeromq::ServerSocket
recv	./zeromq/include/zmq.hpp	/^        inline bool recv (message_t *msg_, int flags_ = 0)$/;"	f	class:zmq::socket_t
recv	./zeromq/include/zmq.hpp	/^        inline size_t recv (void *buf_, size_t len_, int flags_ = 0)$/;"	f	class:zmq::socket_t
recv	./zeromq/src/fq.cpp	/^int zmq::fq_t::recv (msg_t *msg_)$/;"	f	class:zmq::fq_t
recv	./zeromq/src/mailbox.cpp	/^int zmq::mailbox_t::recv (command_t *cmd_, int timeout_)$/;"	f	class:zmq::mailbox_t
recv	./zeromq/src/signaler.cpp	/^void zmq::signaler_t::recv ()$/;"	f	class:zmq::signaler_t
recv	./zeromq/src/socket_base.cpp	/^int zmq::socket_base_t::recv (msg_t *msg_, int flags_)$/;"	f	class:zmq::socket_base_t
recv_identity	./zeromq/src/options.hpp	/^        bool recv_identity;$/;"	m	struct:zmq::options_t
recvpipe	./zeromq/src/fq.cpp	/^int zmq::fq_t::recvpipe (msg_t *msg_, pipe_t **pipe_)$/;"	f	class:zmq::fq_t
refcnt	./zeromq/src/msg.hpp	/^            zmq::atomic_counter_t refcnt;$/;"	m	struct:zmq::msg_t::content_t
refcnt	./zeromq/src/trie.hpp	/^        uint32_t refcnt;$/;"	m	class:zmq::trie_t
register_endpoint	./zeromq/src/ctx.cpp	/^int zmq::ctx_t::register_endpoint (const char *addr_, endpoint_t &endpoint_)$/;"	f	class:zmq::ctx_t
register_endpoint	./zeromq/src/object.cpp	/^int zmq::object_t::register_endpoint (const char *addr_, endpoint_t &endpoint_)$/;"	f	class:zmq::object_t
register_term_acks	./zeromq/src/own.cpp	/^void zmq::own_t::register_term_acks (int count_)$/;"	f	class:zmq::own_t
reinstall	./zeromq/doc/zmq.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_bind.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_close.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_connect.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_ctx_destroy.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_ctx_get.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_ctx_new.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_ctx_set.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_epgm.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_errno.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_getsockopt.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_init.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_inproc.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_ipc.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_msg_close.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_msg_copy.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_msg_data.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_msg_get.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_msg_init.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_msg_init_data.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_msg_init_size.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_msg_more.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_msg_move.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_msg_recv.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_msg_send.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_msg_set.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_msg_size.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_pgm.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_poll.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_proxy.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_recv.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_recvmsg.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_send.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_sendmsg.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_setsockopt.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_socket.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_socket_monitor.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_strerror.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_tcp.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_term.html	/^  function reinstall() {$/;"	f
reinstall	./zeromq/doc/zmq_version.html	/^  function reinstall() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_bind.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_close.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_connect.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_ctx_destroy.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_ctx_get.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_ctx_new.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_ctx_set.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_epgm.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_errno.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_getsockopt.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_init.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_inproc.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_ipc.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_msg_close.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_msg_copy.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_msg_data.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_msg_get.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_msg_init.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_msg_init_data.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_msg_init_size.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_msg_more.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_msg_move.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_msg_recv.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_msg_send.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_msg_set.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_msg_size.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_pgm.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_poll.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_proxy.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_recv.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_recvmsg.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_send.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_sendmsg.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_setsockopt.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_socket.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_socket_monitor.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_strerror.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_tcp.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_term.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reinstallAndRemoveTimer	./zeromq/doc/zmq_version.html	/^  function reinstallAndRemoveTimer() {$/;"	f
remote_lat_DEPENDENCIES	./zeromq/perf/Makefile	/^remote_lat_DEPENDENCIES = $(top_builddir)\/src\/libzmq.la$/;"	m
remote_lat_LDADD	./zeromq/perf/Makefile	/^remote_lat_LDADD = $(top_builddir)\/src\/libzmq.la$/;"	m
remote_lat_OBJECTS	./zeromq/perf/Makefile	/^remote_lat_OBJECTS = $(am_remote_lat_OBJECTS)$/;"	m
remote_lat_SOURCES	./zeromq/perf/Makefile	/^remote_lat_SOURCES = remote_lat.cpp$/;"	m
remote_thr_DEPENDENCIES	./zeromq/perf/Makefile	/^remote_thr_DEPENDENCIES = $(top_builddir)\/src\/libzmq.la$/;"	m
remote_thr_LDADD	./zeromq/perf/Makefile	/^remote_thr_LDADD = $(top_builddir)\/src\/libzmq.la$/;"	m
remote_thr_OBJECTS	./zeromq/perf/Makefile	/^remote_thr_OBJECTS = $(am_remote_thr_OBJECTS)$/;"	m
remote_thr_SOURCES	./zeromq/perf/Makefile	/^remote_thr_SOURCES = remote_thr.cpp$/;"	m
rep_session_t	./zeromq/src/rep.cpp	/^zmq::rep_session_t::rep_session_t (io_thread_t *io_thread_, bool connect_,$/;"	f	class:zmq::rep_session_t
rep_session_t	./zeromq/src/rep.hpp	/^    class rep_session_t : public router_session_t$/;"	c	namespace:zmq
rep_socket_events	./zeromq/tests/test_monitor.cpp	/^static int rep_socket_events;$/;"	v	file:
rep_socket_monitor	./zeromq/tests/test_monitor.cpp	/^    static void *rep_socket_monitor (void *ctx)$/;"	f	file:
rep_t	./zeromq/src/rep.cpp	/^zmq::rep_t::rep_t (class ctx_t *parent_, uint32_t tid_, int sid_) :$/;"	f	class:zmq::rep_t
rep_t	./zeromq/src/rep.hpp	/^    class rep_t : public router_t$/;"	c	namespace:zmq
req2_socket_events	./zeromq/tests/test_monitor.cpp	/^static int req2_socket_events;$/;"	v	file:
req2_socket_monitor	./zeromq/tests/test_monitor.cpp	/^    static void *req2_socket_monitor (void *ctx)$/;"	f	file:
req_session_t	./zeromq/src/req.cpp	/^zmq::req_session_t::req_session_t (io_thread_t *io_thread_, bool connect_,$/;"	f	class:zmq::req_session_t
req_session_t	./zeromq/src/req.hpp	/^    class req_session_t : public dealer_session_t$/;"	c	namespace:zmq
req_socket_events	./zeromq/tests/test_monitor.cpp	/^static int req_socket_events;$/;"	v	file:
req_socket_monitor	./zeromq/tests/test_monitor.cpp	/^    static void *req_socket_monitor (void *ctx)$/;"	f	file:
req_t	./zeromq/src/req.cpp	/^zmq::req_t::req_t (class ctx_t *parent_, uint32_t tid_, int sid_) :$/;"	f	class:zmq::req_t
req_t	./zeromq/src/req.hpp	/^    class req_t : public dealer_t$/;"	c	namespace:zmq
request_begins	./zeromq/src/rep.hpp	/^        bool request_begins;$/;"	m	class:zmq::rep_t
reset	./zeromq/src/req.cpp	/^void zmq::req_session_t::reset ()$/;"	f	class:zmq::req_session_t
reset	./zeromq/src/session_base.cpp	/^void zmq::session_base_t::reset ()$/;"	f	class:zmq::session_base_t
reset_flags	./zeromq/src/msg.cpp	/^void zmq::msg_t::reset_flags (unsigned char flags_)$/;"	f	class:zmq::msg_t
reset_pollin	./zeromq/src/devpoll.cpp	/^void zmq::devpoll_t::reset_pollin (handle_t handle_)$/;"	f	class:zmq::devpoll_t
reset_pollin	./zeromq/src/epoll.cpp	/^void zmq::epoll_t::reset_pollin (handle_t handle_)$/;"	f	class:zmq::epoll_t
reset_pollin	./zeromq/src/io_object.cpp	/^void zmq::io_object_t::reset_pollin (handle_t handle_)$/;"	f	class:zmq::io_object_t
reset_pollin	./zeromq/src/kqueue.cpp	/^void zmq::kqueue_t::reset_pollin (handle_t handle_)$/;"	f	class:zmq::kqueue_t
reset_pollin	./zeromq/src/poll.cpp	/^void zmq::poll_t::reset_pollin (handle_t handle_)$/;"	f	class:zmq::poll_t
reset_pollin	./zeromq/src/select.cpp	/^void zmq::select_t::reset_pollin (handle_t handle_)$/;"	f	class:zmq::select_t
reset_pollout	./zeromq/src/devpoll.cpp	/^void zmq::devpoll_t::reset_pollout (handle_t handle_)$/;"	f	class:zmq::devpoll_t
reset_pollout	./zeromq/src/epoll.cpp	/^void zmq::epoll_t::reset_pollout (handle_t handle_)$/;"	f	class:zmq::epoll_t
reset_pollout	./zeromq/src/io_object.cpp	/^void zmq::io_object_t::reset_pollout (handle_t handle_)$/;"	f	class:zmq::io_object_t
reset_pollout	./zeromq/src/kqueue.cpp	/^void zmq::kqueue_t::reset_pollout (handle_t handle_)$/;"	f	class:zmq::kqueue_t
reset_pollout	./zeromq/src/poll.cpp	/^void zmq::poll_t::reset_pollout (handle_t handle_)$/;"	f	class:zmq::poll_t
reset_pollout	./zeromq/src/select.cpp	/^void zmq::select_t::reset_pollout (handle_t handle_)$/;"	f	class:zmq::select_t
resolve	./zeromq/src/ipc_address.cpp	/^int zmq::ipc_address_t::resolve (const char *path_)$/;"	f	class:zmq::ipc_address_t
resolve	./zeromq/src/tcp_address.cpp	/^int zmq::tcp_address_mask_t::resolve (const char *name_, bool ipv4only_)$/;"	f	class:zmq::tcp_address_mask_t
resolve	./zeromq/src/tcp_address.cpp	/^int zmq::tcp_address_t::resolve (const char *name_, bool local_, bool ipv4only_)$/;"	f	class:zmq::tcp_address_t
resolve_hostname	./zeromq/src/tcp_address.cpp	/^int zmq::tcp_address_t::resolve_hostname (const char *hostname_, bool ipv4only_)$/;"	f	class:zmq::tcp_address_t
resolve_interface	./zeromq/src/tcp_address.cpp	/^int zmq::tcp_address_t::resolve_interface (const char *interface_,$/;"	f	class:zmq::tcp_address_t
resolve_nic_name	./zeromq/src/tcp_address.cpp	/^int zmq::tcp_address_t::resolve_nic_name (const char *nic_, bool ipv4only_)$/;"	f	class:zmq::tcp_address_t
resolved	./zeromq/src/address.hpp	/^        } resolved;$/;"	m	struct:zmq::address_t	typeref:union:zmq::address_t::__anon3
retired	./zeromq/src/epoll.hpp	/^        retired_t retired;$/;"	m	class:zmq::epoll_t
retired	./zeromq/src/kqueue.hpp	/^        retired_t retired;$/;"	m	class:zmq::kqueue_t
retired	./zeromq/src/poll.hpp	/^        bool retired;$/;"	m	class:zmq::poll_t
retired	./zeromq/src/select.hpp	/^        bool retired;$/;"	m	class:zmq::select_t
retired_fd	./zeromq/src/fd.hpp	/^    enum {retired_fd = (fd_t)(~0)};$/;"	e	enum:zmq::__anon1
retired_t	./zeromq/src/epoll.hpp	/^        typedef std::vector <poll_entry_t*> retired_t;$/;"	t	class:zmq::epoll_t
retired_t	./zeromq/src/kqueue.hpp	/^        typedef std::vector <poll_entry_t*> retired_t;$/;"	t	class:zmq::kqueue_t
revents	./zeromq/include/zmq.h	/^    short revents;$/;"	m	struct:__anon52
rm	./zeromq/src/mtrie.cpp	/^bool zmq::mtrie_t::rm (unsigned char *prefix_, size_t size_, pipe_t *pipe_)$/;"	f	class:zmq::mtrie_t
rm	./zeromq/src/mtrie.cpp	/^void zmq::mtrie_t::rm (pipe_t *pipe_,$/;"	f	class:zmq::mtrie_t
rm	./zeromq/src/trie.cpp	/^bool zmq::trie_t::rm (unsigned char *prefix_, size_t size_)$/;"	f	class:zmq::trie_t
rm_fd	./zeromq/src/devpoll.cpp	/^void zmq::devpoll_t::rm_fd (handle_t handle_)$/;"	f	class:zmq::devpoll_t
rm_fd	./zeromq/src/epoll.cpp	/^void zmq::epoll_t::rm_fd (handle_t handle_)$/;"	f	class:zmq::epoll_t
rm_fd	./zeromq/src/io_object.cpp	/^void zmq::io_object_t::rm_fd (handle_t handle_)$/;"	f	class:zmq::io_object_t
rm_fd	./zeromq/src/kqueue.cpp	/^void zmq::kqueue_t::rm_fd (handle_t handle_)$/;"	f	class:zmq::kqueue_t
rm_fd	./zeromq/src/poll.cpp	/^void zmq::poll_t::rm_fd (handle_t handle_)$/;"	f	class:zmq::poll_t
rm_fd	./zeromq/src/select.cpp	/^void zmq::select_t::rm_fd (handle_t handle_)$/;"	f	class:zmq::select_t
rm_helper	./zeromq/src/mtrie.cpp	/^bool zmq::mtrie_t::rm_helper (unsigned char *prefix_, size_t size_,$/;"	f	class:zmq::mtrie_t
rm_helper	./zeromq/src/mtrie.cpp	/^void zmq::mtrie_t::rm_helper (pipe_t *pipe_, unsigned char **buff_,$/;"	f	class:zmq::mtrie_t
rm_refs	./zeromq/src/msg.cpp	/^bool zmq::msg_t::rm_refs (int refs_)$/;"	f	class:zmq::msg_t
rollback	./zeromq/src/pipe.cpp	/^void zmq::pipe_t::rollback ()$/;"	f	class:zmq::pipe_t
rollback	./zeromq/src/router.cpp	/^int zmq::router_t::rollback (void)$/;"	f	class:zmq::router_t
roundtrip_count	./zeromq/perf/inproc_lat.cpp	/^static int roundtrip_count;$/;"	v	file:
router_session_t	./zeromq/src/router.cpp	/^zmq::router_session_t::router_session_t (io_thread_t *io_thread_, bool connect_,$/;"	f	class:zmq::router_session_t
router_session_t	./zeromq/src/router.hpp	/^    class router_session_t : public session_base_t$/;"	c	namespace:zmq
router_t	./zeromq/src/router.cpp	/^zmq::router_t::router_t (class ctx_t *parent_, uint32_t tid_, int sid_) :$/;"	f	class:zmq::router_t
router_t	./zeromq/src/router.hpp	/^    class router_t :$/;"	c	namespace:zmq
rx_timer_id	./zeromq/src/pgm_receiver.hpp	/^        enum {rx_timer_id = 0xa1};$/;"	e	enum:zmq::pgm_receiver_t::__anon10
rx_timer_id	./zeromq/src/pgm_sender.hpp	/^        enum {tx_timer_id = 0xa0, rx_timer_id = 0xa1};$/;"	e	enum:zmq::pgm_sender_t::__anon39
s	./zeromq/src/ipc_connecter.hpp	/^        fd_t s;$/;"	m	class:zmq::ipc_connecter_t
s	./zeromq/src/ipc_listener.hpp	/^        fd_t s;$/;"	m	class:zmq::ipc_listener_t
s	./zeromq/src/stream_engine.hpp	/^        fd_t s;$/;"	m	class:zmq::stream_engine_t
s	./zeromq/src/tcp_connecter.hpp	/^        fd_t s;$/;"	m	class:zmq::tcp_connecter_t
s	./zeromq/src/tcp_listener.hpp	/^        fd_t s;$/;"	m	class:zmq::tcp_listener_t
s_maxMsgSize	./include/yampl/Exceptions.h	/^    static const size_t s_maxMsgSize = 100;$/;"	m	class:yampl::ErrnoException
s_recvmsg	./zeromq/src/zmq.cpp	/^s_recvmsg (zmq::socket_base_t *s_, zmq_msg_t *msg_, int flags_)$/;"	f	file:
s_sendmsg	./zeromq/src/zmq.cpp	/^s_sendmsg (zmq::socket_base_t *s_, zmq_msg_t *msg_, int flags_)$/;"	f	file:
s_size	./include/yampl/utils/UUID.h	/^    static const size_t s_size = 37;$/;"	m	class:yampl::UUID
sbindir	./zeromq/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	./zeromq/builds/msvc/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	./zeromq/doc/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	./zeromq/foreign/openpgm/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	./zeromq/perf/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	./zeromq/src/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	./zeromq/tests/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
seconds	./examples/benchmarks/benchmark.cpp	/^static long seconds, useconds;$/;"	v	file:
seed_random	./zeromq/src/random.cpp	/^void zmq::seed_random ()$/;"	f	class:zmq
select_t	./zeromq/src/select.cpp	/^zmq::select_t::select_t () :$/;"	f	class:zmq::select_t
select_t	./zeromq/src/select.hpp	/^    class select_t : public poller_base_t$/;"	c	namespace:zmq
send	./include/yampl/ISocket.h	/^    void send(T *buffer, size_t n, void *hint = 0){$/;"	f	class:yampl::ISocket
send	./include/yampl/ISocket.h	/^inline void ISocket::send(){ \/\/ used for synchronization only$/;"	f	class:yampl::ISocket
send	./include/yampl/ISocket.h	/^inline void ISocket::send(void *buffer, size_t size, void *hint){$/;"	f	class:yampl::ISocket
send	./include/yampl/generic/ClientSocket.h	/^inline void ClientSocket<T>::send(SendArgs &args){$/;"	f	class:yampl::ClientSocket
send	./include/yampl/generic/ServerSocketBase.h	/^void ServerSocketBase<T>::send(SendArgs &args){$/;"	f	class:yampl::ServerSocketBase
send	./include/yampl/generic/ServiceSocketBase.h	/^inline void ServiceSocketBase<P, C>::send(SendArgs &args){$/;"	f	class:yampl::ServiceSocketBase
send	./include/yampl/pipe/ConsumerSocket.h	/^inline void ConsumerSocket::send(SendArgs &args){$/;"	f	class:yampl::pipe::ConsumerSocket
send	./include/yampl/pipe/ProducerSocket.h	/^inline void ProducerSocket::send(SendArgs &args){$/;"	f	class:yampl::pipe::ProducerSocket
send	./include/yampl/shm/ClientSocket.h	/^inline void ClientSocket::send(SendArgs &args){$/;"	f	class:yampl::shm::ClientSocket
send	./include/yampl/shm/ConsumerSocket.h	/^    virtual void send(SendArgs &args){$/;"	f	class:yampl::shm::ConsumerSocket
send	./include/yampl/shm/ProducerSocket.h	/^inline void ProducerSocket::send(SendArgs &args){$/;"	f	class:yampl::shm::ProducerSocket
send	./src/pipe/PipeSocketBase.cpp	/^void PipeSocketBase::send(SendArgs &args){$/;"	f	class:yampl::pipe::PipeSocketBase
send	./src/shm/SHMSocketBase.cpp	/^void PipeSocketBase::send(SendArgs &args){$/;"	f	class:yampl::shm::PipeSocketBase
send	./src/zeromq/ClientSocket.cpp	/^void ClientSocket::send(SendArgs& args){$/;"	f	class:yampl::zeromq::ClientSocket
send	./src/zeromq/ServerSocket.cpp	/^void ServerSocket::send(SendArgs& args){$/;"	f	class:yampl::zeromq::ServerSocket
send	./zeromq/include/zmq.hpp	/^        inline bool send (message_t &msg_, int flags_ = 0)$/;"	f	class:zmq::socket_t
send	./zeromq/include/zmq.hpp	/^        inline size_t send (const void *buf_, size_t len_, int flags_ = 0)$/;"	f	class:zmq::socket_t
send	./zeromq/src/lb.cpp	/^int zmq::lb_t::send (msg_t *msg_, int flags_)$/;"	f	class:zmq::lb_t
send	./zeromq/src/mailbox.cpp	/^void zmq::mailbox_t::send (const command_t &cmd_)$/;"	f	class:zmq::mailbox_t
send	./zeromq/src/pgm_socket.cpp	/^size_t zmq::pgm_socket_t::send (unsigned char *data_, size_t data_len_)$/;"	f	class:zmq::pgm_socket_t
send	./zeromq/src/signaler.cpp	/^void zmq::signaler_t::send ()$/;"	f	class:zmq::signaler_t
send	./zeromq/src/socket_base.cpp	/^int zmq::socket_base_t::send (msg_t *msg_, int flags_)$/;"	f	class:zmq::socket_base_t
sendMessage	./src/zeromq/ServerSocket.cpp	/^void ServerSocket::sendMessage(zmq::message_t &message, const std::string *peerId){$/;"	f	class:yampl::zeromq::ServerSocket
sendTo	./include/yampl/ISocket.h	/^inline void ISocket::sendTo(const std::string& peerId, void *buffer, size_t size, void *hint){$/;"	f	class:yampl::ISocket
send_activate_read	./zeromq/src/object.cpp	/^void zmq::object_t::send_activate_read (pipe_t *destination_)$/;"	f	class:zmq::object_t
send_activate_write	./zeromq/src/object.cpp	/^void zmq::object_t::send_activate_write (pipe_t *destination_,$/;"	f	class:zmq::object_t
send_attach	./zeromq/src/object.cpp	/^void zmq::object_t::send_attach (session_base_t *destination_,$/;"	f	class:zmq::object_t
send_bind	./zeromq/src/object.cpp	/^void zmq::object_t::send_bind (own_t *destination_, pipe_t *pipe_,$/;"	f	class:zmq::object_t
send_command	./zeromq/src/ctx.cpp	/^void zmq::ctx_t::send_command (uint32_t tid_, const command_t &command_)$/;"	f	class:zmq::ctx_t
send_command	./zeromq/src/object.cpp	/^void zmq::object_t::send_command (command_t &cmd_)$/;"	f	class:zmq::object_t
send_done	./zeromq/src/object.cpp	/^void zmq::object_t::send_done ()$/;"	f	class:zmq::object_t
send_hiccup	./zeromq/src/object.cpp	/^void zmq::object_t::send_hiccup (pipe_t *destination_, void *pipe_)$/;"	f	class:zmq::object_t
send_own	./zeromq/src/object.cpp	/^void zmq::object_t::send_own (own_t *destination_, own_t *object_)$/;"	f	class:zmq::object_t
send_pipe_term	./zeromq/src/object.cpp	/^void zmq::object_t::send_pipe_term (pipe_t *destination_)$/;"	f	class:zmq::object_t
send_pipe_term_ack	./zeromq/src/object.cpp	/^void zmq::object_t::send_pipe_term_ack (pipe_t *destination_)$/;"	f	class:zmq::object_t
send_plug	./zeromq/src/object.cpp	/^void zmq::object_t::send_plug (own_t *destination_, bool inc_seqnum_)$/;"	f	class:zmq::object_t
send_reap	./zeromq/src/object.cpp	/^void zmq::object_t::send_reap (class socket_base_t *socket_)$/;"	f	class:zmq::object_t
send_reaped	./zeromq/src/object.cpp	/^void zmq::object_t::send_reaped ()$/;"	f	class:zmq::object_t
send_stop	./zeromq/src/object.cpp	/^void zmq::object_t::send_stop ()$/;"	f	class:zmq::object_t
send_subscription	./zeromq/src/xsub.cpp	/^void zmq::xsub_t::send_subscription (unsigned char *data_, size_t size_,$/;"	f	class:zmq::xsub_t
send_term	./zeromq/src/object.cpp	/^void zmq::object_t::send_term (own_t *destination_, int linger_)$/;"	f	class:zmq::object_t
send_term_ack	./zeromq/src/object.cpp	/^void zmq::object_t::send_term_ack (own_t *destination_)$/;"	f	class:zmq::object_t
send_term_req	./zeromq/src/object.cpp	/^void zmq::object_t::send_term_req (own_t *destination_,$/;"	f	class:zmq::object_t
send_to_all	./zeromq/src/dist.cpp	/^int zmq::dist_t::send_to_all (msg_t *msg_, int flags_)$/;"	f	class:zmq::dist_t
send_to_matching	./zeromq/src/dist.cpp	/^int zmq::dist_t::send_to_matching (msg_t *msg_, int flags_)$/;"	f	class:zmq::dist_t
send_unsubscription	./zeromq/src/xpub.cpp	/^void zmq::xpub_t::send_unsubscription (unsigned char *data_, size_t size_,$/;"	f	class:zmq::xpub_t
sending_reply	./zeromq/src/rep.hpp	/^        bool sending_reply;$/;"	m	class:zmq::rep_t
sent_seqnum	./zeromq/src/own.hpp	/^        atomic_counter_t sent_seqnum;$/;"	m	class:zmq::own_t
server	./examples/benchmarks/benchmark.cpp	/^void server(ISocketFactory *factory, Channel channel, Semantics semantics, void *s_buffer, void *r_buffer, unsigned size, unsigned iterations, unsigned multiplicity){$/;"	f
server	./examples/multithreaded/multithread.cpp	/^void server(ISocketFactory *factory){$/;"	f
server	./tests/calls.cpp	/^void server(){$/;"	f
server	./tests/dest.cpp	/^void server(ISocketFactory *factory, const Channel &channel){$/;"	f
server	./tests/size.cpp	/^void server(ISocketFactory *factory, const Channel &channel){$/;"	f
server	./zeromq/tests/test_connect_delay.cpp	/^static void *server (void *)$/;"	f	file:
session	./zeromq/src/ipc_connecter.hpp	/^        zmq::session_base_t *session;$/;"	m	class:zmq::ipc_connecter_t
session	./zeromq/src/pgm_receiver.hpp	/^        zmq::session_base_t *session;$/;"	m	class:zmq::pgm_receiver_t
session	./zeromq/src/stream_engine.hpp	/^        zmq::session_base_t *session;$/;"	m	class:zmq::stream_engine_t
session	./zeromq/src/tcp_connecter.hpp	/^        zmq::session_base_t *session;$/;"	m	class:zmq::tcp_connecter_t
session_base_t	./zeromq/src/session_base.cpp	/^zmq::session_base_t::session_base_t (class io_thread_t *io_thread_,$/;"	f	class:zmq::session_base_t
session_base_t	./zeromq/src/session_base.hpp	/^    class session_base_t :$/;"	c	namespace:zmq
set	./zeromq/src/atomic_counter.hpp	/^        inline void set (integer_t value_)$/;"	f	class:zmq::atomic_counter_t
set	./zeromq/src/atomic_ptr.hpp	/^        inline void set (T *ptr_)$/;"	f	class:zmq::atomic_ptr_t
set	./zeromq/src/ctx.cpp	/^int zmq::ctx_t::set (int option_, int optval_)$/;"	f	class:zmq::ctx_t
set_address	./zeromq/src/ipc_listener.cpp	/^int zmq::ipc_listener_t::set_address (const char *addr_)$/;"	f	class:zmq::ipc_listener_t
set_address	./zeromq/src/tcp_listener.cpp	/^int zmq::tcp_listener_t::set_address (const char *addr_)$/;"	f	class:zmq::tcp_listener_t
set_array_index	./zeromq/src/array.hpp	/^        inline void set_array_index (int index_)$/;"	f	class:zmq::array_item_t
set_event_sink	./zeromq/src/pipe.cpp	/^void zmq::pipe_t::set_event_sink (i_pipe_events *sink_)$/;"	f	class:zmq::pipe_t
set_flags	./zeromq/src/msg.cpp	/^void zmq::msg_t::set_flags (unsigned char flags_)$/;"	f	class:zmq::msg_t
set_identity	./zeromq/src/pipe.cpp	/^void zmq::pipe_t::set_identity (const blob_t &identity_)$/;"	f	class:zmq::pipe_t
set_msg_sink	./zeromq/src/decoder.cpp	/^void zmq::decoder_t::set_msg_sink (i_msg_sink *msg_sink_)$/;"	f	class:zmq::decoder_t
set_msg_sink	./zeromq/src/v1_decoder.cpp	/^void zmq::v1_decoder_t::set_msg_sink (i_msg_sink *msg_sink_)$/;"	f	class:zmq::v1_decoder_t
set_msg_source	./zeromq/src/encoder.cpp	/^void zmq::encoder_t::set_msg_source (i_msg_source *msg_source_)$/;"	f	class:zmq::encoder_t
set_msg_source	./zeromq/src/v1_encoder.cpp	/^void zmq::v1_encoder_t::set_msg_source (i_msg_source *msg_source_)$/;"	f	class:zmq::v1_encoder_t
set_owner	./zeromq/src/own.cpp	/^void zmq::own_t::set_owner (own_t *owner_)$/;"	f	class:zmq::own_t
set_peer	./zeromq/src/pipe.cpp	/^void zmq::pipe_t::set_peer (pipe_t *peer_)$/;"	f	class:zmq::pipe_t
set_pollin	./zeromq/src/devpoll.cpp	/^void zmq::devpoll_t::set_pollin (handle_t handle_)$/;"	f	class:zmq::devpoll_t
set_pollin	./zeromq/src/epoll.cpp	/^void zmq::epoll_t::set_pollin (handle_t handle_)$/;"	f	class:zmq::epoll_t
set_pollin	./zeromq/src/io_object.cpp	/^void zmq::io_object_t::set_pollin (handle_t handle_)$/;"	f	class:zmq::io_object_t
set_pollin	./zeromq/src/kqueue.cpp	/^void zmq::kqueue_t::set_pollin (handle_t handle_)$/;"	f	class:zmq::kqueue_t
set_pollin	./zeromq/src/poll.cpp	/^void zmq::poll_t::set_pollin (handle_t handle_)$/;"	f	class:zmq::poll_t
set_pollin	./zeromq/src/select.cpp	/^void zmq::select_t::set_pollin (handle_t handle_)$/;"	f	class:zmq::select_t
set_pollout	./zeromq/src/devpoll.cpp	/^void zmq::devpoll_t::set_pollout (handle_t handle_)$/;"	f	class:zmq::devpoll_t
set_pollout	./zeromq/src/epoll.cpp	/^void zmq::epoll_t::set_pollout (handle_t handle_)$/;"	f	class:zmq::epoll_t
set_pollout	./zeromq/src/io_object.cpp	/^void zmq::io_object_t::set_pollout (handle_t handle_)$/;"	f	class:zmq::io_object_t
set_pollout	./zeromq/src/kqueue.cpp	/^void zmq::kqueue_t::set_pollout (handle_t handle_)$/;"	f	class:zmq::kqueue_t
set_pollout	./zeromq/src/poll.cpp	/^void zmq::poll_t::set_pollout (handle_t handle_)$/;"	f	class:zmq::poll_t
set_pollout	./zeromq/src/select.cpp	/^void zmq::select_t::set_pollout (handle_t handle_)$/;"	f	class:zmq::select_t
setsockopt	./zeromq/include/zmq.hpp	/^        inline void setsockopt (int option_, const void *optval_,$/;"	f	class:zmq::socket_t
setsockopt	./zeromq/src/options.cpp	/^int zmq::options_t::setsockopt (int option_, const void *optval_,$/;"	f	class:zmq::options_t
setsockopt	./zeromq/src/socket_base.cpp	/^int zmq::socket_base_t::setsockopt (int option_, const void *optval_,$/;"	f	class:zmq::socket_base_t
shared	./zeromq/src/msg.hpp	/^            shared = 128$/;"	e	enum:zmq::msg_t::__anon13
sharedstatedir	./zeromq/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	./zeromq/builds/msvc/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	./zeromq/doc/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	./zeromq/foreign/openpgm/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	./zeromq/perf/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	./zeromq/src/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	./zeromq/tests/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
shm	./include/yampl/shm/ClientSocket.h	/^namespace shm{$/;"	n	namespace:yampl
shm	./include/yampl/shm/ConsumerSocket.h	/^namespace shm{$/;"	n	namespace:yampl
shm	./include/yampl/shm/PipeSocketBase.h	/^namespace shm{$/;"	n	namespace:yampl
shm	./include/yampl/shm/ProducerSocket.h	/^namespace shm{$/;"	n	namespace:yampl
shm	./include/yampl/shm/ServerSocket.h	/^namespace shm{$/;"	n	namespace:yampl
shm	./include/yampl/shm/SimpleClientSocket.h	/^namespace shm{$/;"	n	namespace:yampl
shm	./include/yampl/shm/SimpleServerSocket.h	/^namespace shm{$/;"	n	namespace:yampl
shm	./include/yampl/shm/SocketFactory.h	/^namespace shm{$/;"	n	namespace:yampl
shm	./src/shm/SHMSocketBase.cpp	/^namespace shm{$/;"	n	namespace:yampl	file:
shm	./src/shm/SHMSocketFactory.cpp	/^namespace shm{$/;"	n	namespace:yampl	file:
shm	./src/shm/ServerSocket.cpp	/^namespace shm{$/;"	n	namespace:yampl	file:
signaler	./zeromq/src/mailbox.hpp	/^        signaler_t signaler;$/;"	m	class:zmq::mailbox_t
signaler_port	./zeromq/src/config.hpp	/^        signaler_port = 5905$/;"	e	enum:zmq::__anon7
signaler_t	./zeromq/src/signaler.cpp	/^zmq::signaler_t::signaler_t ()$/;"	f	class:zmq::signaler_t
signaler_t	./zeromq/src/signaler.hpp	/^    class signaler_t$/;"	c	namespace:zmq
sink	./zeromq/src/pipe.hpp	/^        i_pipe_events *sink;$/;"	m	class:zmq::pipe_t
sink	./zeromq/src/poller_base.hpp	/^            zmq::i_poll_events *sink;$/;"	m	struct:zmq::poller_base_t::timer_info_t
size	./include/yampl/ISocket.h	/^	size_t size;$/;"	m	struct:yampl::ISocket::RecvArgs
size	./include/yampl/utils/RingBuffer.h	/^inline size_t RingBuffer::size(){$/;"	f	class:yampl::RingBuffer
size	./zeromq/include/zmq.hpp	/^        inline size_t size () const$/;"	f	class:zmq::message_t
size	./zeromq/src/array.hpp	/^        inline size_type size ()$/;"	f	class:zmq::array_t
size	./zeromq/src/msg.cpp	/^size_t zmq::msg_t::size ()$/;"	f	class:zmq::msg_t
size	./zeromq/src/msg.hpp	/^                unsigned char size;$/;"	m	struct:zmq::msg_t::__anon15::__anon17
size	./zeromq/src/msg.hpp	/^            size_t size;$/;"	m	struct:zmq::msg_t::content_t
size_ready	./zeromq/src/encoder.cpp	/^bool zmq::encoder_t::size_ready ()$/;"	f	class:zmq::encoder_t
size_ready	./zeromq/src/v1_encoder.cpp	/^bool zmq::v1_encoder_t::size_ready ()$/;"	f	class:zmq::v1_encoder_t
size_type	./zeromq/src/array.hpp	/^        typedef typename std::vector <T*>::size_type size_type;$/;"	t	class:zmq::array_t
slot_count	./zeromq/src/ctx.hpp	/^        uint32_t slot_count;$/;"	m	class:zmq::ctx_t
slot_sync	./zeromq/src/ctx.hpp	/^        mutex_t slot_sync;$/;"	m	class:zmq::ctx_t
slots	./zeromq/src/ctx.hpp	/^        mailbox_t **slots;$/;"	m	class:zmq::ctx_t
sndbuf	./zeromq/src/options.hpp	/^        int sndbuf;$/;"	m	struct:zmq::options_t
sndhwm	./zeromq/src/options.hpp	/^        int sndhwm;$/;"	m	struct:zmq::options_t
sndtimeo	./zeromq/src/options.hpp	/^        int sndtimeo;$/;"	m	struct:zmq::options_t
sock	./zeromq/src/pgm_socket.hpp	/^        pgm_sock_t* sock;$/;"	m	class:zmq::pgm_socket_t
socket	./zeromq/include/zmq.h	/^    void *socket;$/;"	m	struct:__anon52
socket	./zeromq/src/command.hpp	/^                zmq::socket_base_t *socket;$/;"	m	struct:zmq::command_t::__anon20::__anon34
socket	./zeromq/src/ctx.hpp	/^        socket_base_t *socket;$/;"	m	struct:zmq::endpoint_t
socket	./zeromq/src/ipc_connecter.hpp	/^        zmq::socket_base_t *socket;$/;"	m	class:zmq::ipc_connecter_t
socket	./zeromq/src/ipc_listener.hpp	/^        zmq::socket_base_t *socket;$/;"	m	class:zmq::ipc_listener_t
socket	./zeromq/src/session_base.hpp	/^        zmq::socket_base_t *socket;$/;"	m	class:zmq::session_base_t
socket	./zeromq/src/stream_engine.hpp	/^        zmq::socket_base_t *socket;$/;"	m	class:zmq::stream_engine_t
socket	./zeromq/src/tcp_connecter.hpp	/^        zmq::socket_base_t *socket;$/;"	m	class:zmq::tcp_connecter_t
socket	./zeromq/src/tcp_listener.hpp	/^        zmq::socket_base_t *socket;$/;"	m	class:zmq::tcp_listener_t
socket_base_t	./zeromq/src/socket_base.cpp	/^zmq::socket_base_t::socket_base_t (ctx_t *parent_, uint32_t tid_, int sid_) :$/;"	f	class:zmq::socket_base_t
socket_base_t	./zeromq/src/socket_base.hpp	/^    class socket_base_t :$/;"	c	namespace:zmq
socket_handle	./zeromq/src/pgm_receiver.hpp	/^        handle_t socket_handle;$/;"	m	class:zmq::pgm_receiver_t
socket_id	./zeromq/src/options.hpp	/^        int socket_id;$/;"	m	struct:zmq::options_t
socket_t	./zeromq/include/zmq.hpp	/^        inline socket_t (context_t &context_, int type_)$/;"	f	class:zmq::socket_t
socket_t	./zeromq/include/zmq.hpp	/^        inline socket_t(socket_t&& rhs) : ptr(rhs.ptr)$/;"	f	class:zmq::socket_t
socket_t	./zeromq/include/zmq.hpp	/^    class socket_t$/;"	c	namespace:zmq
sockets	./zeromq/src/ctx.hpp	/^        sockets_t sockets;$/;"	m	class:zmq::ctx_t
sockets	./zeromq/src/reaper.hpp	/^        int sockets;$/;"	m	class:zmq::reaper_t
sockets_t	./zeromq/src/ctx.hpp	/^        typedef array_t <socket_base_t> sockets_t;$/;"	t	class:zmq::ctx_t
source_set_err	./zeromq/src/select.hpp	/^        fd_set source_set_err;$/;"	m	class:zmq::select_t
source_set_in	./zeromq/src/select.hpp	/^        fd_set source_set_in;$/;"	m	class:zmq::select_t
source_set_out	./zeromq/src/select.hpp	/^        fd_set source_set_out;$/;"	m	class:zmq::select_t
spare_chunk	./zeromq/src/yqueue.hpp	/^        atomic_ptr_t<chunk_t> spare_chunk;$/;"	m	class:zmq::yqueue_t
srcdir	./zeromq/Makefile	/^srcdir = .$/;"	m
srcdir	./zeromq/builds/msvc/Makefile	/^srcdir = .$/;"	m
srcdir	./zeromq/doc/Makefile	/^srcdir = .$/;"	m
srcdir	./zeromq/foreign/openpgm/Makefile	/^srcdir = .$/;"	m
srcdir	./zeromq/perf/Makefile	/^srcdir = .$/;"	m
srcdir	./zeromq/src/Makefile	/^srcdir = .$/;"	m
srcdir	./zeromq/tests/Makefile	/^srcdir = .$/;"	m
stalled	./zeromq/src/decoder.cpp	/^bool zmq::decoder_t::stalled () const$/;"	f	class:zmq::decoder_t
stalled	./zeromq/src/v1_decoder.cpp	/^bool zmq::v1_decoder_t::stalled () const$/;"	f	class:zmq::v1_decoder_t
start	./zeromq/src/devpoll.cpp	/^void zmq::devpoll_t::start ()$/;"	f	class:zmq::devpoll_t
start	./zeromq/src/epoll.cpp	/^void zmq::epoll_t::start ()$/;"	f	class:zmq::epoll_t
start	./zeromq/src/io_thread.cpp	/^void zmq::io_thread_t::start ()$/;"	f	class:zmq::io_thread_t
start	./zeromq/src/kqueue.cpp	/^void zmq::kqueue_t::start ()$/;"	f	class:zmq::kqueue_t
start	./zeromq/src/poll.cpp	/^void zmq::poll_t::start ()$/;"	f	class:zmq::poll_t
start	./zeromq/src/reaper.cpp	/^void zmq::reaper_t::start ()$/;"	f	class:zmq::reaper_t
start	./zeromq/src/select.cpp	/^void zmq::select_t::start ()$/;"	f	class:zmq::select_t
start	./zeromq/src/thread.cpp	/^void zmq::thread_t::start (thread_fn *tfn_, void *arg_)$/;"	f	class:zmq::thread_t
startWrapper	./include/yampl/utils/Thread.h	/^inline void * Thread::startWrapper(void *arg){$/;"	f	class:yampl::Thread
start_clock	./examples/benchmarks/benchmark.cpp	/^void start_clock(){$/;"	f
start_connecting	./zeromq/src/ipc_connecter.cpp	/^void zmq::ipc_connecter_t::start_connecting ()$/;"	f	class:zmq::ipc_connecter_t
start_connecting	./zeromq/src/session_base.cpp	/^void zmq::session_base_t::start_connecting (bool wait_)$/;"	f	class:zmq::session_base_t
start_connecting	./zeromq/src/tcp_connecter.cpp	/^void zmq::tcp_connecter_t::start_connecting ()$/;"	f	class:zmq::tcp_connecter_t
start_reaping	./zeromq/src/socket_base.cpp	/^void zmq::socket_base_t::start_reaping (poller_t *poller_)$/;"	f	class:zmq::socket_base_t
start_time	./examples/benchmarks/benchmark.cpp	/^static struct timeval start_time, end_time;$/;"	v	typeref:struct:timeval	file:
starting	./zeromq/src/ctx.hpp	/^        bool starting;$/;"	m	class:zmq::ctx_t
state	./zeromq/src/pipe.hpp	/^        } state;$/;"	m	class:zmq::pipe_t	typeref:enum:zmq::pipe_t::__anon12
state	./zeromq/src/req.hpp	/^        } state;$/;"	m	class:zmq::req_session_t	typeref:enum:zmq::req_session_t::__anon11
state_type	./zeromq/src/blob.hpp	/^      typedef mbstate_t 	state_type;$/;"	t	struct:std::char_traits
std	./zeromq/src/blob.hpp	/^namespace std$/;"	n
step_t	./zeromq/src/decoder.hpp	/^        typedef bool (T::*step_t) ();$/;"	t	class:zmq::decoder_base_t
step_t	./zeromq/src/encoder.hpp	/^        typedef bool (T::*step_t) ();$/;"	t	class:zmq::encoder_base_t
stop	./zeromq/src/command.hpp	/^            stop,$/;"	e	enum:zmq::command_t::type_t
stop	./zeromq/src/command.hpp	/^            } stop;$/;"	m	union:zmq::command_t::__anon20	typeref:struct:zmq::command_t::__anon20::__anon21
stop	./zeromq/src/devpoll.cpp	/^void zmq::devpoll_t::stop ()$/;"	f	class:zmq::devpoll_t
stop	./zeromq/src/epoll.cpp	/^void zmq::epoll_t::stop ()$/;"	f	class:zmq::epoll_t
stop	./zeromq/src/io_thread.cpp	/^void zmq::io_thread_t::stop ()$/;"	f	class:zmq::io_thread_t
stop	./zeromq/src/kqueue.cpp	/^void zmq::kqueue_t::stop ()$/;"	f	class:zmq::kqueue_t
stop	./zeromq/src/poll.cpp	/^void zmq::poll_t::stop ()$/;"	f	class:zmq::poll_t
stop	./zeromq/src/reaper.cpp	/^void zmq::reaper_t::stop ()$/;"	f	class:zmq::reaper_t
stop	./zeromq/src/select.cpp	/^void zmq::select_t::stop ()$/;"	f	class:zmq::select_t
stop	./zeromq/src/socket_base.cpp	/^void zmq::socket_base_t::stop ()$/;"	f	class:zmq::socket_base_t
stop	./zeromq/src/thread.cpp	/^void zmq::thread_t::stop ()$/;"	f	class:zmq::thread_t
stop_clock	./examples/benchmarks/benchmark.cpp	/^long stop_clock(){$/;"	f
stop_monitor	./zeromq/src/socket_base.cpp	/^void zmq::socket_base_t::stop_monitor()$/;"	f	class:zmq::socket_base_t
stopping	./zeromq/src/devpoll.hpp	/^        bool stopping;$/;"	m	class:zmq::devpoll_t
stopping	./zeromq/src/epoll.hpp	/^        bool stopping;$/;"	m	class:zmq::epoll_t
stopping	./zeromq/src/kqueue.hpp	/^        bool stopping;$/;"	m	class:zmq::kqueue_t
stopping	./zeromq/src/poll.hpp	/^        bool stopping;$/;"	m	class:zmq::poll_t
stopping	./zeromq/src/select.hpp	/^        bool stopping;$/;"	m	class:zmq::select_t
stream_engine_t	./zeromq/src/stream_engine.cpp	/^zmq::stream_engine_t::stream_engine_t (fd_t fd_, const options_t &options_, const std::string &endpoint_) :$/;"	f	class:zmq::stream_engine_t
stream_engine_t	./zeromq/src/stream_engine.hpp	/^    class stream_engine_t : public io_object_t, public i_engine, public i_msg_sink$/;"	c	namespace:zmq
sub	./zeromq/src/atomic_counter.hpp	/^        inline bool sub (integer_t decrement)$/;"	f	class:zmq::atomic_counter_t
sub_session_t	./zeromq/src/sub.cpp	/^zmq::sub_session_t::sub_session_t (io_thread_t *io_thread_, bool connect_,$/;"	f	class:zmq::sub_session_t
sub_session_t	./zeromq/src/sub.hpp	/^    class sub_session_t : public xsub_session_t$/;"	c	namespace:zmq
sub_t	./zeromq/src/sub.cpp	/^zmq::sub_t::sub_t (class ctx_t *parent_, uint32_t tid_, int sid_) :$/;"	f	class:zmq::sub_t
sub_t	./zeromq/src/sub.hpp	/^    class sub_t : public xsub_t$/;"	c	namespace:zmq
subdir	./zeromq/Makefile	/^subdir = .$/;"	m
subdir	./zeromq/builds/msvc/Makefile	/^subdir = builds\/msvc$/;"	m
subdir	./zeromq/doc/Makefile	/^subdir = doc$/;"	m
subdir	./zeromq/foreign/openpgm/Makefile	/^subdir = foreign\/openpgm$/;"	m
subdir	./zeromq/perf/Makefile	/^subdir = perf$/;"	m
subdir	./zeromq/src/Makefile	/^subdir = src$/;"	m
subdir	./zeromq/tests/Makefile	/^subdir = tests$/;"	m
subdirs	./zeromq/Makefile	/^subdirs = $/;"	m
subdirs	./zeromq/builds/msvc/Makefile	/^subdirs = $/;"	m
subdirs	./zeromq/doc/Makefile	/^subdirs = $/;"	m
subdirs	./zeromq/foreign/openpgm/Makefile	/^subdirs = $/;"	m
subdirs	./zeromq/perf/Makefile	/^subdirs = $/;"	m
subdirs	./zeromq/src/Makefile	/^subdirs = $/;"	m
subdirs	./zeromq/tests/Makefile	/^subdirs = $/;"	m
subscriptions	./zeromq/src/xpub.hpp	/^        mtrie_t subscriptions;$/;"	m	class:zmq::xpub_t
subscriptions	./zeromq/src/xsub.hpp	/^        trie_t subscriptions;$/;"	m	class:zmq::xsub_t
swap	./zeromq/src/array.hpp	/^        inline void swap (size_type index1_, size_type index2_)$/;"	f	class:zmq::array_t
sync	./zeromq/src/atomic_counter.hpp	/^        mutex_t sync;$/;"	m	class:zmq::atomic_counter_t
sync	./zeromq/src/atomic_ptr.hpp	/^        mutex_t sync;$/;"	m	class:zmq::atomic_ptr_t
sync	./zeromq/src/mailbox.hpp	/^        mutex_t sync;$/;"	m	class:zmq::mailbox_t
sync	./zeromq/src/socket_base.hpp	/^        mutex_t sync;$/;"	m	class:zmq::socket_base_t
syncWithServer	./include/yampl/shm/ClientSocket.h	/^inline void ClientSocket::syncWithServer(){$/;"	f	class:yampl::shm::ClientSocket
sysconfdir	./zeromq/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	./zeromq/builds/msvc/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	./zeromq/doc/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	./zeromq/foreign/openpgm/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	./zeromq/perf/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	./zeromq/src/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	./zeromq/tests/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
table	./zeromq/src/mtrie.hpp	/^            class mtrie_t **table;$/;"	m	union:zmq::mtrie_t::__anon37	typeref:class:zmq::mtrie_t::__anon37::mtrie_t
table	./zeromq/src/trie.hpp	/^            class trie_t **table;$/;"	m	union:zmq::trie_t::__anon9	typeref:class:zmq::trie_t::__anon9::trie_t
tag	./zeromq/src/ctx.hpp	/^        uint32_t tag;$/;"	m	class:zmq::ctx_t
tag	./zeromq/src/socket_base.hpp	/^        uint32_t tag;$/;"	m	class:zmq::socket_base_t
tardir	./zeromq/Makefile	/^	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2$/;"	m
tardir	./zeromq/Makefile	/^	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz$/;"	m
tardir	./zeromq/Makefile	/^	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz$/;"	m
tardir	./zeromq/Makefile	/^	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z$/;"	m
tardir	./zeromq/Makefile	/^	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz$/;"	m
tardir	./zeromq/Makefile	/^	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma$/;"	m
target_alias	./zeromq/Makefile	/^target_alias = $/;"	m
target_alias	./zeromq/builds/msvc/Makefile	/^target_alias = $/;"	m
target_alias	./zeromq/doc/Makefile	/^target_alias = $/;"	m
target_alias	./zeromq/foreign/openpgm/Makefile	/^target_alias = $/;"	m
target_alias	./zeromq/perf/Makefile	/^target_alias = $/;"	m
target_alias	./zeromq/src/Makefile	/^target_alias = $/;"	m
target_alias	./zeromq/tests/Makefile	/^target_alias = $/;"	m
tcp_accept_filters	./zeromq/src/options.hpp	/^        tcp_accept_filters_t tcp_accept_filters;$/;"	m	struct:zmq::options_t
tcp_accept_filters_t	./zeromq/src/options.hpp	/^        typedef std::vector <tcp_address_mask_t> tcp_accept_filters_t;$/;"	t	struct:zmq::options_t
tcp_addr	./zeromq/src/address.hpp	/^            tcp_address_t *tcp_addr;$/;"	m	union:zmq::address_t::__anon3
tcp_address_mask_t	./zeromq/src/tcp_address.cpp	/^zmq::tcp_address_mask_t::tcp_address_mask_t () :$/;"	f	class:zmq::tcp_address_mask_t
tcp_address_mask_t	./zeromq/src/tcp_address.hpp	/^    class tcp_address_mask_t : public tcp_address_t$/;"	c	namespace:zmq
tcp_address_t	./zeromq/src/tcp_address.cpp	/^zmq::tcp_address_t::tcp_address_t ()$/;"	f	class:zmq::tcp_address_t
tcp_address_t	./zeromq/src/tcp_address.cpp	/^zmq::tcp_address_t::tcp_address_t (const sockaddr *sa, socklen_t sa_len)$/;"	f	class:zmq::tcp_address_t
tcp_address_t	./zeromq/src/tcp_address.hpp	/^    class tcp_address_t$/;"	c	namespace:zmq
tcp_connecter_t	./zeromq/src/tcp_connecter.cpp	/^zmq::tcp_connecter_t::tcp_connecter_t (class io_thread_t *io_thread_,$/;"	f	class:zmq::tcp_connecter_t
tcp_connecter_t	./zeromq/src/tcp_connecter.hpp	/^    class tcp_connecter_t : public own_t, public io_object_t$/;"	c	namespace:zmq
tcp_keepalive	./zeromq/src/options.hpp	/^        int tcp_keepalive;$/;"	m	struct:zmq::options_t
tcp_keepalive_cnt	./zeromq/src/options.hpp	/^        int tcp_keepalive_cnt;$/;"	m	struct:zmq::options_t
tcp_keepalive_idle	./zeromq/src/options.hpp	/^        int tcp_keepalive_idle;$/;"	m	struct:zmq::options_t
tcp_keepalive_intvl	./zeromq/src/options.hpp	/^        int tcp_keepalive_intvl;$/;"	m	struct:zmq::options_t
tcp_listener_t	./zeromq/src/tcp_listener.cpp	/^zmq::tcp_listener_t::tcp_listener_t (io_thread_t *io_thread_,$/;"	f	class:zmq::tcp_listener_t
tcp_listener_t	./zeromq/src/tcp_listener.hpp	/^    class tcp_listener_t : public own_t, public io_object_t$/;"	c	namespace:zmq
term	./zeromq/src/command.hpp	/^            term,$/;"	e	enum:zmq::command_t::type_t
term	./zeromq/src/command.hpp	/^            } term;$/;"	m	union:zmq::command_t::__anon20	typeref:struct:zmq::command_t::__anon20::__anon32
term_ack	./zeromq/src/command.hpp	/^            term_ack,$/;"	e	enum:zmq::command_t::type_t
term_ack	./zeromq/src/command.hpp	/^            } term_ack;$/;"	m	union:zmq::command_t::__anon20	typeref:struct:zmq::command_t::__anon20::__anon33
term_acks	./zeromq/src/own.hpp	/^        int term_acks;$/;"	m	class:zmq::own_t
term_child	./zeromq/src/own.cpp	/^void zmq::own_t::term_child (own_t *object_)$/;"	f	class:zmq::own_t
term_endpoint	./zeromq/src/socket_base.cpp	/^int zmq::socket_base_t::term_endpoint (const char *addr_)$/;"	f	class:zmq::socket_base_t
term_mailbox	./zeromq/src/ctx.hpp	/^        mailbox_t term_mailbox;$/;"	m	class:zmq::ctx_t
term_req	./zeromq/src/command.hpp	/^            term_req,$/;"	e	enum:zmq::command_t::type_t
term_req	./zeromq/src/command.hpp	/^            } term_req;$/;"	m	union:zmq::command_t::__anon20	typeref:struct:zmq::command_t::__anon20::__anon31
term_tid	./zeromq/src/ctx.hpp	/^            term_tid = 0,$/;"	e	enum:zmq::ctx_t::__anon6
terminate	./zeromq/src/ctx.cpp	/^int zmq::ctx_t::terminate ()$/;"	f	class:zmq::ctx_t
terminate	./zeromq/src/own.cpp	/^void zmq::own_t::terminate ()$/;"	f	class:zmq::own_t
terminate	./zeromq/src/pgm_receiver.cpp	/^void zmq::pgm_receiver_t::terminate ()$/;"	f	class:zmq::pgm_receiver_t
terminate	./zeromq/src/pgm_sender.cpp	/^void zmq::pgm_sender_t::terminate ()$/;"	f	class:zmq::pgm_sender_t
terminate	./zeromq/src/pipe.cpp	/^void zmq::pipe_t::terminate (bool delay_)$/;"	f	class:zmq::pipe_t
terminate	./zeromq/src/stream_engine.cpp	/^void zmq::stream_engine_t::terminate ()$/;"	f	class:zmq::stream_engine_t
terminated	./zeromq/src/dist.cpp	/^void zmq::dist_t::terminated (pipe_t *pipe_)$/;"	f	class:zmq::dist_t
terminated	./zeromq/src/fq.cpp	/^void zmq::fq_t::terminated (pipe_t *pipe_)$/;"	f	class:zmq::fq_t
terminated	./zeromq/src/lb.cpp	/^void zmq::lb_t::terminated (pipe_t *pipe_)$/;"	f	class:zmq::lb_t
terminated	./zeromq/src/pipe.hpp	/^            terminated,$/;"	e	enum:zmq::pipe_t::__anon12
terminated	./zeromq/src/session_base.cpp	/^void zmq::session_base_t::terminated (pipe_t *pipe_)$/;"	f	class:zmq::session_base_t
terminated	./zeromq/src/socket_base.cpp	/^void zmq::socket_base_t::terminated (pipe_t *pipe_)$/;"	f	class:zmq::socket_base_t
terminating	./zeromq/src/ctx.hpp	/^        bool terminating;$/;"	m	class:zmq::ctx_t
terminating	./zeromq/src/own.hpp	/^        bool terminating;$/;"	m	class:zmq::own_t
terminating	./zeromq/src/pipe.hpp	/^            terminating,$/;"	e	enum:zmq::pipe_t::__anon12
terminating	./zeromq/src/reaper.hpp	/^        bool terminating;$/;"	m	class:zmq::reaper_t
terminating_pipes	./zeromq/src/session_base.hpp	/^        std::set<pipe_t *> terminating_pipes;$/;"	m	class:zmq::session_base_t
test_connect_delay_DEPENDENCIES	./zeromq/tests/Makefile	/^test_connect_delay_DEPENDENCIES = $(top_builddir)\/src\/libzmq.la$/;"	m
test_connect_delay_LDADD	./zeromq/tests/Makefile	/^test_connect_delay_LDADD = $(LDADD)$/;"	m
test_connect_delay_OBJECTS	./zeromq/tests/Makefile	/^test_connect_delay_OBJECTS = $(am_test_connect_delay_OBJECTS)$/;"	m
test_connect_delay_SOURCES	./zeromq/tests/Makefile	/^test_connect_delay_SOURCES = test_connect_delay.cpp$/;"	m
test_connect_resolve_DEPENDENCIES	./zeromq/tests/Makefile	/^test_connect_resolve_DEPENDENCIES = $(top_builddir)\/src\/libzmq.la$/;"	m
test_connect_resolve_LDADD	./zeromq/tests/Makefile	/^test_connect_resolve_LDADD = $(LDADD)$/;"	m
test_connect_resolve_OBJECTS	./zeromq/tests/Makefile	/^test_connect_resolve_OBJECTS = $(am_test_connect_resolve_OBJECTS)$/;"	m
test_connect_resolve_SOURCES	./zeromq/tests/Makefile	/^test_connect_resolve_SOURCES = test_connect_resolve.cpp$/;"	m
test_hwm_DEPENDENCIES	./zeromq/tests/Makefile	/^test_hwm_DEPENDENCIES = $(top_builddir)\/src\/libzmq.la$/;"	m
test_hwm_LDADD	./zeromq/tests/Makefile	/^test_hwm_LDADD = $(LDADD)$/;"	m
test_hwm_OBJECTS	./zeromq/tests/Makefile	/^test_hwm_OBJECTS = $(am_test_hwm_OBJECTS)$/;"	m
test_hwm_SOURCES	./zeromq/tests/Makefile	/^test_hwm_SOURCES = test_hwm.cpp$/;"	m
test_invalid_rep_DEPENDENCIES	./zeromq/tests/Makefile	/^test_invalid_rep_DEPENDENCIES = $(top_builddir)\/src\/libzmq.la$/;"	m
test_invalid_rep_LDADD	./zeromq/tests/Makefile	/^test_invalid_rep_LDADD = $(LDADD)$/;"	m
test_invalid_rep_OBJECTS	./zeromq/tests/Makefile	/^test_invalid_rep_OBJECTS = $(am_test_invalid_rep_OBJECTS)$/;"	m
test_invalid_rep_SOURCES	./zeromq/tests/Makefile	/^test_invalid_rep_SOURCES = test_invalid_rep.cpp$/;"	m
test_last_endpoint_DEPENDENCIES	./zeromq/tests/Makefile	/^test_last_endpoint_DEPENDENCIES = $(top_builddir)\/src\/libzmq.la$/;"	m
test_last_endpoint_LDADD	./zeromq/tests/Makefile	/^test_last_endpoint_LDADD = $(LDADD)$/;"	m
test_last_endpoint_OBJECTS	./zeromq/tests/Makefile	/^test_last_endpoint_OBJECTS = $(am_test_last_endpoint_OBJECTS)$/;"	m
test_last_endpoint_SOURCES	./zeromq/tests/Makefile	/^test_last_endpoint_SOURCES = test_last_endpoint.cpp$/;"	m
test_monitor_DEPENDENCIES	./zeromq/tests/Makefile	/^test_monitor_DEPENDENCIES = $(top_builddir)\/src\/libzmq.la$/;"	m
test_monitor_LDADD	./zeromq/tests/Makefile	/^test_monitor_LDADD = $(LDADD)$/;"	m
test_monitor_OBJECTS	./zeromq/tests/Makefile	/^test_monitor_OBJECTS = $(am_test_monitor_OBJECTS)$/;"	m
test_monitor_SOURCES	./zeromq/tests/Makefile	/^test_monitor_SOURCES = test_monitor.cpp$/;"	m
test_msg_flags_DEPENDENCIES	./zeromq/tests/Makefile	/^test_msg_flags_DEPENDENCIES = $(top_builddir)\/src\/libzmq.la$/;"	m
test_msg_flags_LDADD	./zeromq/tests/Makefile	/^test_msg_flags_LDADD = $(LDADD)$/;"	m
test_msg_flags_OBJECTS	./zeromq/tests/Makefile	/^test_msg_flags_OBJECTS = $(am_test_msg_flags_OBJECTS)$/;"	m
test_msg_flags_SOURCES	./zeromq/tests/Makefile	/^test_msg_flags_SOURCES = test_msg_flags.cpp$/;"	m
test_pair_inproc_DEPENDENCIES	./zeromq/tests/Makefile	/^test_pair_inproc_DEPENDENCIES = $(top_builddir)\/src\/libzmq.la$/;"	m
test_pair_inproc_LDADD	./zeromq/tests/Makefile	/^test_pair_inproc_LDADD = $(LDADD)$/;"	m
test_pair_inproc_OBJECTS	./zeromq/tests/Makefile	/^test_pair_inproc_OBJECTS = $(am_test_pair_inproc_OBJECTS)$/;"	m
test_pair_inproc_SOURCES	./zeromq/tests/Makefile	/^test_pair_inproc_SOURCES = test_pair_inproc.cpp testutil.hpp$/;"	m
test_pair_ipc_DEPENDENCIES	./zeromq/tests/Makefile	/^test_pair_ipc_DEPENDENCIES = $(top_builddir)\/src\/libzmq.la$/;"	m
test_pair_ipc_LDADD	./zeromq/tests/Makefile	/^test_pair_ipc_LDADD = $(LDADD)$/;"	m
test_pair_ipc_OBJECTS	./zeromq/tests/Makefile	/^test_pair_ipc_OBJECTS = $(am_test_pair_ipc_OBJECTS)$/;"	m
test_pair_ipc_SOURCES	./zeromq/tests/Makefile	/^test_pair_ipc_SOURCES = test_pair_ipc.cpp testutil.hpp$/;"	m
test_pair_tcp_DEPENDENCIES	./zeromq/tests/Makefile	/^test_pair_tcp_DEPENDENCIES = $(top_builddir)\/src\/libzmq.la$/;"	m
test_pair_tcp_LDADD	./zeromq/tests/Makefile	/^test_pair_tcp_LDADD = $(LDADD)$/;"	m
test_pair_tcp_OBJECTS	./zeromq/tests/Makefile	/^test_pair_tcp_OBJECTS = $(am_test_pair_tcp_OBJECTS)$/;"	m
test_pair_tcp_SOURCES	./zeromq/tests/Makefile	/^test_pair_tcp_SOURCES = test_pair_tcp.cpp testutil.hpp$/;"	m
test_reqrep_device_DEPENDENCIES	./zeromq/tests/Makefile	/^test_reqrep_device_DEPENDENCIES = $(top_builddir)\/src\/libzmq.la$/;"	m
test_reqrep_device_LDADD	./zeromq/tests/Makefile	/^test_reqrep_device_LDADD = $(LDADD)$/;"	m
test_reqrep_device_OBJECTS	./zeromq/tests/Makefile	/^test_reqrep_device_OBJECTS = $(am_test_reqrep_device_OBJECTS)$/;"	m
test_reqrep_device_SOURCES	./zeromq/tests/Makefile	/^test_reqrep_device_SOURCES = test_reqrep_device.cpp$/;"	m
test_reqrep_inproc_DEPENDENCIES	./zeromq/tests/Makefile	/^test_reqrep_inproc_DEPENDENCIES = $(top_builddir)\/src\/libzmq.la$/;"	m
test_reqrep_inproc_LDADD	./zeromq/tests/Makefile	/^test_reqrep_inproc_LDADD = $(LDADD)$/;"	m
test_reqrep_inproc_OBJECTS	./zeromq/tests/Makefile	/^test_reqrep_inproc_OBJECTS = $(am_test_reqrep_inproc_OBJECTS)$/;"	m
test_reqrep_inproc_SOURCES	./zeromq/tests/Makefile	/^test_reqrep_inproc_SOURCES = test_reqrep_inproc.cpp testutil.hpp$/;"	m
test_reqrep_ipc_DEPENDENCIES	./zeromq/tests/Makefile	/^test_reqrep_ipc_DEPENDENCIES = $(top_builddir)\/src\/libzmq.la$/;"	m
test_reqrep_ipc_LDADD	./zeromq/tests/Makefile	/^test_reqrep_ipc_LDADD = $(LDADD)$/;"	m
test_reqrep_ipc_OBJECTS	./zeromq/tests/Makefile	/^test_reqrep_ipc_OBJECTS = $(am_test_reqrep_ipc_OBJECTS)$/;"	m
test_reqrep_ipc_SOURCES	./zeromq/tests/Makefile	/^test_reqrep_ipc_SOURCES = test_reqrep_ipc.cpp testutil.hpp$/;"	m
test_reqrep_tcp_DEPENDENCIES	./zeromq/tests/Makefile	/^test_reqrep_tcp_DEPENDENCIES = $(top_builddir)\/src\/libzmq.la$/;"	m
test_reqrep_tcp_LDADD	./zeromq/tests/Makefile	/^test_reqrep_tcp_LDADD = $(LDADD)$/;"	m
test_reqrep_tcp_OBJECTS	./zeromq/tests/Makefile	/^test_reqrep_tcp_OBJECTS = $(am_test_reqrep_tcp_OBJECTS)$/;"	m
test_reqrep_tcp_SOURCES	./zeromq/tests/Makefile	/^test_reqrep_tcp_SOURCES = test_reqrep_tcp.cpp testutil.hpp$/;"	m
test_router_mandatory_DEPENDENCIES	./zeromq/tests/Makefile	/^test_router_mandatory_DEPENDENCIES = $(top_builddir)\/src\/libzmq.la$/;"	m
test_router_mandatory_LDADD	./zeromq/tests/Makefile	/^test_router_mandatory_LDADD = $(LDADD)$/;"	m
test_router_mandatory_OBJECTS	./zeromq/tests/Makefile	/^test_router_mandatory_OBJECTS = $(am_test_router_mandatory_OBJECTS)$/;"	m
test_router_mandatory_SOURCES	./zeromq/tests/Makefile	/^test_router_mandatory_SOURCES = test_router_mandatory.cpp$/;"	m
test_shutdown_stress_DEPENDENCIES	./zeromq/tests/Makefile	/^test_shutdown_stress_DEPENDENCIES = $(top_builddir)\/src\/libzmq.la$/;"	m
test_shutdown_stress_LDADD	./zeromq/tests/Makefile	/^test_shutdown_stress_LDADD = $(LDADD)$/;"	m
test_shutdown_stress_OBJECTS	./zeromq/tests/Makefile	/^test_shutdown_stress_OBJECTS = $(am_test_shutdown_stress_OBJECTS)$/;"	m
test_shutdown_stress_SOURCES	./zeromq/tests/Makefile	/^test_shutdown_stress_SOURCES = test_shutdown_stress.cpp$/;"	m
test_sub_forward_DEPENDENCIES	./zeromq/tests/Makefile	/^test_sub_forward_DEPENDENCIES = $(top_builddir)\/src\/libzmq.la$/;"	m
test_sub_forward_LDADD	./zeromq/tests/Makefile	/^test_sub_forward_LDADD = $(LDADD)$/;"	m
test_sub_forward_OBJECTS	./zeromq/tests/Makefile	/^test_sub_forward_OBJECTS = $(am_test_sub_forward_OBJECTS)$/;"	m
test_sub_forward_SOURCES	./zeromq/tests/Makefile	/^test_sub_forward_SOURCES = test_sub_forward.cpp$/;"	m
test_term_endpoint_DEPENDENCIES	./zeromq/tests/Makefile	/^test_term_endpoint_DEPENDENCIES = $(top_builddir)\/src\/libzmq.la$/;"	m
test_term_endpoint_LDADD	./zeromq/tests/Makefile	/^test_term_endpoint_LDADD = $(LDADD)$/;"	m
test_term_endpoint_OBJECTS	./zeromq/tests/Makefile	/^test_term_endpoint_OBJECTS = $(am_test_term_endpoint_OBJECTS)$/;"	m
test_term_endpoint_SOURCES	./zeromq/tests/Makefile	/^test_term_endpoint_SOURCES = test_term_endpoint.cpp$/;"	m
test_timeo_DEPENDENCIES	./zeromq/tests/Makefile	/^test_timeo_DEPENDENCIES = $(top_builddir)\/src\/libzmq.la$/;"	m
test_timeo_LDADD	./zeromq/tests/Makefile	/^test_timeo_LDADD = $(LDADD)$/;"	m
test_timeo_OBJECTS	./zeromq/tests/Makefile	/^test_timeo_OBJECTS = $(am_test_timeo_OBJECTS)$/;"	m
test_timeo_SOURCES	./zeromq/tests/Makefile	/^test_timeo_SOURCES = test_timeo.cpp$/;"	m
test_varargs_macros	./zeromq/configure	/^  test_varargs_macros ();$/;"	f
tfn	./zeromq/src/thread.hpp	/^        thread_fn *tfn;$/;"	m	class:zmq::thread_t
thread_fn	./zeromq/src/thread.hpp	/^    typedef void (thread_fn) (void*);$/;"	t	namespace:zmq
thread_routine	./zeromq/src/thread.cpp	/^	static DWORD thread_routine (LPVOID arg_)$/;"	f	file:
thread_routine	./zeromq/src/thread.cpp	/^    static void *thread_routine (void *arg_)$/;"	f	file:
thread_t	./zeromq/src/thread.hpp	/^        inline thread_t ()$/;"	f	class:zmq::thread_t
thread_t	./zeromq/src/thread.hpp	/^    class thread_t$/;"	c	namespace:zmq
ticks	./zeromq/src/socket_base.hpp	/^        int ticks;$/;"	m	class:zmq::socket_base_t
tid	./zeromq/src/object.hpp	/^        uint32_t tid;$/;"	m	class:zmq::object_t
timeout	./include/yampl/ISocket.h	/^	long timeout;$/;"	m	struct:yampl::ISocket::RecvArgs
timer_event	./zeromq/src/io_object.cpp	/^void zmq::io_object_t::timer_event (int)$/;"	f	class:zmq::io_object_t
timer_event	./zeromq/src/io_thread.cpp	/^void zmq::io_thread_t::timer_event (int)$/;"	f	class:zmq::io_thread_t
timer_event	./zeromq/src/ipc_connecter.cpp	/^void zmq::ipc_connecter_t::timer_event (int id_)$/;"	f	class:zmq::ipc_connecter_t
timer_event	./zeromq/src/pgm_receiver.cpp	/^void zmq::pgm_receiver_t::timer_event (int token)$/;"	f	class:zmq::pgm_receiver_t
timer_event	./zeromq/src/pgm_sender.cpp	/^void zmq::pgm_sender_t::timer_event (int token)$/;"	f	class:zmq::pgm_sender_t
timer_event	./zeromq/src/reaper.cpp	/^void zmq::reaper_t::timer_event (int)$/;"	f	class:zmq::reaper_t
timer_event	./zeromq/src/session_base.cpp	/^void zmq::session_base_t::timer_event (int id_)$/;"	f	class:zmq::session_base_t
timer_event	./zeromq/src/socket_base.cpp	/^void zmq::socket_base_t::timer_event (int)$/;"	f	class:zmq::socket_base_t
timer_event	./zeromq/src/tcp_connecter.cpp	/^void zmq::tcp_connecter_t::timer_event (int id_)$/;"	f	class:zmq::tcp_connecter_t
timer_info_t	./zeromq/src/poller_base.hpp	/^        struct timer_info_t$/;"	s	class:zmq::poller_base_t
timer_started	./zeromq/src/ipc_connecter.hpp	/^        bool timer_started;$/;"	m	class:zmq::ipc_connecter_t
timer_started	./zeromq/src/tcp_connecter.hpp	/^        bool timer_started;$/;"	m	class:zmq::tcp_connecter_t
timers	./zeromq/src/poller_base.hpp	/^        timers_t timers;$/;"	m	class:zmq::poller_base_t
timers_t	./zeromq/src/poller_base.hpp	/^        typedef std::multimap <uint64_t, timer_info_t> timers_t;$/;"	t	class:zmq::poller_base_t
tmpbuf	./zeromq/src/decoder.hpp	/^        unsigned char tmpbuf [8];$/;"	m	class:zmq::decoder_t
tmpbuf	./zeromq/src/encoder.hpp	/^        unsigned char tmpbuf [10];$/;"	m	class:zmq::encoder_t
tmpbuf	./zeromq/src/v1_decoder.hpp	/^        unsigned char tmpbuf [8];$/;"	m	class:zmq::v1_decoder_t
tmpbuf	./zeromq/src/v1_encoder.hpp	/^        unsigned char tmpbuf [9];$/;"	m	class:zmq::v1_encoder_t
to_char_type	./zeromq/src/blob.hpp	/^      to_char_type(const int_type& __c)$/;"	f	struct:std::char_traits
to_int_type	./zeromq/src/blob.hpp	/^      to_int_type(const char_type& __c) { return int_type(__c); }$/;"	f	struct:std::char_traits
to_read	./zeromq/src/decoder.hpp	/^        size_t to_read;$/;"	m	class:zmq::decoder_base_t
to_string	./include/yampl/utils/utils.h	/^std::string to_string(T value){$/;"	f	namespace:yampl
to_string	./zeromq/src/address.cpp	/^int zmq::address_t::to_string (std::string &addr_) const$/;"	f	class:zmq::address_t
to_string	./zeromq/src/ipc_address.cpp	/^int zmq::ipc_address_t::to_string (std::string &addr_)$/;"	f	class:zmq::ipc_address_t
to_string	./zeromq/src/tcp_address.cpp	/^int zmq::tcp_address_mask_t::to_string (std::string &addr_)$/;"	f	class:zmq::tcp_address_mask_t
to_string	./zeromq/src/tcp_address.cpp	/^int zmq::tcp_address_t::to_string (std::string &addr_)$/;"	f	class:zmq::tcp_address_t
to_write	./zeromq/src/encoder.hpp	/^        size_t to_write;$/;"	m	class:zmq::encoder_base_t
tocEntries	./zeromq/doc/zmq.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_bind.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_close.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_connect.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_ctx_destroy.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_ctx_get.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_ctx_new.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_ctx_set.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_epgm.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_errno.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_getsockopt.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_init.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_inproc.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_ipc.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_msg_close.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_msg_copy.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_msg_data.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_msg_get.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_msg_init.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_msg_init_data.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_msg_init_size.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_msg_more.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_msg_move.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_msg_recv.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_msg_send.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_msg_set.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_msg_size.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_pgm.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_poll.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_proxy.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_recv.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_recvmsg.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_send.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_sendmsg.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_setsockopt.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_socket.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_socket_monitor.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_strerror.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_tcp.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_term.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	./zeromq/doc/zmq_version.html	/^  function tocEntries(el, toclevels) {$/;"	f
top_build_prefix	./zeromq/Makefile	/^top_build_prefix = $/;"	m
top_build_prefix	./zeromq/builds/msvc/Makefile	/^top_build_prefix = ..\/..\/$/;"	m
top_build_prefix	./zeromq/doc/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	./zeromq/foreign/openpgm/Makefile	/^top_build_prefix = ..\/..\/$/;"	m
top_build_prefix	./zeromq/perf/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	./zeromq/src/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	./zeromq/tests/Makefile	/^top_build_prefix = ..\/$/;"	m
top_builddir	./zeromq/Makefile	/^top_builddir = .$/;"	m
top_builddir	./zeromq/builds/msvc/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	./zeromq/doc/Makefile	/^top_builddir = ..$/;"	m
top_builddir	./zeromq/foreign/openpgm/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	./zeromq/perf/Makefile	/^top_builddir = ..$/;"	m
top_builddir	./zeromq/src/Makefile	/^top_builddir = ..$/;"	m
top_builddir	./zeromq/tests/Makefile	/^top_builddir = ..$/;"	m
top_distdir	./zeromq/Makefile	/^top_distdir = $(distdir)$/;"	m
top_srcdir	./zeromq/Makefile	/^top_srcdir = .$/;"	m
top_srcdir	./zeromq/builds/msvc/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	./zeromq/doc/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	./zeromq/foreign/openpgm/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	./zeromq/perf/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	./zeromq/src/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	./zeromq/tests/Makefile	/^top_srcdir = ..$/;"	m
transform	./zeromq/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	./zeromq/builds/msvc/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	./zeromq/doc/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	./zeromq/foreign/openpgm/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	./zeromq/perf/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	./zeromq/src/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	./zeromq/tests/Makefile	/^transform = $(program_transform_name)$/;"	m
trie_t	./zeromq/src/trie.cpp	/^zmq::trie_t::trie_t () :$/;"	f	class:zmq::trie_t
trie_t	./zeromq/src/trie.hpp	/^    class trie_t$/;"	c	namespace:zmq
tryRecv	./include/yampl/ISocket.h	/^inline ssize_t ISocket::tryRecv(void *&buffer, long timeout, std::string &peerId){$/;"	f	class:yampl::ISocket
tryRecv	./include/yampl/ISocket.h	/^inline ssize_t ISocket::tryRecv(void *&buffer, size_t size, long timeout, std::string &peerId){$/;"	f	class:yampl::ISocket
tsi_comp	./zeromq/src/pgm_receiver.hpp	/^        struct tsi_comp$/;"	s	class:zmq::pgm_receiver_t
tune_tcp_keepalives	./zeromq/src/tcp.cpp	/^void zmq::tune_tcp_keepalives (fd_t s_, int keepalive_, int keepalive_cnt_, int keepalive_idle_, int keepalive_intvl_)$/;"	f	class:zmq
tune_tcp_socket	./zeromq/src/tcp.cpp	/^void zmq::tune_tcp_socket (fd_t s_)$/;"	f	class:zmq
tx_timer_id	./zeromq/src/pgm_sender.hpp	/^        enum {tx_timer_id = 0xa0, rx_timer_id = 0xa1};$/;"	e	enum:zmq::pgm_sender_t::__anon39
type	./zeromq/src/command.hpp	/^        } type;$/;"	m	struct:zmq::command_t	typeref:enum:zmq::command_t::type_t
type	./zeromq/src/msg.hpp	/^                unsigned char type;$/;"	m	struct:zmq::msg_t::__anon15::__anon16
type	./zeromq/src/msg.hpp	/^                unsigned char type;$/;"	m	struct:zmq::msg_t::__anon15::__anon17
type	./zeromq/src/msg.hpp	/^                unsigned char type;$/;"	m	struct:zmq::msg_t::__anon15::__anon18
type	./zeromq/src/msg.hpp	/^                unsigned char type;$/;"	m	struct:zmq::msg_t::__anon15::__anon19
type	./zeromq/src/options.hpp	/^        int type;$/;"	m	struct:zmq::options_t
type_delimiter	./zeromq/src/msg.hpp	/^            type_delimiter = 103,$/;"	e	enum:zmq::msg_t::type_t
type_lmsg	./zeromq/src/msg.hpp	/^            type_lmsg = 102,$/;"	e	enum:zmq::msg_t::type_t
type_max	./zeromq/src/msg.hpp	/^            type_max = 103$/;"	e	enum:zmq::msg_t::type_t
type_min	./zeromq/src/msg.hpp	/^            type_min = 101,$/;"	e	enum:zmq::msg_t::type_t
type_t	./zeromq/src/command.hpp	/^        enum type_t$/;"	g	struct:zmq::command_t
type_t	./zeromq/src/msg.hpp	/^        enum type_t$/;"	g	class:zmq::msg_t
type_vsm	./zeromq/src/msg.hpp	/^            type_vsm = 101,$/;"	e	enum:zmq::msg_t::type_t
u	./zeromq/src/msg.hpp	/^        } u;$/;"	m	class:zmq::msg_t	typeref:union:zmq::msg_t::__anon15
uint16_t	./zeromq/src/stdint.hpp	/^typedef unsigned __int16 uint16_t;$/;"	t
uint32_t	./zeromq/src/stdint.hpp	/^typedef unsigned __int32 uint32_t;$/;"	t
uint64_t	./zeromq/src/stdint.hpp	/^typedef unsigned __int64 uint64_t;$/;"	t
uint8_t	./zeromq/src/stdint.hpp	/^typedef unsigned __int8 uint8_t;$/;"	t
unblock_socket	./zeromq/src/ip.cpp	/^void zmq::unblock_socket (fd_t s_)$/;"	f	class:zmq
unlikely	./zeromq/src/likely.hpp	26;"	d
unlikely	./zeromq/src/likely.hpp	29;"	d
unlock	./include/yampl/utils/SpinLock.h	/^inline void SpinLock::unlock(){$/;"	f	class:yampl::SpinLock
unlock	./zeromq/src/mutex.hpp	/^        inline void unlock ()$/;"	f	class:zmq::mutex_t
unmatch	./zeromq/src/dist.cpp	/^void zmq::dist_t::unmatch ()$/;"	f	class:zmq::dist_t
unplug	./zeromq/src/io_object.cpp	/^void zmq::io_object_t::unplug ()$/;"	f	class:zmq::io_object_t
unplug	./zeromq/src/pgm_receiver.cpp	/^void zmq::pgm_receiver_t::unplug ()$/;"	f	class:zmq::pgm_receiver_t
unplug	./zeromq/src/pgm_sender.cpp	/^void zmq::pgm_sender_t::unplug ()$/;"	f	class:zmq::pgm_sender_t
unplug	./zeromq/src/stream_engine.cpp	/^void zmq::stream_engine_t::unplug ()$/;"	f	class:zmq::stream_engine_t
unpush	./zeromq/src/yqueue.hpp	/^        inline void unpush ()$/;"	f	class:zmq::yqueue_t
unregister_endpoints	./zeromq/src/ctx.cpp	/^void zmq::ctx_t::unregister_endpoints (socket_base_t *socket_)$/;"	f	class:zmq::ctx_t
unregister_endpoints	./zeromq/src/object.cpp	/^void zmq::object_t::unregister_endpoints (socket_base_t *socket_)$/;"	f	class:zmq::object_t
unregister_term_ack	./zeromq/src/own.cpp	/^void zmq::own_t::unregister_term_ack ()$/;"	f	class:zmq::own_t
unused	./zeromq/src/msg.hpp	/^                unsigned char unused [max_vsm_size + 1 - sizeof (content_t*)];$/;"	m	struct:zmq::msg_t::__anon15::__anon18
unused	./zeromq/src/msg.hpp	/^                unsigned char unused [max_vsm_size + 1];$/;"	m	struct:zmq::msg_t::__anon15::__anon16
unused	./zeromq/src/msg.hpp	/^                unsigned char unused [max_vsm_size + 1];$/;"	m	struct:zmq::msg_t::__anon15::__anon19
unwrite	./zeromq/src/ypipe.hpp	/^        inline bool unwrite (T *value_)$/;"	f	class:zmq::ypipe_t
up	./include/yampl/utils/Semaphore.h	/^inline void Semaphore::up(int n){$/;"	f	class:yampl::Semaphore
upipe_t	./zeromq/src/pipe.hpp	/^        typedef ypipe_t <msg_t, message_pipe_granularity> upipe_t;$/;"	t	class:zmq::pipe_t
uplink_handle	./zeromq/src/pgm_sender.hpp	/^        handle_t uplink_handle;$/;"	m	class:zmq::pgm_sender_t
useconds	./examples/benchmarks/benchmark.cpp	/^static long seconds, useconds;$/;"	v	file:
v1_decoder_t	./zeromq/src/v1_decoder.cpp	/^zmq::v1_decoder_t::v1_decoder_t (size_t bufsize_,$/;"	f	class:zmq::v1_decoder_t
v1_decoder_t	./zeromq/src/v1_decoder.hpp	/^    class v1_decoder_t : public decoder_base_t <v1_decoder_t>$/;"	c	namespace:zmq
v1_encoder_t	./zeromq/src/v1_encoder.cpp	/^zmq::v1_encoder_t::v1_encoder_t (size_t bufsize_, i_msg_source *msg_source_) :$/;"	f	class:zmq::v1_encoder_t
v1_encoder_t	./zeromq/src/v1_encoder.hpp	/^    class v1_encoder_t : public encoder_base_t <v1_encoder_t>$/;"	c	namespace:zmq
v1_protocol_t	./zeromq/src/v1_protocol.hpp	/^    class v1_protocol_t$/;"	c	namespace:zmq
valid	./zeromq/src/devpoll.hpp	/^            bool valid;$/;"	m	struct:zmq::devpoll_t::fd_entry_t
value	./include/yampl/utils/Semaphore.h	/^inline int Semaphore::value(){$/;"	f	class:yampl::Semaphore
value	./zeromq/src/atomic_counter.hpp	/^        volatile integer_t value;$/;"	m	class:zmq::atomic_counter_t
values	./zeromq/src/yqueue.hpp	/^             T values [N];$/;"	m	struct:zmq::yqueue_t::chunk_t
verbose	./zeromq/src/xpub.hpp	/^        bool verbose;$/;"	m	class:zmq::xpub_t
version	./zeromq/include/zmq.hpp	/^    inline void version (int *major_, int *minor_, int *patch_)$/;"	f	namespace:zmq
volatile	./cmake-build-debug/CMakeFiles/3.9.6/CompilerIdC/CMakeCCompilerId.c	11;"	d	file:
vsm	./zeromq/src/msg.hpp	/^            } vsm;$/;"	m	union:zmq::msg_t::__anon15	typeref:struct:zmq::msg_t::__anon15::__anon17
w	./zeromq/src/signaler.hpp	/^        fd_t w;$/;"	m	class:zmq::signaler_t
w	./zeromq/src/ypipe.hpp	/^        T *w;$/;"	m	class:zmq::ypipe_t
wait	./include/yampl/utils/Futex.h	/^inline bool Futex::wait(int expected, long timeout){$/;"	f	class:yampl::Futex
wait	./zeromq/src/signaler.cpp	/^int zmq::signaler_t::wait (int timeout_)$/;"	f	class:zmq::signaler_t
wake	./include/yampl/utils/Futex.h	/^inline int Futex::wake(int n){$/;"	f	class:yampl::Futex
what	./include/yampl/Exceptions.h	/^    virtual const char * what() const throw(){$/;"	f	class:yampl::ErrnoException
what	./include/yampl/Exceptions.h	/^    virtual const char * what() const throw(){$/;"	f	class:yampl::Exception
what	./zeromq/include/zmq.hpp	/^        virtual const char *what () const throw ()$/;"	f	class:zmq::error_t
win_assert	./zeromq/src/err.hpp	88;"	d
win_error	./zeromq/src/err.cpp	/^void zmq::win_error (char *buffer_, size_t buffer_size_)$/;"	f	class:zmq
worker	./zeromq/perf/inproc_lat.cpp	/^static unsigned int __stdcall worker (void *ctx_)$/;"	f	file:
worker	./zeromq/perf/inproc_thr.cpp	/^static unsigned int __stdcall worker (void *ctx_)$/;"	f	file:
worker	./zeromq/src/devpoll.hpp	/^        thread_t worker;$/;"	m	class:zmq::devpoll_t
worker	./zeromq/src/epoll.hpp	/^        thread_t worker;$/;"	m	class:zmq::epoll_t
worker	./zeromq/src/kqueue.hpp	/^        thread_t worker;$/;"	m	class:zmq::kqueue_t
worker	./zeromq/src/poll.hpp	/^        thread_t worker;$/;"	m	class:zmq::poll_t
worker	./zeromq/src/select.hpp	/^        thread_t worker;$/;"	m	class:zmq::select_t
worker	./zeromq/tests/test_connect_delay.cpp	/^static void *worker (void *)$/;"	f	file:
worker	./zeromq/tests/test_shutdown_stress.cpp	/^    static void *worker (void *s)$/;"	f	file:
worker	./zeromq/tests/test_timeo.cpp	/^    void *worker(void *ctx)$/;"	f
worker_routine	./zeromq/src/devpoll.cpp	/^void zmq::devpoll_t::worker_routine (void *arg_)$/;"	f	class:zmq::devpoll_t
worker_routine	./zeromq/src/epoll.cpp	/^void zmq::epoll_t::worker_routine (void *arg_)$/;"	f	class:zmq::epoll_t
worker_routine	./zeromq/src/kqueue.cpp	/^void zmq::kqueue_t::worker_routine (void *arg_)$/;"	f	class:zmq::kqueue_t
worker_routine	./zeromq/src/poll.cpp	/^void zmq::poll_t::worker_routine (void *arg_)$/;"	f	class:zmq::poll_t
worker_routine	./zeromq/src/select.cpp	/^void zmq::select_t::worker_routine (void *arg_)$/;"	f	class:zmq::select_t
write	./include/yampl/utils/RawPipe.h	/^inline void RawPipe::write(const void *buffer, size_t size){$/;"	f	class:yampl::RawPipe
write	./zeromq/src/dist.cpp	/^bool zmq::dist_t::write (pipe_t *pipe_, msg_t *msg_)$/;"	f	class:zmq::dist_t
write	./zeromq/src/pipe.cpp	/^bool zmq::pipe_t::write (msg_t *msg_)$/;"	f	class:zmq::pipe_t
write	./zeromq/src/stream_engine.cpp	/^int zmq::stream_engine_t::write (const void *data_, size_t size_)$/;"	f	class:zmq::stream_engine_t
write	./zeromq/src/ypipe.hpp	/^        inline void write (const T &value_, bool incomplete_)$/;"	f	class:zmq::ypipe_t
writeSplice	./include/yampl/utils/RawPipe.h	/^inline void RawPipe::writeSplice(const void *buffer, size_t size){$/;"	f	class:yampl::RawPipe
writeTo	./include/yampl/utils/UUID.h	/^inline void UUID::writeTo(RawPipe &pipe, void *header, size_t headerLength) const{$/;"	f	class:yampl::UUID
write_activated	./zeromq/src/session_base.cpp	/^void zmq::session_base_t::write_activated (pipe_t *pipe_)$/;"	f	class:zmq::session_base_t
write_activated	./zeromq/src/socket_base.cpp	/^void zmq::socket_base_t::write_activated (pipe_t *pipe_)$/;"	f	class:zmq::socket_base_t
write_pos	./zeromq/src/encoder.hpp	/^        unsigned char *write_pos;$/;"	m	class:zmq::encoder_base_t
write_size	./zeromq/src/pgm_sender.hpp	/^        size_t write_size;$/;"	m	class:zmq::pgm_sender_t
writefd	./include/yampl/utils/RawPipe.h	/^    int writefd;$/;"	m	class:yampl::RawPipe
writefds	./zeromq/src/select.hpp	/^        fd_set writefds;$/;"	m	class:zmq::select_t
wsa_assert	./zeromq/src/err.hpp	64;"	d
wsa_assert_no	./zeromq/src/err.hpp	77;"	d
wsa_error	./zeromq/src/err.cpp	/^const char *zmq::wsa_error()$/;"	f	class:zmq
wsa_error_no	./zeromq/src/err.cpp	/^const char *zmq::wsa_error_no (int no_)$/;"	f	class:zmq
wsa_error_to_errno	./zeromq/src/err.cpp	/^int zmq::wsa_error_to_errno (int errcode)$/;"	f	class:zmq
xattach_pipe	./zeromq/src/dealer.cpp	/^void zmq::dealer_t::xattach_pipe (pipe_t *pipe_, bool icanhasall_)$/;"	f	class:zmq::dealer_t
xattach_pipe	./zeromq/src/pair.cpp	/^void zmq::pair_t::xattach_pipe (pipe_t *pipe_, bool icanhasall_)$/;"	f	class:zmq::pair_t
xattach_pipe	./zeromq/src/pull.cpp	/^void zmq::pull_t::xattach_pipe (pipe_t *pipe_, bool icanhasall_)$/;"	f	class:zmq::pull_t
xattach_pipe	./zeromq/src/push.cpp	/^void zmq::push_t::xattach_pipe (pipe_t *pipe_, bool icanhasall_)$/;"	f	class:zmq::push_t
xattach_pipe	./zeromq/src/router.cpp	/^void zmq::router_t::xattach_pipe (pipe_t *pipe_, bool icanhasall_)$/;"	f	class:zmq::router_t
xattach_pipe	./zeromq/src/xpub.cpp	/^void zmq::xpub_t::xattach_pipe (pipe_t *pipe_, bool icanhasall_)$/;"	f	class:zmq::xpub_t
xattach_pipe	./zeromq/src/xsub.cpp	/^void zmq::xsub_t::xattach_pipe (pipe_t *pipe_, bool icanhasall_)$/;"	f	class:zmq::xsub_t
xchg	./zeromq/src/atomic_ptr.hpp	/^        inline T *xchg (T *val_)$/;"	f	class:zmq::atomic_ptr_t
xhas_in	./zeromq/src/dealer.cpp	/^bool zmq::dealer_t::xhas_in ()$/;"	f	class:zmq::dealer_t
xhas_in	./zeromq/src/pair.cpp	/^bool zmq::pair_t::xhas_in ()$/;"	f	class:zmq::pair_t
xhas_in	./zeromq/src/pub.cpp	/^bool zmq::pub_t::xhas_in ()$/;"	f	class:zmq::pub_t
xhas_in	./zeromq/src/pull.cpp	/^bool zmq::pull_t::xhas_in ()$/;"	f	class:zmq::pull_t
xhas_in	./zeromq/src/rep.cpp	/^bool zmq::rep_t::xhas_in ()$/;"	f	class:zmq::rep_t
xhas_in	./zeromq/src/req.cpp	/^bool zmq::req_t::xhas_in ()$/;"	f	class:zmq::req_t
xhas_in	./zeromq/src/router.cpp	/^bool zmq::router_t::xhas_in ()$/;"	f	class:zmq::router_t
xhas_in	./zeromq/src/socket_base.cpp	/^bool zmq::socket_base_t::xhas_in ()$/;"	f	class:zmq::socket_base_t
xhas_in	./zeromq/src/xpub.cpp	/^bool zmq::xpub_t::xhas_in ()$/;"	f	class:zmq::xpub_t
xhas_in	./zeromq/src/xsub.cpp	/^bool zmq::xsub_t::xhas_in ()$/;"	f	class:zmq::xsub_t
xhas_out	./zeromq/src/dealer.cpp	/^bool zmq::dealer_t::xhas_out ()$/;"	f	class:zmq::dealer_t
xhas_out	./zeromq/src/pair.cpp	/^bool zmq::pair_t::xhas_out ()$/;"	f	class:zmq::pair_t
xhas_out	./zeromq/src/push.cpp	/^bool zmq::push_t::xhas_out ()$/;"	f	class:zmq::push_t
xhas_out	./zeromq/src/rep.cpp	/^bool zmq::rep_t::xhas_out ()$/;"	f	class:zmq::rep_t
xhas_out	./zeromq/src/req.cpp	/^bool zmq::req_t::xhas_out ()$/;"	f	class:zmq::req_t
xhas_out	./zeromq/src/router.cpp	/^bool zmq::router_t::xhas_out ()$/;"	f	class:zmq::router_t
xhas_out	./zeromq/src/socket_base.cpp	/^bool zmq::socket_base_t::xhas_out ()$/;"	f	class:zmq::socket_base_t
xhas_out	./zeromq/src/sub.cpp	/^bool zmq::sub_t::xhas_out ()$/;"	f	class:zmq::sub_t
xhas_out	./zeromq/src/xpub.cpp	/^bool zmq::xpub_t::xhas_out ()$/;"	f	class:zmq::xpub_t
xhas_out	./zeromq/src/xsub.cpp	/^bool zmq::xsub_t::xhas_out ()$/;"	f	class:zmq::xsub_t
xhiccuped	./zeromq/src/socket_base.cpp	/^void zmq::socket_base_t::xhiccuped (pipe_t *)$/;"	f	class:zmq::socket_base_t
xhiccuped	./zeromq/src/xsub.cpp	/^void zmq::xsub_t::xhiccuped (pipe_t *pipe_)$/;"	f	class:zmq::xsub_t
xpub_session_t	./zeromq/src/xpub.cpp	/^zmq::xpub_session_t::xpub_session_t (io_thread_t *io_thread_, bool connect_,$/;"	f	class:zmq::xpub_session_t
xpub_session_t	./zeromq/src/xpub.hpp	/^    class xpub_session_t : public session_base_t$/;"	c	namespace:zmq
xpub_t	./zeromq/src/xpub.cpp	/^zmq::xpub_t::xpub_t (class ctx_t *parent_, uint32_t tid_, int sid_) :$/;"	f	class:zmq::xpub_t
xpub_t	./zeromq/src/xpub.hpp	/^    class xpub_t :$/;"	c	namespace:zmq
xread_activated	./zeromq/src/dealer.cpp	/^void zmq::dealer_t::xread_activated (pipe_t *pipe_)$/;"	f	class:zmq::dealer_t
xread_activated	./zeromq/src/pair.cpp	/^void zmq::pair_t::xread_activated (pipe_t *)$/;"	f	class:zmq::pair_t
xread_activated	./zeromq/src/pull.cpp	/^void zmq::pull_t::xread_activated (pipe_t *pipe_)$/;"	f	class:zmq::pull_t
xread_activated	./zeromq/src/router.cpp	/^void zmq::router_t::xread_activated (pipe_t *pipe_)$/;"	f	class:zmq::router_t
xread_activated	./zeromq/src/socket_base.cpp	/^void zmq::socket_base_t::xread_activated (pipe_t *)$/;"	f	class:zmq::socket_base_t
xread_activated	./zeromq/src/xpub.cpp	/^void zmq::xpub_t::xread_activated (pipe_t *pipe_)$/;"	f	class:zmq::xpub_t
xread_activated	./zeromq/src/xsub.cpp	/^void zmq::xsub_t::xread_activated (pipe_t *pipe_)$/;"	f	class:zmq::xsub_t
xrecv	./zeromq/src/dealer.cpp	/^int zmq::dealer_t::xrecv (msg_t *msg_, int flags_)$/;"	f	class:zmq::dealer_t
xrecv	./zeromq/src/pair.cpp	/^int zmq::pair_t::xrecv (msg_t *msg_, int flags_)$/;"	f	class:zmq::pair_t
xrecv	./zeromq/src/pub.cpp	/^int zmq::pub_t::xrecv (class msg_t *, int)$/;"	f	class:zmq::pub_t
xrecv	./zeromq/src/pull.cpp	/^int zmq::pull_t::xrecv (msg_t *msg_, int flags_)$/;"	f	class:zmq::pull_t
xrecv	./zeromq/src/rep.cpp	/^int zmq::rep_t::xrecv (msg_t *msg_, int flags_)$/;"	f	class:zmq::rep_t
xrecv	./zeromq/src/req.cpp	/^int zmq::req_t::xrecv (msg_t *msg_, int flags_)$/;"	f	class:zmq::req_t
xrecv	./zeromq/src/router.cpp	/^int zmq::router_t::xrecv (msg_t *msg_, int flags_)$/;"	f	class:zmq::router_t
xrecv	./zeromq/src/socket_base.cpp	/^int zmq::socket_base_t::xrecv (msg_t *, int)$/;"	f	class:zmq::socket_base_t
xrecv	./zeromq/src/xpub.cpp	/^int zmq::xpub_t::xrecv (msg_t *msg_, int flags_)$/;"	f	class:zmq::xpub_t
xrecv	./zeromq/src/xsub.cpp	/^int zmq::xsub_t::xrecv (msg_t *msg_, int flags_)$/;"	f	class:zmq::xsub_t
xsend	./zeromq/src/dealer.cpp	/^int zmq::dealer_t::xsend (msg_t *msg_, int flags_)$/;"	f	class:zmq::dealer_t
xsend	./zeromq/src/pair.cpp	/^int zmq::pair_t::xsend (msg_t *msg_, int flags_)$/;"	f	class:zmq::pair_t
xsend	./zeromq/src/push.cpp	/^int zmq::push_t::xsend (msg_t *msg_, int flags_)$/;"	f	class:zmq::push_t
xsend	./zeromq/src/rep.cpp	/^int zmq::rep_t::xsend (msg_t *msg_, int flags_)$/;"	f	class:zmq::rep_t
xsend	./zeromq/src/req.cpp	/^int zmq::req_t::xsend (msg_t *msg_, int flags_)$/;"	f	class:zmq::req_t
xsend	./zeromq/src/router.cpp	/^int zmq::router_t::xsend (msg_t *msg_, int flags_)$/;"	f	class:zmq::router_t
xsend	./zeromq/src/socket_base.cpp	/^int zmq::socket_base_t::xsend (msg_t *, int)$/;"	f	class:zmq::socket_base_t
xsend	./zeromq/src/sub.cpp	/^int zmq::sub_t::xsend (msg_t *, int)$/;"	f	class:zmq::sub_t
xsend	./zeromq/src/xpub.cpp	/^int zmq::xpub_t::xsend (msg_t *msg_, int flags_)$/;"	f	class:zmq::xpub_t
xsend	./zeromq/src/xsub.cpp	/^int zmq::xsub_t::xsend (msg_t *msg_, int flags_)$/;"	f	class:zmq::xsub_t
xsetsockopt	./zeromq/src/router.cpp	/^int zmq::router_t::xsetsockopt (int option_, const void *optval_,$/;"	f	class:zmq::router_t
xsetsockopt	./zeromq/src/socket_base.cpp	/^int zmq::socket_base_t::xsetsockopt (int, const void *, size_t)$/;"	f	class:zmq::socket_base_t
xsetsockopt	./zeromq/src/sub.cpp	/^int zmq::sub_t::xsetsockopt (int option_, const void *optval_,$/;"	f	class:zmq::sub_t
xsetsockopt	./zeromq/src/xpub.cpp	/^int zmq::xpub_t::xsetsockopt (int option_, const void *optval_,$/;"	f	class:zmq::xpub_t
xsub_session_t	./zeromq/src/xsub.cpp	/^zmq::xsub_session_t::xsub_session_t (io_thread_t *io_thread_, bool connect_,$/;"	f	class:zmq::xsub_session_t
xsub_session_t	./zeromq/src/xsub.hpp	/^    class xsub_session_t : public session_base_t$/;"	c	namespace:zmq
xsub_t	./zeromq/src/xsub.cpp	/^zmq::xsub_t::xsub_t (class ctx_t *parent_, uint32_t tid_, int sid_) :$/;"	f	class:zmq::xsub_t
xsub_t	./zeromq/src/xsub.hpp	/^    class xsub_t :$/;"	c	namespace:zmq
xterminated	./zeromq/src/dealer.cpp	/^void zmq::dealer_t::xterminated (pipe_t *pipe_)$/;"	f	class:zmq::dealer_t
xterminated	./zeromq/src/pair.cpp	/^void zmq::pair_t::xterminated (pipe_t *pipe_)$/;"	f	class:zmq::pair_t
xterminated	./zeromq/src/pull.cpp	/^void zmq::pull_t::xterminated (pipe_t *pipe_)$/;"	f	class:zmq::pull_t
xterminated	./zeromq/src/push.cpp	/^void zmq::push_t::xterminated (pipe_t *pipe_)$/;"	f	class:zmq::push_t
xterminated	./zeromq/src/router.cpp	/^void zmq::router_t::xterminated (pipe_t *pipe_)$/;"	f	class:zmq::router_t
xterminated	./zeromq/src/xpub.cpp	/^void zmq::xpub_t::xterminated (pipe_t *pipe_)$/;"	f	class:zmq::xpub_t
xterminated	./zeromq/src/xsub.cpp	/^void zmq::xsub_t::xterminated (pipe_t *pipe_)$/;"	f	class:zmq::xsub_t
xwrite_activated	./zeromq/src/dealer.cpp	/^void zmq::dealer_t::xwrite_activated (pipe_t *pipe_)$/;"	f	class:zmq::dealer_t
xwrite_activated	./zeromq/src/pair.cpp	/^void zmq::pair_t::xwrite_activated (pipe_t *)$/;"	f	class:zmq::pair_t
xwrite_activated	./zeromq/src/push.cpp	/^void zmq::push_t::xwrite_activated (pipe_t *pipe_)$/;"	f	class:zmq::push_t
xwrite_activated	./zeromq/src/router.cpp	/^void zmq::router_t::xwrite_activated (pipe_t *pipe_)$/;"	f	class:zmq::router_t
xwrite_activated	./zeromq/src/socket_base.cpp	/^void zmq::socket_base_t::xwrite_activated (pipe_t *)$/;"	f	class:zmq::socket_base_t
xwrite_activated	./zeromq/src/xpub.cpp	/^void zmq::xpub_t::xwrite_activated (pipe_t *pipe_)$/;"	f	class:zmq::xpub_t
xwrite_activated	./zeromq/src/xsub.cpp	/^void zmq::xsub_t::xwrite_activated (pipe_t *pipe_)$/;"	f	class:zmq::xsub_t
yampl	./include/yampl/Channel.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/Exceptions.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/ISocket.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/ISocketFactory.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/SocketFactory.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/generic/ClientSocket.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/generic/ServerSocketBase.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/generic/ServiceSocketBase.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/generic/SimpleClientSocket.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/generic/SimpleServerSocket.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/pipe/ClientSocket.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/pipe/ConsumerSocket.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/pipe/PipeSocketBase.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/pipe/ProducerSocket.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/pipe/ServerSocket.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/pipe/SimpleClientSocket.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/pipe/SimpleServerSocket.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/pipe/SocketFactory.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/shm/ClientSocket.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/shm/ConsumerSocket.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/shm/PipeSocketBase.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/shm/ProducerSocket.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/shm/ServerSocket.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/shm/SimpleClientSocket.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/shm/SimpleServerSocket.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/shm/SocketFactory.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/utils/Futex.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/utils/Poller.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/utils/RawPipe.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/utils/RingBuffer.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/utils/Semaphore.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/utils/SharedMemory.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/utils/SpinLock.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/utils/Thread.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/utils/UUID.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/utils/utils.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/zeromq/ClientSocket.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/zeromq/ServerSocket.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/zeromq/SocketBase.h	/^namespace yampl{$/;"	n
yampl	./include/yampl/zeromq/SocketFactory.h	/^namespace yampl{$/;"	n
yampl	./src/SocketFactory.cpp	/^namespace yampl{$/;"	n	file:
yampl	./src/pipe/PipeSocketBase.cpp	/^namespace yampl{$/;"	n	file:
yampl	./src/pipe/PipeSocketFactory.cpp	/^namespace yampl{$/;"	n	file:
yampl	./src/shm/SHMSocketBase.cpp	/^namespace yampl{$/;"	n	file:
yampl	./src/shm/SHMSocketFactory.cpp	/^namespace yampl{$/;"	n	file:
yampl	./src/shm/ServerSocket.cpp	/^namespace yampl{$/;"	n	file:
yampl	./src/zeromq/ClientSocket.cpp	/^namespace yampl{$/;"	n	file:
yampl	./src/zeromq/ServerSocket.cpp	/^namespace yampl{$/;"	n	file:
yampl	./src/zeromq/SocketBase.cpp	/^namespace yampl{$/;"	n	file:
yampl	./src/zeromq/SocketFactory.cpp	/^namespace yampl{$/;"	n	file:
ypipe_t	./zeromq/src/ypipe.hpp	/^        inline ypipe_t ()$/;"	f	class:zmq::ypipe_t
ypipe_t	./zeromq/src/ypipe.hpp	/^    template <typename T, int N> class ypipe_t$/;"	c	namespace:zmq
yqueue_t	./zeromq/src/yqueue.hpp	/^        inline yqueue_t ()$/;"	f	class:zmq::yqueue_t
yqueue_t	./zeromq/src/yqueue.hpp	/^    template <typename T, int N> class yqueue_t$/;"	c	namespace:zmq
zeromq	./include/yampl/zeromq/ClientSocket.h	/^namespace zeromq{$/;"	n	namespace:yampl
zeromq	./include/yampl/zeromq/ServerSocket.h	/^namespace zeromq{$/;"	n	namespace:yampl
zeromq	./include/yampl/zeromq/SocketBase.h	/^namespace zeromq{$/;"	n	namespace:yampl
zeromq	./include/yampl/zeromq/SocketFactory.h	/^namespace zeromq{$/;"	n	namespace:yampl
zeromq	./src/zeromq/ClientSocket.cpp	/^namespace zeromq{$/;"	n	namespace:yampl	file:
zeromq	./src/zeromq/ServerSocket.cpp	/^namespace zeromq{$/;"	n	namespace:yampl	file:
zeromq	./src/zeromq/SocketBase.cpp	/^namespace zeromq{$/;"	n	namespace:yampl	file:
zeromq	./src/zeromq/SocketFactory.cpp	/^namespace zeromq{$/;"	n	namespace:yampl	file:
zmq	./include/yampl/zeromq/SocketBase.h	/^namespace zmq{$/;"	n
zmq	./include/yampl/zeromq/SocketFactory.h	/^namespace zmq{$/;"	n
zmq	./zeromq/include/zmq.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/address.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/array.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/atomic_counter.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/atomic_ptr.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/blob.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/clock.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/command.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/config.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/ctx.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/dealer.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/decoder.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/devpoll.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/dist.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/encoder.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/epoll.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/err.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/fd.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/fq.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/i_decoder.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/i_encoder.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/i_engine.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/i_msg_sink.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/i_msg_source.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/i_poll_events.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/io_object.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/io_thread.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/ip.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/ipc_address.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/ipc_connecter.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/ipc_listener.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/kqueue.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/lb.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/mailbox.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/msg.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/mtrie.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/mutex.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/object.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/options.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/own.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/pair.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/pgm_receiver.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/pgm_sender.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/pgm_socket.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/pipe.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/poll.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/poller_base.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/proxy.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/pub.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/pull.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/push.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/random.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/reaper.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/rep.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/req.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/router.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/select.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/session_base.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/signaler.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/socket_base.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/stream_engine.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/sub.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/tcp.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/tcp_address.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/tcp_connecter.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/tcp_listener.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/thread.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/trie.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/v1_decoder.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/v1_encoder.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/v1_protocol.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/wire.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/xpub.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/xsub.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/ypipe.hpp	/^namespace zmq$/;"	n
zmq	./zeromq/src/yqueue.hpp	/^namespace zmq$/;"	n
zmq_abort	./zeromq/src/err.cpp	/^void zmq::zmq_abort(const char *errmsg_)$/;"	f	class:zmq
zmq_assert	./zeromq/src/err.hpp	104;"	d
zmq_bind	./zeromq/src/zmq.cpp	/^int zmq_bind (void *s_, const char *addr_)$/;"	f
zmq_close	./zeromq/src/zmq.cpp	/^int zmq_close (void *s_)$/;"	f
zmq_connect	./zeromq/src/zmq.cpp	/^int zmq_connect (void *s_, const char *addr_)$/;"	f
zmq_ctx_destroy	./zeromq/src/zmq.cpp	/^int zmq_ctx_destroy (void *ctx_)$/;"	f
zmq_ctx_get	./zeromq/src/zmq.cpp	/^int zmq_ctx_get (void *ctx_, int option_)$/;"	f
zmq_ctx_new	./zeromq/src/zmq.cpp	/^void *zmq_ctx_new (void)$/;"	f
zmq_ctx_set	./zeromq/src/zmq.cpp	/^int zmq_ctx_set (void *ctx_, int option_, int optval_)$/;"	f
zmq_device	./zeromq/src/zmq.cpp	/^int zmq_device (int type, void *frontend_, void *backend_)$/;"	f
zmq_disconnect	./zeromq/src/zmq.cpp	/^int zmq_disconnect (void *s_, const char *addr_)$/;"	f
zmq_errno	./zeromq/src/zmq.cpp	/^int zmq_errno ()$/;"	f
zmq_event_t	./zeromq/include/zmq.h	/^} zmq_event_t;$/;"	t	typeref:struct:__anon40
zmq_free_fn	./zeromq/include/zmq.h	/^typedef void (zmq_free_fn) (void *data, void *hint);$/;"	t
zmq_getsockopt	./zeromq/src/zmq.cpp	/^int zmq_getsockopt (void *s_, int option_, void *optval_, size_t *optvallen_)$/;"	f
zmq_init	./zeromq/src/zmq.cpp	/^void *zmq_init (int io_threads_)$/;"	f
zmq_msg_close	./zeromq/src/zmq.cpp	/^int zmq_msg_close (zmq_msg_t *msg_)$/;"	f
zmq_msg_copy	./zeromq/src/zmq.cpp	/^int zmq_msg_copy (zmq_msg_t *dest_, zmq_msg_t *src_)$/;"	f
zmq_msg_data	./zeromq/src/zmq.cpp	/^void *zmq_msg_data (zmq_msg_t *msg_)$/;"	f
zmq_msg_get	./zeromq/src/zmq.cpp	/^int zmq_msg_get (zmq_msg_t *msg_, int option_)$/;"	f
zmq_msg_init	./zeromq/src/zmq.cpp	/^int zmq_msg_init (zmq_msg_t *msg_)$/;"	f
zmq_msg_init_data	./zeromq/src/zmq.cpp	/^int zmq_msg_init_data (zmq_msg_t *msg_, void *data_, size_t size_,$/;"	f
zmq_msg_init_size	./zeromq/src/zmq.cpp	/^int zmq_msg_init_size (zmq_msg_t *msg_, size_t size_)$/;"	f
zmq_msg_more	./zeromq/src/zmq.cpp	/^int zmq_msg_more (zmq_msg_t *msg_)$/;"	f
zmq_msg_move	./zeromq/src/zmq.cpp	/^int zmq_msg_move (zmq_msg_t *dest_, zmq_msg_t *src_)$/;"	f
zmq_msg_recv	./zeromq/src/zmq.cpp	/^int zmq_msg_recv (zmq_msg_t *msg_, void *s_, int flags_)$/;"	f
zmq_msg_send	./zeromq/src/zmq.cpp	/^int zmq_msg_send (zmq_msg_t *msg_, void *s_, int flags_)$/;"	f
zmq_msg_set	./zeromq/src/zmq.cpp	/^int zmq_msg_set (zmq_msg_t *, int, int)$/;"	f
zmq_msg_size	./zeromq/src/zmq.cpp	/^size_t zmq_msg_size (zmq_msg_t *msg_)$/;"	f
zmq_msg_size_check	./zeromq/src/msg.cpp	/^typedef char zmq_msg_size_check$/;"	t	file:
zmq_msg_t	./zeromq/include/zmq.h	/^typedef struct zmq_msg_t {unsigned char _ [32];} zmq_msg_t;$/;"	s
zmq_msg_t	./zeromq/include/zmq.h	/^typedef struct zmq_msg_t {unsigned char _ [32];} zmq_msg_t;$/;"	t	typeref:struct:zmq_msg_t
zmq_poll	./zeromq/src/zmq.cpp	/^int zmq_poll (zmq_pollitem_t *items_, int nitems_, long timeout_)$/;"	f
zmq_pollitem_t	./zeromq/include/zmq.h	/^} zmq_pollitem_t;$/;"	t	typeref:struct:__anon52
zmq_proxy	./zeromq/src/zmq.cpp	/^int zmq_proxy (void *frontend_, void *backend_, void *control_)$/;"	f
zmq_recv	./zeromq/src/zmq.cpp	/^int zmq_recv (void *s_, void *buf_, size_t len_, int flags_)$/;"	f
zmq_recviov	./zeromq/src/zmq.cpp	/^int zmq_recviov (void *s_, iovec *a_, size_t *count_, int flags_)$/;"	f
zmq_recvmsg	./zeromq/src/zmq.cpp	/^int zmq_recvmsg (void *s_, zmq_msg_t *msg_, int flags_)$/;"	f
zmq_send	./zeromq/src/zmq.cpp	/^int zmq_send (void *s_, const void *buf_, size_t len_, int flags_)$/;"	f
zmq_sendiov	./zeromq/src/zmq.cpp	/^int zmq_sendiov (void *s_, iovec *a_, size_t count_, int flags_)$/;"	f
zmq_sendmsg	./zeromq/src/zmq.cpp	/^int zmq_sendmsg (void *s_, zmq_msg_t *msg_, int flags_)$/;"	f
zmq_setsockopt	./zeromq/src/zmq.cpp	/^int zmq_setsockopt (void *s_, int option_, const void *optval_,$/;"	f
zmq_sleep	./zeromq/src/zmq.cpp	/^void zmq_sleep (int seconds_)$/;"	f
zmq_sleep	./zeromq/src/zmq_utils.cpp	/^void zmq_sleep (int seconds_)$/;"	f
zmq_socket	./zeromq/src/zmq.cpp	/^void *zmq_socket (void *ctx_, int type_)$/;"	f
zmq_socket_monitor	./zeromq/src/zmq.cpp	/^int zmq_socket_monitor (void *s_, const char *addr_, int events_)$/;"	f
zmq_stopwatch_start	./zeromq/src/zmq.cpp	/^void *zmq_stopwatch_start ()$/;"	f
zmq_stopwatch_start	./zeromq/src/zmq_utils.cpp	/^void *zmq_stopwatch_start ()$/;"	f
zmq_stopwatch_stop	./zeromq/src/zmq.cpp	/^unsigned long zmq_stopwatch_stop (void *watch_)$/;"	f
zmq_stopwatch_stop	./zeromq/src/zmq_utils.cpp	/^unsigned long zmq_stopwatch_stop (void *watch_)$/;"	f
zmq_strerror	./zeromq/src/zmq.cpp	/^const char *zmq_strerror (int errnum_)$/;"	f
zmq_term	./zeromq/src/zmq.cpp	/^int zmq_term (void *ctx_)$/;"	f
zmq_unbind	./zeromq/src/zmq.cpp	/^int zmq_unbind (void *s_, const char *addr_)$/;"	f
zmq_version	./zeromq/src/zmq.cpp	/^void zmq_version (int *major_, int *minor_, int *patch_)$/;"	f
~ClientSocket	./include/yampl/generic/ClientSocket.h	/^inline ClientSocket<T>::~ClientSocket(){$/;"	f	class:yampl::ClientSocket
~ClientSocket	./src/zeromq/ClientSocket.cpp	/^ClientSocket::~ClientSocket(){$/;"	f	class:yampl::zeromq::ClientSocket
~Exception	./include/yampl/Exceptions.h	/^    virtual ~Exception() throw() {}$/;"	f	class:yampl::Exception
~ISocket	./include/yampl/ISocket.h	/^    virtual ~ISocket(){}$/;"	f	class:yampl::ISocket
~ISocketFactory	./include/yampl/ISocketFactory.h	/^    virtual ~ISocketFactory(){}$/;"	f	class:yampl::ISocketFactory
~PipeSocketBase	./src/pipe/PipeSocketBase.cpp	/^PipeSocketBase::~PipeSocketBase(){$/;"	f	class:yampl::pipe::PipeSocketBase
~PipeSocketBase	./src/shm/SHMSocketBase.cpp	/^PipeSocketBase::~PipeSocketBase(){$/;"	f	class:yampl::shm::PipeSocketBase
~Poller	./include/yampl/utils/Poller.h	/^inline Poller::~Poller(){$/;"	f	class:yampl::Poller
~RawPipe	./include/yampl/utils/RawPipe.h	/^inline RawPipe::~RawPipe(){$/;"	f	class:yampl::RawPipe
~ServerSocket	./src/zeromq/ServerSocket.cpp	/^ServerSocket::~ServerSocket(){$/;"	f	class:yampl::zeromq::ServerSocket
~ServerSocketBase	./include/yampl/generic/ServerSocketBase.h	/^inline ServerSocketBase<T>::~ServerSocketBase(){$/;"	f	class:yampl::ServerSocketBase
~ServiceSocketBase	./include/yampl/generic/ServiceSocketBase.h	/^inline ServiceSocketBase<P, C>::~ServiceSocketBase(){$/;"	f	class:yampl::ServiceSocketBase
~SharedMemory	./include/yampl/utils/SharedMemory.h	/^inline SharedMemory::~SharedMemory(){$/;"	f	class:yampl::SharedMemory
~SocketBase	./src/zeromq/SocketBase.cpp	/^SocketBase::~SocketBase(){$/;"	f	class:yampl::zeromq::SocketBase
~SocketFactory	./src/SocketFactory.cpp	/^SocketFactory::~SocketFactory(){$/;"	f	class:yampl::SocketFactory
~SocketFactory	./src/zeromq/SocketFactory.cpp	/^SocketFactory::~SocketFactory(){$/;"	f	class:yampl::zeromq::SocketFactory
~Thread	./include/yampl/utils/Thread.h	/^inline Thread::~Thread(){$/;"	f	class:yampl::Thread
~address_t	./zeromq/src/address.cpp	/^zmq::address_t::~address_t ()$/;"	f	class:zmq::address_t
~array_item_t	./zeromq/src/array.hpp	/^        inline virtual ~array_item_t ()$/;"	f	class:zmq::array_item_t
~array_t	./zeromq/src/array.hpp	/^        inline ~array_t ()$/;"	f	class:zmq::array_t
~atomic_counter_t	./zeromq/src/atomic_counter.hpp	/^        inline ~atomic_counter_t ()$/;"	f	class:zmq::atomic_counter_t
~atomic_ptr_t	./zeromq/src/atomic_ptr.hpp	/^        inline ~atomic_ptr_t ()$/;"	f	class:zmq::atomic_ptr_t
~clock_t	./zeromq/src/clock.cpp	/^zmq::clock_t::~clock_t ()$/;"	f	class:zmq::clock_t
~context_t	./zeromq/include/zmq.hpp	/^        inline ~context_t ()$/;"	f	class:zmq::context_t
~ctx_t	./zeromq/src/ctx.cpp	/^zmq::ctx_t::~ctx_t ()$/;"	f	class:zmq::ctx_t
~dealer_session_t	./zeromq/src/dealer.cpp	/^zmq::dealer_session_t::~dealer_session_t ()$/;"	f	class:zmq::dealer_session_t
~dealer_t	./zeromq/src/dealer.cpp	/^zmq::dealer_t::~dealer_t ()$/;"	f	class:zmq::dealer_t
~decoder_base_t	./zeromq/src/decoder.hpp	/^        inline virtual ~decoder_base_t ()$/;"	f	class:zmq::decoder_base_t
~decoder_t	./zeromq/src/decoder.cpp	/^zmq::decoder_t::~decoder_t ()$/;"	f	class:zmq::decoder_t
~devpoll_t	./zeromq/src/devpoll.cpp	/^zmq::devpoll_t::~devpoll_t ()$/;"	f	class:zmq::devpoll_t
~dist_t	./zeromq/src/dist.cpp	/^zmq::dist_t::~dist_t ()$/;"	f	class:zmq::dist_t
~encoder_base_t	./zeromq/src/encoder.hpp	/^        inline virtual ~encoder_base_t ()$/;"	f	class:zmq::encoder_base_t
~encoder_t	./zeromq/src/encoder.cpp	/^zmq::encoder_t::~encoder_t ()$/;"	f	class:zmq::encoder_t
~epoll_t	./zeromq/src/epoll.cpp	/^zmq::epoll_t::~epoll_t ()$/;"	f	class:zmq::epoll_t
~fq_t	./zeromq/src/fq.cpp	/^zmq::fq_t::~fq_t ()$/;"	f	class:zmq::fq_t
~i_decoder	./zeromq/src/i_decoder.hpp	/^        virtual ~i_decoder () {}$/;"	f	struct:zmq::i_decoder
~i_encoder	./zeromq/src/i_encoder.hpp	/^        virtual ~i_encoder () {}$/;"	f	struct:zmq::i_encoder
~i_engine	./zeromq/src/i_engine.hpp	/^        virtual ~i_engine () {}$/;"	f	struct:zmq::i_engine
~i_msg_sink	./zeromq/src/i_msg_sink.hpp	/^          virtual ~i_msg_sink () {}$/;"	f	class:zmq::i_msg_sink
~i_msg_source	./zeromq/src/i_msg_source.hpp	/^          virtual ~i_msg_source () {}$/;"	f	class:zmq::i_msg_source
~i_pipe_events	./zeromq/src/pipe.hpp	/^        virtual ~i_pipe_events () {}$/;"	f	struct:zmq::i_pipe_events
~i_poll_events	./zeromq/src/i_poll_events.hpp	/^        virtual ~i_poll_events () {}$/;"	f	struct:zmq::i_poll_events
~io_object_t	./zeromq/src/io_object.cpp	/^zmq::io_object_t::~io_object_t ()$/;"	f	class:zmq::io_object_t
~io_thread_t	./zeromq/src/io_thread.cpp	/^zmq::io_thread_t::~io_thread_t ()$/;"	f	class:zmq::io_thread_t
~ipc_address_t	./zeromq/src/ipc_address.cpp	/^zmq::ipc_address_t::~ipc_address_t ()$/;"	f	class:zmq::ipc_address_t
~ipc_connecter_t	./zeromq/src/ipc_connecter.cpp	/^zmq::ipc_connecter_t::~ipc_connecter_t ()$/;"	f	class:zmq::ipc_connecter_t
~ipc_listener_t	./zeromq/src/ipc_listener.cpp	/^zmq::ipc_listener_t::~ipc_listener_t ()$/;"	f	class:zmq::ipc_listener_t
~kqueue_t	./zeromq/src/kqueue.cpp	/^zmq::kqueue_t::~kqueue_t ()$/;"	f	class:zmq::kqueue_t
~lb_t	./zeromq/src/lb.cpp	/^zmq::lb_t::~lb_t ()$/;"	f	class:zmq::lb_t
~mailbox_t	./zeromq/src/mailbox.cpp	/^zmq::mailbox_t::~mailbox_t ()$/;"	f	class:zmq::mailbox_t
~message_t	./zeromq/include/zmq.hpp	/^        inline ~message_t ()$/;"	f	class:zmq::message_t
~mtrie_t	./zeromq/src/mtrie.cpp	/^zmq::mtrie_t::~mtrie_t ()$/;"	f	class:zmq::mtrie_t
~mutex_t	./zeromq/src/mutex.hpp	/^        inline ~mutex_t ()$/;"	f	class:zmq::mutex_t
~object_t	./zeromq/src/object.cpp	/^zmq::object_t::~object_t ()$/;"	f	class:zmq::object_t
~own_t	./zeromq/src/own.cpp	/^zmq::own_t::~own_t ()$/;"	f	class:zmq::own_t
~pair_session_t	./zeromq/src/pair.cpp	/^zmq::pair_session_t::~pair_session_t ()$/;"	f	class:zmq::pair_session_t
~pair_t	./zeromq/src/pair.cpp	/^zmq::pair_t::~pair_t ()$/;"	f	class:zmq::pair_t
~pgm_receiver_t	./zeromq/src/pgm_receiver.cpp	/^zmq::pgm_receiver_t::~pgm_receiver_t ()$/;"	f	class:zmq::pgm_receiver_t
~pgm_sender_t	./zeromq/src/pgm_sender.cpp	/^zmq::pgm_sender_t::~pgm_sender_t ()$/;"	f	class:zmq::pgm_sender_t
~pgm_socket_t	./zeromq/src/pgm_socket.cpp	/^zmq::pgm_socket_t::~pgm_socket_t ()$/;"	f	class:zmq::pgm_socket_t
~pipe_t	./zeromq/src/pipe.cpp	/^zmq::pipe_t::~pipe_t ()$/;"	f	class:zmq::pipe_t
~poll_t	./zeromq/src/poll.cpp	/^zmq::poll_t::~poll_t ()$/;"	f	class:zmq::poll_t
~poller_base_t	./zeromq/src/poller_base.cpp	/^zmq::poller_base_t::~poller_base_t ()$/;"	f	class:zmq::poller_base_t
~pub_session_t	./zeromq/src/pub.cpp	/^zmq::pub_session_t::~pub_session_t ()$/;"	f	class:zmq::pub_session_t
~pub_t	./zeromq/src/pub.cpp	/^zmq::pub_t::~pub_t ()$/;"	f	class:zmq::pub_t
~pull_session_t	./zeromq/src/pull.cpp	/^zmq::pull_session_t::~pull_session_t ()$/;"	f	class:zmq::pull_session_t
~pull_t	./zeromq/src/pull.cpp	/^zmq::pull_t::~pull_t ()$/;"	f	class:zmq::pull_t
~push_session_t	./zeromq/src/push.cpp	/^zmq::push_session_t::~push_session_t ()$/;"	f	class:zmq::push_session_t
~push_t	./zeromq/src/push.cpp	/^zmq::push_t::~push_t ()$/;"	f	class:zmq::push_t
~reaper_t	./zeromq/src/reaper.cpp	/^zmq::reaper_t::~reaper_t ()$/;"	f	class:zmq::reaper_t
~rep_session_t	./zeromq/src/rep.cpp	/^zmq::rep_session_t::~rep_session_t ()$/;"	f	class:zmq::rep_session_t
~rep_t	./zeromq/src/rep.cpp	/^zmq::rep_t::~rep_t ()$/;"	f	class:zmq::rep_t
~req_session_t	./zeromq/src/req.cpp	/^zmq::req_session_t::~req_session_t ()$/;"	f	class:zmq::req_session_t
~req_t	./zeromq/src/req.cpp	/^zmq::req_t::~req_t ()$/;"	f	class:zmq::req_t
~router_session_t	./zeromq/src/router.cpp	/^zmq::router_session_t::~router_session_t ()$/;"	f	class:zmq::router_session_t
~router_t	./zeromq/src/router.cpp	/^zmq::router_t::~router_t ()$/;"	f	class:zmq::router_t
~select_t	./zeromq/src/select.cpp	/^zmq::select_t::~select_t ()$/;"	f	class:zmq::select_t
~session_base_t	./zeromq/src/session_base.cpp	/^zmq::session_base_t::~session_base_t ()$/;"	f	class:zmq::session_base_t
~signaler_t	./zeromq/src/signaler.cpp	/^zmq::signaler_t::~signaler_t ()$/;"	f	class:zmq::signaler_t
~socket_base_t	./zeromq/src/socket_base.cpp	/^zmq::socket_base_t::~socket_base_t ()$/;"	f	class:zmq::socket_base_t
~socket_t	./zeromq/include/zmq.hpp	/^        inline ~socket_t ()$/;"	f	class:zmq::socket_t
~stream_engine_t	./zeromq/src/stream_engine.cpp	/^zmq::stream_engine_t::~stream_engine_t ()$/;"	f	class:zmq::stream_engine_t
~sub_session_t	./zeromq/src/sub.cpp	/^zmq::sub_session_t::~sub_session_t ()$/;"	f	class:zmq::sub_session_t
~sub_t	./zeromq/src/sub.cpp	/^zmq::sub_t::~sub_t ()$/;"	f	class:zmq::sub_t
~tcp_address_t	./zeromq/src/tcp_address.cpp	/^zmq::tcp_address_t::~tcp_address_t ()$/;"	f	class:zmq::tcp_address_t
~tcp_connecter_t	./zeromq/src/tcp_connecter.cpp	/^zmq::tcp_connecter_t::~tcp_connecter_t ()$/;"	f	class:zmq::tcp_connecter_t
~tcp_listener_t	./zeromq/src/tcp_listener.cpp	/^zmq::tcp_listener_t::~tcp_listener_t ()$/;"	f	class:zmq::tcp_listener_t
~trie_t	./zeromq/src/trie.cpp	/^zmq::trie_t::~trie_t ()$/;"	f	class:zmq::trie_t
~v1_decoder_t	./zeromq/src/v1_decoder.cpp	/^zmq::v1_decoder_t::~v1_decoder_t ()$/;"	f	class:zmq::v1_decoder_t
~v1_encoder_t	./zeromq/src/v1_encoder.cpp	/^zmq::v1_encoder_t::~v1_encoder_t ()$/;"	f	class:zmq::v1_encoder_t
~xpub_session_t	./zeromq/src/xpub.cpp	/^zmq::xpub_session_t::~xpub_session_t ()$/;"	f	class:zmq::xpub_session_t
~xpub_t	./zeromq/src/xpub.cpp	/^zmq::xpub_t::~xpub_t ()$/;"	f	class:zmq::xpub_t
~xsub_session_t	./zeromq/src/xsub.cpp	/^zmq::xsub_session_t::~xsub_session_t ()$/;"	f	class:zmq::xsub_session_t
~xsub_t	./zeromq/src/xsub.cpp	/^zmq::xsub_t::~xsub_t ()$/;"	f	class:zmq::xsub_t
~ypipe_t	./zeromq/src/ypipe.hpp	/^        inline virtual ~ypipe_t ()$/;"	f	class:zmq::ypipe_t
~yqueue_t	./zeromq/src/yqueue.hpp	/^        inline ~yqueue_t ()$/;"	f	class:zmq::yqueue_t
